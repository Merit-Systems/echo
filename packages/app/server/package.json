{
  "name": "echo-server",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "copy-schema": "mkdir -p prisma && cp ../control/prisma/schema.prisma prisma/ && cp -r ../control/prisma/migrations prisma/",
    "prisma:generate": "pnpx prisma generate",
    "setup-prisma": "pnpm run copy-schema && pnpm run prisma:generate",
    "copy-prisma": "pnpm run setup-prisma",
    "copy-prisma-to-dist": "mkdir -p dist/generated && cp -r src/generated/prisma dist/generated/",
    "prebuild": "pnpm run copy-schema && pnpm run prisma:generate",
    "predev": "pnpm run copy-prisma",
    "prestart": "pnpm run copy-prisma",
    "dev": "NODE_OPTIONS=\"--require @opentelemetry/auto-instrumentations-node/register\" npx tsx src/server.ts",
    "start": "NODE_OPTIONS=\"--require @opentelemetry/auto-instrumentations-node/register\" node dist/server.js",
    "prisma:migrate-deploy": "pnpx prisma migrate deploy",
    "anthropic-client": "npx tsx src/clients/anthropic-client.ts",
    "anthropic-gpt-client": "npx tsx src/clients/anthropic-gpt-client.ts",
    "gemini-client": "npx tsx src/clients/gemini-client.ts",
    "gemini-gpt-client": "npx tsx src/clients/gemini-gpt-client.ts",
    "openai-client": "npx tsx src/clients/gpt-client.ts",
    "openrouter-client": "npx tsx src/clients/openrouter-client.ts",
    "openai-image-formdata-client": "npx tsx src/clients/openai-image-formdata-client.ts",
    "test": "vitest run",
    "test:integration": "vitest run",
    "test:watch": "vitest",
    "build": "tsc && pnpm run copy-prisma-to-dist",
    "lint": "pnpx eslint src/**/*.ts --no-warn-ignored",
    "lint:fix": "pnpx eslint src/**/*.ts --no-warn-ignored --fix",
    "type-check": "tsc --noEmit",
    "format": "prettier --write src/**/*.{ts,js}",
    "format:check": "prettier --check src/**/*.{ts,js}",
    "docker:build": "./scripts/build-local-docker.sh",
    "docker:run": "./scripts/run-local-docker.sh",
    "docker:build-and-run": "pnpm run docker:build && pnpm run docker:run"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@coinbase/cdp-sdk": "^1.34.0",
    "@merit-systems/echo-typescript-sdk": "1.0.14",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/api-logs": "0.57.2",
    "@opentelemetry/auto-instrumentations-node": "^0.57.0",
    "@opentelemetry/exporter-logs-otlp-http": "^0.203.0",
    "@opentelemetry/exporter-metrics-otlp-http": "0.203.0",
    "@opentelemetry/resources": "^2.0.1",
    "@opentelemetry/sdk-logs": "0.57.2",
    "@opentelemetry/sdk-metrics": "2.0.1",
    "@opentelemetry/semantic-conventions": "^1.36.0",
    "@opentelemetry/winston-transport": "^0.14.1",
    "@prisma/client": "6.16.0",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.19",
    "@types/express": "^4.17.21",
    "@types/form-data": "^2.5.2",
    "@types/multer": "^2.0.0",
    "@types/node": "^20.11.24",
    "@types/node-fetch": "^2.6.11",
    "compression": "^1.8.0",
    "cors": "^2.8.5",
    "dotenv": "^16.5.0",
    "express": "^4.18.3",
    "form-data": "^4.0.4",
    "jose": "^6.0.11",
    "multer": "^2.0.2",
    "node-fetch": "^2.7.0",
    "openai": "^4.97.0",
    "prisma": "6.16.0",
    "register": "link:@opentelemetry/auto-instrumentations-node/register",
    "ts-node": "^10.9.2",
    "typescript": "^5.3.3",
    "uuid": "^11.1.0",
    "viem": "^2.33.3",
    "winston": "^3.17.0"
  },
  "devDependencies": {
    "@anthropic-ai/sdk": "^0.39.0",
    "@google/genai": "^0.3.0",
    "@types/supertest": "^6.0.3",
    "@typescript-eslint/eslint-plugin": "^8.34.1",
    "@typescript-eslint/parser": "^8.34.1",
    "eslint": "^9.29.0",
    "supertest": "^6.3.4",
    "tsx": "^4.20.5",
    "vitest": "^3.2.3"
  }
}
