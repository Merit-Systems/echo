// Auto-generated API response types for Echo TypeScript SDK
// This file is generated by running: npm run generate-api-types
// Source: ../../app/control/src/generated/api-types-resolved.ts
// Do not edit this file manually - it will be overwritten

export type GetAppsByIdResponse = {
  id: string;
  name: string;
  description: string | null;
  profilePictureUrl: string | null;
  bannerImageUrl: string | null;
  homepageUrl: string | null;
  isPublic: boolean | null;
  hideOwnerName: boolean | null;
  createdAt: string;
  updatedAt: string;
  authorizedCallbackUrls: string[];
};

export type GetAppsByIdParams = { id: string };

export type GetAppsResponse = {
  items: {
    id: string;
    name: string;
    description: string | null;
    profilePictureUrl: string | null;
    bannerImageUrl: string | null;
    homepageUrl: string | null;
    isPublic: boolean | null;
    hideOwnerName: boolean | null;
    createdAt: string;
    updatedAt: string;
    authorizedCallbackUrls: string[];
  }[];
  page_size: number;
  page: number;
  total_count: number;
  has_next: boolean;
};

export type GetAppsQuery = {
  page?: number | undefined;
  page_size?: number | undefined;
  search?: string | undefined;
};

export type GetBalanceByIdFreeResponse = {
  spendPoolBalance: number;
  userSpendInfo: {
    userId: string;
    echoAppId: string;
    spendPoolId: string | null;
    amountSpent: number;
    spendLimit: number | null;
    amountLeft: number;
  };
};

export type GetBalanceByIdFreeParams = { id: string };

export type CreateBalanceFreeResponse = {
  spendPoolBalance: number;
  userSpendInfo: {
    userId: string;
    echoAppId: string;
    spendPoolId: string | null;
    amountSpent: number;
    spendLimit: number | null;
    amountLeft: number;
  };
};

export type CreateBalanceFreeBody = { echoAppId: string };

export type GetBalanceResponse = {
  totalPaid: number;
  totalSpent: number;
  balance: number;
  currency: string;
};

export type GetBasePaymentLinkResponse = { message: string };

export type GetBasePaymentLinkQuery = { amount: number };

export type CreateStripePaymentLinkResponse = {
  paymentLink: {
    id: string;
    url: string;
    amount: number;
    currency: string;
    status: string;
    created: number;
    metadata: { userId: string; description: string };
  };
  payment: {
    status: string;
    userId: string;
    id: string;
    description: string | null;
    isArchived: boolean;
    archivedAt: string | null;
    createdAt: string;
    updatedAt: string;
    spendPoolId: string | null;
    amount: string;
    paymentId: string;
    currency: string;
    source: string;
  };
};

export type CreateStripePaymentLinkBody = {
  amount: number;
  description?: string | undefined;
  successUrl?: string | undefined;
};

export type CreateUserReferralResponse = { success: boolean; message: string };

export type CreateUserReferralBody = { echoAppId: string; code: string };

export type GetUserResponse = {
  picture: string | null;
  id: string;
  name: string | null;
  createdAt: string;
  updatedAt: string;
  email: string;
  image: string | null;
};

export type GetOauthAuthorizeQuery = {
  client_id: string;
  redirect_uri: string;
  code_challenge: string;
  code_challenge_method: 'S256';
  scope?: string | undefined;
  state?: string | undefined;
  response_type?: 'code' | undefined;
  prompt?: 'none' | undefined;
  new_user?: 'true' | undefined;
  referral_code?: string | undefined;
};

export type CreateOauthTokenResponse = {
  access_token: string;
  token_type: string;
  expires_in: number;
  refresh_token: string;
  refresh_token_expires_in: number;
  scope: string;
  user: { id: string; email: string; name: string };
  echo_app: { id: string; name: string; description: string };
};

export type CreateOauthTokenBody =
  | {
      redirect_uri: string;
      client_id: string;
      code: string;
      code_verifier: string;
      grant_type: 'authorization_code';
    }
  | { refresh_token: string; grant_type: 'refresh_token' };

export type GetOauthUserinfoResponse = {
  sub: string;
  email: string;
  email_verified: boolean;
  name: string;
  preferred_username: string;
  given_name: string;
  family_name: string;
  updated_at: number;
};

export type CreateOauthUserinfoResponse = {
  sub: string;
  email: string;
  email_verified: boolean;
  name: string;
  preferred_username: string;
  given_name: string;
  family_name: string;
  updated_at: number;
};

export type ApiRoutes = {
  'GET /apps/{id}': {
    response: GetAppsByIdResponse;
    params: GetAppsByIdParams;
  };
  'GET /apps': { response: GetAppsResponse; query: GetAppsQuery };
  'GET /balance/{id}/free': {
    response: GetBalanceByIdFreeResponse;
    params: GetBalanceByIdFreeParams;
  };
  'POST /balance/free': {
    response: CreateBalanceFreeResponse;
    body: CreateBalanceFreeBody;
  };
  'GET /balance': { response: GetBalanceResponse };
  'GET /base/payment-link': {
    response: GetBasePaymentLinkResponse;
    query: GetBasePaymentLinkQuery;
  };
  'POST /stripe/payment-link': {
    response: CreateStripePaymentLinkResponse;
    body: CreateStripePaymentLinkBody;
  };
  'POST /user/referral': {
    response: CreateUserReferralResponse;
    body: CreateUserReferralBody;
  };
  'GET /user': { response: GetUserResponse };
  'GET /oauth/authorize': { query: GetOauthAuthorizeQuery };
  'POST /oauth/token': {
    response: CreateOauthTokenResponse;
    body: CreateOauthTokenBody;
  };
  'GET /oauth/userinfo': { response: GetOauthUserinfoResponse };
  'POST /oauth/userinfo': { response: CreateOauthUserinfoResponse };
};
