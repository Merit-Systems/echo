
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Account
 * 
 */
export type Account = $Result.DefaultSelection<Prisma.$AccountPayload>
/**
 * Model Session
 * 
 */
export type Session = $Result.DefaultSelection<Prisma.$SessionPayload>
/**
 * Model VerificationToken
 * 
 */
export type VerificationToken = $Result.DefaultSelection<Prisma.$VerificationTokenPayload>
/**
 * Model EchoApp
 * 
 */
export type EchoApp = $Result.DefaultSelection<Prisma.$EchoAppPayload>
/**
 * Model AppMembership
 * 
 */
export type AppMembership = $Result.DefaultSelection<Prisma.$AppMembershipPayload>
/**
 * Model ApiKey
 * 
 */
export type ApiKey = $Result.DefaultSelection<Prisma.$ApiKeyPayload>
/**
 * Model RefreshToken
 * 
 */
export type RefreshToken = $Result.DefaultSelection<Prisma.$RefreshTokenPayload>
/**
 * Model AppSession
 * 
 */
export type AppSession = $Result.DefaultSelection<Prisma.$AppSessionPayload>
/**
 * Model Payment
 * 
 */
export type Payment = $Result.DefaultSelection<Prisma.$PaymentPayload>
/**
 * Model MarkUp
 * 
 */
export type MarkUp = $Result.DefaultSelection<Prisma.$MarkUpPayload>
/**
 * Model GithubLink
 * 
 */
export type GithubLink = $Result.DefaultSelection<Prisma.$GithubLinkPayload>
/**
 * Model Transaction
 * 
 */
export type Transaction = $Result.DefaultSelection<Prisma.$TransactionPayload>
/**
 * Model SpendPool
 * 
 */
export type SpendPool = $Result.DefaultSelection<Prisma.$SpendPoolPayload>
/**
 * Model UserSpendPoolUsage
 * 
 */
export type UserSpendPoolUsage = $Result.DefaultSelection<Prisma.$UserSpendPoolUsagePayload>
/**
 * Model TransactionMetadata
 * 
 */
export type TransactionMetadata = $Result.DefaultSelection<Prisma.$TransactionMetadataPayload>
/**
 * Model ReferralCode
 * 
 */
export type ReferralCode = $Result.DefaultSelection<Prisma.$ReferralCodePayload>
/**
 * Model ReferralReward
 * 
 */
export type ReferralReward = $Result.DefaultSelection<Prisma.$ReferralRewardPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const GithubType: {
  user: 'user',
  repo: 'repo'
};

export type GithubType = (typeof GithubType)[keyof typeof GithubType]

}

export type GithubType = $Enums.GithubType

export const GithubType: typeof $Enums.GithubType

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.account`: Exposes CRUD operations for the **Account** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accounts
    * const accounts = await prisma.account.findMany()
    * ```
    */
  get account(): Prisma.AccountDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.session`: Exposes CRUD operations for the **Session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.session.findMany()
    * ```
    */
  get session(): Prisma.SessionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.verificationToken`: Exposes CRUD operations for the **VerificationToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VerificationTokens
    * const verificationTokens = await prisma.verificationToken.findMany()
    * ```
    */
  get verificationToken(): Prisma.VerificationTokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.echoApp`: Exposes CRUD operations for the **EchoApp** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EchoApps
    * const echoApps = await prisma.echoApp.findMany()
    * ```
    */
  get echoApp(): Prisma.EchoAppDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.appMembership`: Exposes CRUD operations for the **AppMembership** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AppMemberships
    * const appMemberships = await prisma.appMembership.findMany()
    * ```
    */
  get appMembership(): Prisma.AppMembershipDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.apiKey`: Exposes CRUD operations for the **ApiKey** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ApiKeys
    * const apiKeys = await prisma.apiKey.findMany()
    * ```
    */
  get apiKey(): Prisma.ApiKeyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.refreshToken`: Exposes CRUD operations for the **RefreshToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RefreshTokens
    * const refreshTokens = await prisma.refreshToken.findMany()
    * ```
    */
  get refreshToken(): Prisma.RefreshTokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.appSession`: Exposes CRUD operations for the **AppSession** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AppSessions
    * const appSessions = await prisma.appSession.findMany()
    * ```
    */
  get appSession(): Prisma.AppSessionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.payment`: Exposes CRUD operations for the **Payment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Payments
    * const payments = await prisma.payment.findMany()
    * ```
    */
  get payment(): Prisma.PaymentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.markUp`: Exposes CRUD operations for the **MarkUp** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MarkUps
    * const markUps = await prisma.markUp.findMany()
    * ```
    */
  get markUp(): Prisma.MarkUpDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.githubLink`: Exposes CRUD operations for the **GithubLink** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more GithubLinks
    * const githubLinks = await prisma.githubLink.findMany()
    * ```
    */
  get githubLink(): Prisma.GithubLinkDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transaction`: Exposes CRUD operations for the **Transaction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transactions
    * const transactions = await prisma.transaction.findMany()
    * ```
    */
  get transaction(): Prisma.TransactionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.spendPool`: Exposes CRUD operations for the **SpendPool** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SpendPools
    * const spendPools = await prisma.spendPool.findMany()
    * ```
    */
  get spendPool(): Prisma.SpendPoolDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userSpendPoolUsage`: Exposes CRUD operations for the **UserSpendPoolUsage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserSpendPoolUsages
    * const userSpendPoolUsages = await prisma.userSpendPoolUsage.findMany()
    * ```
    */
  get userSpendPoolUsage(): Prisma.UserSpendPoolUsageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transactionMetadata`: Exposes CRUD operations for the **TransactionMetadata** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TransactionMetadata
    * const transactionMetadata = await prisma.transactionMetadata.findMany()
    * ```
    */
  get transactionMetadata(): Prisma.TransactionMetadataDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.referralCode`: Exposes CRUD operations for the **ReferralCode** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReferralCodes
    * const referralCodes = await prisma.referralCode.findMany()
    * ```
    */
  get referralCode(): Prisma.ReferralCodeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.referralReward`: Exposes CRUD operations for the **ReferralReward** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReferralRewards
    * const referralRewards = await prisma.referralReward.findMany()
    * ```
    */
  get referralReward(): Prisma.ReferralRewardDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.15.0
   * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Account: 'Account',
    Session: 'Session',
    VerificationToken: 'VerificationToken',
    EchoApp: 'EchoApp',
    AppMembership: 'AppMembership',
    ApiKey: 'ApiKey',
    RefreshToken: 'RefreshToken',
    AppSession: 'AppSession',
    Payment: 'Payment',
    MarkUp: 'MarkUp',
    GithubLink: 'GithubLink',
    Transaction: 'Transaction',
    SpendPool: 'SpendPool',
    UserSpendPoolUsage: 'UserSpendPoolUsage',
    TransactionMetadata: 'TransactionMetadata',
    ReferralCode: 'ReferralCode',
    ReferralReward: 'ReferralReward'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "account" | "session" | "verificationToken" | "echoApp" | "appMembership" | "apiKey" | "refreshToken" | "appSession" | "payment" | "markUp" | "githubLink" | "transaction" | "spendPool" | "userSpendPoolUsage" | "transactionMetadata" | "referralCode" | "referralReward"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Account: {
        payload: Prisma.$AccountPayload<ExtArgs>
        fields: Prisma.AccountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccountFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccountFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findFirst: {
            args: Prisma.AccountFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccountFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findMany: {
            args: Prisma.AccountFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          create: {
            args: Prisma.AccountCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          createMany: {
            args: Prisma.AccountCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AccountCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          delete: {
            args: Prisma.AccountDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          update: {
            args: Prisma.AccountUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          deleteMany: {
            args: Prisma.AccountDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccountUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AccountUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          upsert: {
            args: Prisma.AccountUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          aggregate: {
            args: Prisma.AccountAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccount>
          }
          groupBy: {
            args: Prisma.AccountGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccountGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccountCountArgs<ExtArgs>
            result: $Utils.Optional<AccountCountAggregateOutputType> | number
          }
        }
      }
      Session: {
        payload: Prisma.$SessionPayload<ExtArgs>
        fields: Prisma.SessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findFirst: {
            args: Prisma.SessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findMany: {
            args: Prisma.SessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          create: {
            args: Prisma.SessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          createMany: {
            args: Prisma.SessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          delete: {
            args: Prisma.SessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          update: {
            args: Prisma.SessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          deleteMany: {
            args: Prisma.SessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SessionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          upsert: {
            args: Prisma.SessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          aggregate: {
            args: Prisma.SessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSession>
          }
          groupBy: {
            args: Prisma.SessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SessionCountArgs<ExtArgs>
            result: $Utils.Optional<SessionCountAggregateOutputType> | number
          }
        }
      }
      VerificationToken: {
        payload: Prisma.$VerificationTokenPayload<ExtArgs>
        fields: Prisma.VerificationTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VerificationTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VerificationTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          findFirst: {
            args: Prisma.VerificationTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VerificationTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          findMany: {
            args: Prisma.VerificationTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>[]
          }
          create: {
            args: Prisma.VerificationTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          createMany: {
            args: Prisma.VerificationTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VerificationTokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>[]
          }
          delete: {
            args: Prisma.VerificationTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          update: {
            args: Prisma.VerificationTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          deleteMany: {
            args: Prisma.VerificationTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VerificationTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VerificationTokenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>[]
          }
          upsert: {
            args: Prisma.VerificationTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          aggregate: {
            args: Prisma.VerificationTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVerificationToken>
          }
          groupBy: {
            args: Prisma.VerificationTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<VerificationTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.VerificationTokenCountArgs<ExtArgs>
            result: $Utils.Optional<VerificationTokenCountAggregateOutputType> | number
          }
        }
      }
      EchoApp: {
        payload: Prisma.$EchoAppPayload<ExtArgs>
        fields: Prisma.EchoAppFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EchoAppFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EchoAppPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EchoAppFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EchoAppPayload>
          }
          findFirst: {
            args: Prisma.EchoAppFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EchoAppPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EchoAppFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EchoAppPayload>
          }
          findMany: {
            args: Prisma.EchoAppFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EchoAppPayload>[]
          }
          create: {
            args: Prisma.EchoAppCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EchoAppPayload>
          }
          createMany: {
            args: Prisma.EchoAppCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EchoAppCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EchoAppPayload>[]
          }
          delete: {
            args: Prisma.EchoAppDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EchoAppPayload>
          }
          update: {
            args: Prisma.EchoAppUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EchoAppPayload>
          }
          deleteMany: {
            args: Prisma.EchoAppDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EchoAppUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EchoAppUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EchoAppPayload>[]
          }
          upsert: {
            args: Prisma.EchoAppUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EchoAppPayload>
          }
          aggregate: {
            args: Prisma.EchoAppAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEchoApp>
          }
          groupBy: {
            args: Prisma.EchoAppGroupByArgs<ExtArgs>
            result: $Utils.Optional<EchoAppGroupByOutputType>[]
          }
          count: {
            args: Prisma.EchoAppCountArgs<ExtArgs>
            result: $Utils.Optional<EchoAppCountAggregateOutputType> | number
          }
        }
      }
      AppMembership: {
        payload: Prisma.$AppMembershipPayload<ExtArgs>
        fields: Prisma.AppMembershipFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AppMembershipFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMembershipPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AppMembershipFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMembershipPayload>
          }
          findFirst: {
            args: Prisma.AppMembershipFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMembershipPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AppMembershipFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMembershipPayload>
          }
          findMany: {
            args: Prisma.AppMembershipFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMembershipPayload>[]
          }
          create: {
            args: Prisma.AppMembershipCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMembershipPayload>
          }
          createMany: {
            args: Prisma.AppMembershipCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AppMembershipCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMembershipPayload>[]
          }
          delete: {
            args: Prisma.AppMembershipDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMembershipPayload>
          }
          update: {
            args: Prisma.AppMembershipUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMembershipPayload>
          }
          deleteMany: {
            args: Prisma.AppMembershipDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AppMembershipUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AppMembershipUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMembershipPayload>[]
          }
          upsert: {
            args: Prisma.AppMembershipUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMembershipPayload>
          }
          aggregate: {
            args: Prisma.AppMembershipAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAppMembership>
          }
          groupBy: {
            args: Prisma.AppMembershipGroupByArgs<ExtArgs>
            result: $Utils.Optional<AppMembershipGroupByOutputType>[]
          }
          count: {
            args: Prisma.AppMembershipCountArgs<ExtArgs>
            result: $Utils.Optional<AppMembershipCountAggregateOutputType> | number
          }
        }
      }
      ApiKey: {
        payload: Prisma.$ApiKeyPayload<ExtArgs>
        fields: Prisma.ApiKeyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ApiKeyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ApiKeyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload>
          }
          findFirst: {
            args: Prisma.ApiKeyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ApiKeyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload>
          }
          findMany: {
            args: Prisma.ApiKeyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload>[]
          }
          create: {
            args: Prisma.ApiKeyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload>
          }
          createMany: {
            args: Prisma.ApiKeyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ApiKeyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload>[]
          }
          delete: {
            args: Prisma.ApiKeyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload>
          }
          update: {
            args: Prisma.ApiKeyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload>
          }
          deleteMany: {
            args: Prisma.ApiKeyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ApiKeyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ApiKeyUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload>[]
          }
          upsert: {
            args: Prisma.ApiKeyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload>
          }
          aggregate: {
            args: Prisma.ApiKeyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateApiKey>
          }
          groupBy: {
            args: Prisma.ApiKeyGroupByArgs<ExtArgs>
            result: $Utils.Optional<ApiKeyGroupByOutputType>[]
          }
          count: {
            args: Prisma.ApiKeyCountArgs<ExtArgs>
            result: $Utils.Optional<ApiKeyCountAggregateOutputType> | number
          }
        }
      }
      RefreshToken: {
        payload: Prisma.$RefreshTokenPayload<ExtArgs>
        fields: Prisma.RefreshTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RefreshTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RefreshTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findFirst: {
            args: Prisma.RefreshTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RefreshTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findMany: {
            args: Prisma.RefreshTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          create: {
            args: Prisma.RefreshTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          createMany: {
            args: Prisma.RefreshTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RefreshTokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          delete: {
            args: Prisma.RefreshTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          update: {
            args: Prisma.RefreshTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          deleteMany: {
            args: Prisma.RefreshTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RefreshTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RefreshTokenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          upsert: {
            args: Prisma.RefreshTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          aggregate: {
            args: Prisma.RefreshTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRefreshToken>
          }
          groupBy: {
            args: Prisma.RefreshTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.RefreshTokenCountArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenCountAggregateOutputType> | number
          }
        }
      }
      AppSession: {
        payload: Prisma.$AppSessionPayload<ExtArgs>
        fields: Prisma.AppSessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AppSessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppSessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AppSessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppSessionPayload>
          }
          findFirst: {
            args: Prisma.AppSessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppSessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AppSessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppSessionPayload>
          }
          findMany: {
            args: Prisma.AppSessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppSessionPayload>[]
          }
          create: {
            args: Prisma.AppSessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppSessionPayload>
          }
          createMany: {
            args: Prisma.AppSessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AppSessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppSessionPayload>[]
          }
          delete: {
            args: Prisma.AppSessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppSessionPayload>
          }
          update: {
            args: Prisma.AppSessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppSessionPayload>
          }
          deleteMany: {
            args: Prisma.AppSessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AppSessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AppSessionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppSessionPayload>[]
          }
          upsert: {
            args: Prisma.AppSessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppSessionPayload>
          }
          aggregate: {
            args: Prisma.AppSessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAppSession>
          }
          groupBy: {
            args: Prisma.AppSessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<AppSessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.AppSessionCountArgs<ExtArgs>
            result: $Utils.Optional<AppSessionCountAggregateOutputType> | number
          }
        }
      }
      Payment: {
        payload: Prisma.$PaymentPayload<ExtArgs>
        fields: Prisma.PaymentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findFirst: {
            args: Prisma.PaymentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findMany: {
            args: Prisma.PaymentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          create: {
            args: Prisma.PaymentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          createMany: {
            args: Prisma.PaymentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          delete: {
            args: Prisma.PaymentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          update: {
            args: Prisma.PaymentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          deleteMany: {
            args: Prisma.PaymentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaymentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          upsert: {
            args: Prisma.PaymentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          aggregate: {
            args: Prisma.PaymentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePayment>
          }
          groupBy: {
            args: Prisma.PaymentGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentCountAggregateOutputType> | number
          }
        }
      }
      MarkUp: {
        payload: Prisma.$MarkUpPayload<ExtArgs>
        fields: Prisma.MarkUpFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MarkUpFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarkUpPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MarkUpFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarkUpPayload>
          }
          findFirst: {
            args: Prisma.MarkUpFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarkUpPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MarkUpFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarkUpPayload>
          }
          findMany: {
            args: Prisma.MarkUpFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarkUpPayload>[]
          }
          create: {
            args: Prisma.MarkUpCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarkUpPayload>
          }
          createMany: {
            args: Prisma.MarkUpCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MarkUpCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarkUpPayload>[]
          }
          delete: {
            args: Prisma.MarkUpDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarkUpPayload>
          }
          update: {
            args: Prisma.MarkUpUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarkUpPayload>
          }
          deleteMany: {
            args: Prisma.MarkUpDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MarkUpUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MarkUpUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarkUpPayload>[]
          }
          upsert: {
            args: Prisma.MarkUpUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarkUpPayload>
          }
          aggregate: {
            args: Prisma.MarkUpAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMarkUp>
          }
          groupBy: {
            args: Prisma.MarkUpGroupByArgs<ExtArgs>
            result: $Utils.Optional<MarkUpGroupByOutputType>[]
          }
          count: {
            args: Prisma.MarkUpCountArgs<ExtArgs>
            result: $Utils.Optional<MarkUpCountAggregateOutputType> | number
          }
        }
      }
      GithubLink: {
        payload: Prisma.$GithubLinkPayload<ExtArgs>
        fields: Prisma.GithubLinkFieldRefs
        operations: {
          findUnique: {
            args: Prisma.GithubLinkFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GithubLinkPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.GithubLinkFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GithubLinkPayload>
          }
          findFirst: {
            args: Prisma.GithubLinkFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GithubLinkPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.GithubLinkFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GithubLinkPayload>
          }
          findMany: {
            args: Prisma.GithubLinkFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GithubLinkPayload>[]
          }
          create: {
            args: Prisma.GithubLinkCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GithubLinkPayload>
          }
          createMany: {
            args: Prisma.GithubLinkCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.GithubLinkCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GithubLinkPayload>[]
          }
          delete: {
            args: Prisma.GithubLinkDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GithubLinkPayload>
          }
          update: {
            args: Prisma.GithubLinkUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GithubLinkPayload>
          }
          deleteMany: {
            args: Prisma.GithubLinkDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.GithubLinkUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.GithubLinkUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GithubLinkPayload>[]
          }
          upsert: {
            args: Prisma.GithubLinkUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GithubLinkPayload>
          }
          aggregate: {
            args: Prisma.GithubLinkAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGithubLink>
          }
          groupBy: {
            args: Prisma.GithubLinkGroupByArgs<ExtArgs>
            result: $Utils.Optional<GithubLinkGroupByOutputType>[]
          }
          count: {
            args: Prisma.GithubLinkCountArgs<ExtArgs>
            result: $Utils.Optional<GithubLinkCountAggregateOutputType> | number
          }
        }
      }
      Transaction: {
        payload: Prisma.$TransactionPayload<ExtArgs>
        fields: Prisma.TransactionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TransactionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TransactionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>
          }
          findFirst: {
            args: Prisma.TransactionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TransactionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>
          }
          findMany: {
            args: Prisma.TransactionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>[]
          }
          create: {
            args: Prisma.TransactionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>
          }
          createMany: {
            args: Prisma.TransactionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TransactionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>[]
          }
          delete: {
            args: Prisma.TransactionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>
          }
          update: {
            args: Prisma.TransactionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>
          }
          deleteMany: {
            args: Prisma.TransactionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TransactionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TransactionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>[]
          }
          upsert: {
            args: Prisma.TransactionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>
          }
          aggregate: {
            args: Prisma.TransactionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransaction>
          }
          groupBy: {
            args: Prisma.TransactionGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransactionGroupByOutputType>[]
          }
          count: {
            args: Prisma.TransactionCountArgs<ExtArgs>
            result: $Utils.Optional<TransactionCountAggregateOutputType> | number
          }
        }
      }
      SpendPool: {
        payload: Prisma.$SpendPoolPayload<ExtArgs>
        fields: Prisma.SpendPoolFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SpendPoolFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpendPoolPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SpendPoolFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpendPoolPayload>
          }
          findFirst: {
            args: Prisma.SpendPoolFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpendPoolPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SpendPoolFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpendPoolPayload>
          }
          findMany: {
            args: Prisma.SpendPoolFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpendPoolPayload>[]
          }
          create: {
            args: Prisma.SpendPoolCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpendPoolPayload>
          }
          createMany: {
            args: Prisma.SpendPoolCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SpendPoolCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpendPoolPayload>[]
          }
          delete: {
            args: Prisma.SpendPoolDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpendPoolPayload>
          }
          update: {
            args: Prisma.SpendPoolUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpendPoolPayload>
          }
          deleteMany: {
            args: Prisma.SpendPoolDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SpendPoolUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SpendPoolUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpendPoolPayload>[]
          }
          upsert: {
            args: Prisma.SpendPoolUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpendPoolPayload>
          }
          aggregate: {
            args: Prisma.SpendPoolAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSpendPool>
          }
          groupBy: {
            args: Prisma.SpendPoolGroupByArgs<ExtArgs>
            result: $Utils.Optional<SpendPoolGroupByOutputType>[]
          }
          count: {
            args: Prisma.SpendPoolCountArgs<ExtArgs>
            result: $Utils.Optional<SpendPoolCountAggregateOutputType> | number
          }
        }
      }
      UserSpendPoolUsage: {
        payload: Prisma.$UserSpendPoolUsagePayload<ExtArgs>
        fields: Prisma.UserSpendPoolUsageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserSpendPoolUsageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSpendPoolUsagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserSpendPoolUsageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSpendPoolUsagePayload>
          }
          findFirst: {
            args: Prisma.UserSpendPoolUsageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSpendPoolUsagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserSpendPoolUsageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSpendPoolUsagePayload>
          }
          findMany: {
            args: Prisma.UserSpendPoolUsageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSpendPoolUsagePayload>[]
          }
          create: {
            args: Prisma.UserSpendPoolUsageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSpendPoolUsagePayload>
          }
          createMany: {
            args: Prisma.UserSpendPoolUsageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserSpendPoolUsageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSpendPoolUsagePayload>[]
          }
          delete: {
            args: Prisma.UserSpendPoolUsageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSpendPoolUsagePayload>
          }
          update: {
            args: Prisma.UserSpendPoolUsageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSpendPoolUsagePayload>
          }
          deleteMany: {
            args: Prisma.UserSpendPoolUsageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserSpendPoolUsageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserSpendPoolUsageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSpendPoolUsagePayload>[]
          }
          upsert: {
            args: Prisma.UserSpendPoolUsageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSpendPoolUsagePayload>
          }
          aggregate: {
            args: Prisma.UserSpendPoolUsageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserSpendPoolUsage>
          }
          groupBy: {
            args: Prisma.UserSpendPoolUsageGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserSpendPoolUsageGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserSpendPoolUsageCountArgs<ExtArgs>
            result: $Utils.Optional<UserSpendPoolUsageCountAggregateOutputType> | number
          }
        }
      }
      TransactionMetadata: {
        payload: Prisma.$TransactionMetadataPayload<ExtArgs>
        fields: Prisma.TransactionMetadataFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TransactionMetadataFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionMetadataPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TransactionMetadataFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionMetadataPayload>
          }
          findFirst: {
            args: Prisma.TransactionMetadataFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionMetadataPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TransactionMetadataFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionMetadataPayload>
          }
          findMany: {
            args: Prisma.TransactionMetadataFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionMetadataPayload>[]
          }
          create: {
            args: Prisma.TransactionMetadataCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionMetadataPayload>
          }
          createMany: {
            args: Prisma.TransactionMetadataCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TransactionMetadataCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionMetadataPayload>[]
          }
          delete: {
            args: Prisma.TransactionMetadataDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionMetadataPayload>
          }
          update: {
            args: Prisma.TransactionMetadataUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionMetadataPayload>
          }
          deleteMany: {
            args: Prisma.TransactionMetadataDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TransactionMetadataUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TransactionMetadataUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionMetadataPayload>[]
          }
          upsert: {
            args: Prisma.TransactionMetadataUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionMetadataPayload>
          }
          aggregate: {
            args: Prisma.TransactionMetadataAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransactionMetadata>
          }
          groupBy: {
            args: Prisma.TransactionMetadataGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransactionMetadataGroupByOutputType>[]
          }
          count: {
            args: Prisma.TransactionMetadataCountArgs<ExtArgs>
            result: $Utils.Optional<TransactionMetadataCountAggregateOutputType> | number
          }
        }
      }
      ReferralCode: {
        payload: Prisma.$ReferralCodePayload<ExtArgs>
        fields: Prisma.ReferralCodeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReferralCodeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralCodePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReferralCodeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralCodePayload>
          }
          findFirst: {
            args: Prisma.ReferralCodeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralCodePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReferralCodeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralCodePayload>
          }
          findMany: {
            args: Prisma.ReferralCodeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralCodePayload>[]
          }
          create: {
            args: Prisma.ReferralCodeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralCodePayload>
          }
          createMany: {
            args: Prisma.ReferralCodeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReferralCodeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralCodePayload>[]
          }
          delete: {
            args: Prisma.ReferralCodeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralCodePayload>
          }
          update: {
            args: Prisma.ReferralCodeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralCodePayload>
          }
          deleteMany: {
            args: Prisma.ReferralCodeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReferralCodeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReferralCodeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralCodePayload>[]
          }
          upsert: {
            args: Prisma.ReferralCodeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralCodePayload>
          }
          aggregate: {
            args: Prisma.ReferralCodeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReferralCode>
          }
          groupBy: {
            args: Prisma.ReferralCodeGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReferralCodeGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReferralCodeCountArgs<ExtArgs>
            result: $Utils.Optional<ReferralCodeCountAggregateOutputType> | number
          }
        }
      }
      ReferralReward: {
        payload: Prisma.$ReferralRewardPayload<ExtArgs>
        fields: Prisma.ReferralRewardFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReferralRewardFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralRewardPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReferralRewardFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralRewardPayload>
          }
          findFirst: {
            args: Prisma.ReferralRewardFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralRewardPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReferralRewardFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralRewardPayload>
          }
          findMany: {
            args: Prisma.ReferralRewardFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralRewardPayload>[]
          }
          create: {
            args: Prisma.ReferralRewardCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralRewardPayload>
          }
          createMany: {
            args: Prisma.ReferralRewardCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReferralRewardCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralRewardPayload>[]
          }
          delete: {
            args: Prisma.ReferralRewardDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralRewardPayload>
          }
          update: {
            args: Prisma.ReferralRewardUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralRewardPayload>
          }
          deleteMany: {
            args: Prisma.ReferralRewardDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReferralRewardUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReferralRewardUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralRewardPayload>[]
          }
          upsert: {
            args: Prisma.ReferralRewardUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralRewardPayload>
          }
          aggregate: {
            args: Prisma.ReferralRewardAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReferralReward>
          }
          groupBy: {
            args: Prisma.ReferralRewardGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReferralRewardGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReferralRewardCountArgs<ExtArgs>
            result: $Utils.Optional<ReferralRewardCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    account?: AccountOmit
    session?: SessionOmit
    verificationToken?: VerificationTokenOmit
    echoApp?: EchoAppOmit
    appMembership?: AppMembershipOmit
    apiKey?: ApiKeyOmit
    refreshToken?: RefreshTokenOmit
    appSession?: AppSessionOmit
    payment?: PaymentOmit
    markUp?: MarkUpOmit
    githubLink?: GithubLinkOmit
    transaction?: TransactionOmit
    spendPool?: SpendPoolOmit
    userSpendPoolUsage?: UserSpendPoolUsageOmit
    transactionMetadata?: TransactionMetadataOmit
    referralCode?: ReferralCodeOmit
    referralReward?: ReferralRewardOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    accounts: number
    sessions: number
    apiKeys: number
    appMemberships: number
    payments: number
    refreshTokens: number
    transactions: number
    spendPoolUsage: number
    ReferralCode: number
    appSessions: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | UserCountOutputTypeCountAccountsArgs
    sessions?: boolean | UserCountOutputTypeCountSessionsArgs
    apiKeys?: boolean | UserCountOutputTypeCountApiKeysArgs
    appMemberships?: boolean | UserCountOutputTypeCountAppMembershipsArgs
    payments?: boolean | UserCountOutputTypeCountPaymentsArgs
    refreshTokens?: boolean | UserCountOutputTypeCountRefreshTokensArgs
    transactions?: boolean | UserCountOutputTypeCountTransactionsArgs
    spendPoolUsage?: boolean | UserCountOutputTypeCountSpendPoolUsageArgs
    ReferralCode?: boolean | UserCountOutputTypeCountReferralCodeArgs
    appSessions?: boolean | UserCountOutputTypeCountAppSessionsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAccountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountApiKeysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApiKeyWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAppMembershipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AppMembershipWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRefreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSpendPoolUsageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSpendPoolUsageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReferralCodeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReferralCodeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAppSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AppSessionWhereInput
  }


  /**
   * Count Type EchoAppCountOutputType
   */

  export type EchoAppCountOutputType = {
    apiKeys: number
    Transactions: number
    refreshTokens: number
    appMemberships: number
    spendPools: number
    ReferralCode: number
    ReferralRewards: number
    appSessions: number
  }

  export type EchoAppCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    apiKeys?: boolean | EchoAppCountOutputTypeCountApiKeysArgs
    Transactions?: boolean | EchoAppCountOutputTypeCountTransactionsArgs
    refreshTokens?: boolean | EchoAppCountOutputTypeCountRefreshTokensArgs
    appMemberships?: boolean | EchoAppCountOutputTypeCountAppMembershipsArgs
    spendPools?: boolean | EchoAppCountOutputTypeCountSpendPoolsArgs
    ReferralCode?: boolean | EchoAppCountOutputTypeCountReferralCodeArgs
    ReferralRewards?: boolean | EchoAppCountOutputTypeCountReferralRewardsArgs
    appSessions?: boolean | EchoAppCountOutputTypeCountAppSessionsArgs
  }

  // Custom InputTypes
  /**
   * EchoAppCountOutputType without action
   */
  export type EchoAppCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EchoAppCountOutputType
     */
    select?: EchoAppCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EchoAppCountOutputType without action
   */
  export type EchoAppCountOutputTypeCountApiKeysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApiKeyWhereInput
  }

  /**
   * EchoAppCountOutputType without action
   */
  export type EchoAppCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionWhereInput
  }

  /**
   * EchoAppCountOutputType without action
   */
  export type EchoAppCountOutputTypeCountRefreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
  }

  /**
   * EchoAppCountOutputType without action
   */
  export type EchoAppCountOutputTypeCountAppMembershipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AppMembershipWhereInput
  }

  /**
   * EchoAppCountOutputType without action
   */
  export type EchoAppCountOutputTypeCountSpendPoolsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SpendPoolWhereInput
  }

  /**
   * EchoAppCountOutputType without action
   */
  export type EchoAppCountOutputTypeCountReferralCodeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReferralCodeWhereInput
  }

  /**
   * EchoAppCountOutputType without action
   */
  export type EchoAppCountOutputTypeCountReferralRewardsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReferralRewardWhereInput
  }

  /**
   * EchoAppCountOutputType without action
   */
  export type EchoAppCountOutputTypeCountAppSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AppSessionWhereInput
  }


  /**
   * Count Type ApiKeyCountOutputType
   */

  export type ApiKeyCountOutputType = {
    Transactions: number
  }

  export type ApiKeyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Transactions?: boolean | ApiKeyCountOutputTypeCountTransactionsArgs
  }

  // Custom InputTypes
  /**
   * ApiKeyCountOutputType without action
   */
  export type ApiKeyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKeyCountOutputType
     */
    select?: ApiKeyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ApiKeyCountOutputType without action
   */
  export type ApiKeyCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionWhereInput
  }


  /**
   * Count Type AppSessionCountOutputType
   */

  export type AppSessionCountOutputType = {
    refreshTokens: number
  }

  export type AppSessionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    refreshTokens?: boolean | AppSessionCountOutputTypeCountRefreshTokensArgs
  }

  // Custom InputTypes
  /**
   * AppSessionCountOutputType without action
   */
  export type AppSessionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppSessionCountOutputType
     */
    select?: AppSessionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AppSessionCountOutputType without action
   */
  export type AppSessionCountOutputTypeCountRefreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
  }


  /**
   * Count Type MarkUpCountOutputType
   */

  export type MarkUpCountOutputType = {
    Transactions: number
  }

  export type MarkUpCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Transactions?: boolean | MarkUpCountOutputTypeCountTransactionsArgs
  }

  // Custom InputTypes
  /**
   * MarkUpCountOutputType without action
   */
  export type MarkUpCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarkUpCountOutputType
     */
    select?: MarkUpCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MarkUpCountOutputType without action
   */
  export type MarkUpCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionWhereInput
  }


  /**
   * Count Type GithubLinkCountOutputType
   */

  export type GithubLinkCountOutputType = {
    Transactions: number
  }

  export type GithubLinkCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Transactions?: boolean | GithubLinkCountOutputTypeCountTransactionsArgs
  }

  // Custom InputTypes
  /**
   * GithubLinkCountOutputType without action
   */
  export type GithubLinkCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GithubLinkCountOutputType
     */
    select?: GithubLinkCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * GithubLinkCountOutputType without action
   */
  export type GithubLinkCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionWhereInput
  }


  /**
   * Count Type SpendPoolCountOutputType
   */

  export type SpendPoolCountOutputType = {
    payments: number
    Transactions: number
    userUsage: number
  }

  export type SpendPoolCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    payments?: boolean | SpendPoolCountOutputTypeCountPaymentsArgs
    Transactions?: boolean | SpendPoolCountOutputTypeCountTransactionsArgs
    userUsage?: boolean | SpendPoolCountOutputTypeCountUserUsageArgs
  }

  // Custom InputTypes
  /**
   * SpendPoolCountOutputType without action
   */
  export type SpendPoolCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpendPoolCountOutputType
     */
    select?: SpendPoolCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SpendPoolCountOutputType without action
   */
  export type SpendPoolCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
  }

  /**
   * SpendPoolCountOutputType without action
   */
  export type SpendPoolCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionWhereInput
  }

  /**
   * SpendPoolCountOutputType without action
   */
  export type SpendPoolCountOutputTypeCountUserUsageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSpendPoolUsageWhereInput
  }


  /**
   * Count Type UserSpendPoolUsageCountOutputType
   */

  export type UserSpendPoolUsageCountOutputType = {
    Transactions: number
  }

  export type UserSpendPoolUsageCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Transactions?: boolean | UserSpendPoolUsageCountOutputTypeCountTransactionsArgs
  }

  // Custom InputTypes
  /**
   * UserSpendPoolUsageCountOutputType without action
   */
  export type UserSpendPoolUsageCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSpendPoolUsageCountOutputType
     */
    select?: UserSpendPoolUsageCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserSpendPoolUsageCountOutputType without action
   */
  export type UserSpendPoolUsageCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionWhereInput
  }


  /**
   * Count Type TransactionMetadataCountOutputType
   */

  export type TransactionMetadataCountOutputType = {
    transactions: number
  }

  export type TransactionMetadataCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transactions?: boolean | TransactionMetadataCountOutputTypeCountTransactionsArgs
  }

  // Custom InputTypes
  /**
   * TransactionMetadataCountOutputType without action
   */
  export type TransactionMetadataCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionMetadataCountOutputType
     */
    select?: TransactionMetadataCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TransactionMetadataCountOutputType without action
   */
  export type TransactionMetadataCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionWhereInput
  }


  /**
   * Count Type ReferralCodeCountOutputType
   */

  export type ReferralCodeCountOutputType = {
    appMemberships: number
    Transaction: number
  }

  export type ReferralCodeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    appMemberships?: boolean | ReferralCodeCountOutputTypeCountAppMembershipsArgs
    Transaction?: boolean | ReferralCodeCountOutputTypeCountTransactionArgs
  }

  // Custom InputTypes
  /**
   * ReferralCodeCountOutputType without action
   */
  export type ReferralCodeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralCodeCountOutputType
     */
    select?: ReferralCodeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ReferralCodeCountOutputType without action
   */
  export type ReferralCodeCountOutputTypeCountAppMembershipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AppMembershipWhereInput
  }

  /**
   * ReferralCodeCountOutputType without action
   */
  export type ReferralCodeCountOutputTypeCountTransactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionWhereInput
  }


  /**
   * Count Type ReferralRewardCountOutputType
   */

  export type ReferralRewardCountOutputType = {
    currentForApps: number
    Transaction: number
  }

  export type ReferralRewardCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    currentForApps?: boolean | ReferralRewardCountOutputTypeCountCurrentForAppsArgs
    Transaction?: boolean | ReferralRewardCountOutputTypeCountTransactionArgs
  }

  // Custom InputTypes
  /**
   * ReferralRewardCountOutputType without action
   */
  export type ReferralRewardCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralRewardCountOutputType
     */
    select?: ReferralRewardCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ReferralRewardCountOutputType without action
   */
  export type ReferralRewardCountOutputTypeCountCurrentForAppsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EchoAppWhereInput
  }

  /**
   * ReferralRewardCountOutputType without action
   */
  export type ReferralRewardCountOutputTypeCountTransactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    totalPaid: Decimal | null
    totalSpent: Decimal | null
  }

  export type UserSumAggregateOutputType = {
    totalPaid: Decimal | null
    totalSpent: Decimal | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    name: string | null
    emailVerified: Date | null
    image: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    totalPaid: Decimal | null
    totalSpent: Decimal | null
    admin: boolean | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    name: string | null
    emailVerified: Date | null
    image: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    totalPaid: Decimal | null
    totalSpent: Decimal | null
    admin: boolean | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    name: number
    emailVerified: number
    image: number
    isArchived: number
    archivedAt: number
    createdAt: number
    updatedAt: number
    totalPaid: number
    totalSpent: number
    admin: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    totalPaid?: true
    totalSpent?: true
  }

  export type UserSumAggregateInputType = {
    totalPaid?: true
    totalSpent?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    name?: true
    emailVerified?: true
    image?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    totalPaid?: true
    totalSpent?: true
    admin?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    name?: true
    emailVerified?: true
    image?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    totalPaid?: true
    totalSpent?: true
    admin?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    name?: true
    emailVerified?: true
    image?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    totalPaid?: true
    totalSpent?: true
    admin?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    name: string | null
    emailVerified: Date | null
    image: string | null
    isArchived: boolean
    archivedAt: Date | null
    createdAt: Date
    updatedAt: Date
    totalPaid: Decimal
    totalSpent: Decimal
    admin: boolean
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    emailVerified?: boolean
    image?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    totalPaid?: boolean
    totalSpent?: boolean
    admin?: boolean
    accounts?: boolean | User$accountsArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    apiKeys?: boolean | User$apiKeysArgs<ExtArgs>
    appMemberships?: boolean | User$appMembershipsArgs<ExtArgs>
    payments?: boolean | User$paymentsArgs<ExtArgs>
    refreshTokens?: boolean | User$refreshTokensArgs<ExtArgs>
    transactions?: boolean | User$transactionsArgs<ExtArgs>
    spendPoolUsage?: boolean | User$spendPoolUsageArgs<ExtArgs>
    ReferralCode?: boolean | User$ReferralCodeArgs<ExtArgs>
    appSessions?: boolean | User$appSessionsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    emailVerified?: boolean
    image?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    totalPaid?: boolean
    totalSpent?: boolean
    admin?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    emailVerified?: boolean
    image?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    totalPaid?: boolean
    totalSpent?: boolean
    admin?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    name?: boolean
    emailVerified?: boolean
    image?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    totalPaid?: boolean
    totalSpent?: boolean
    admin?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "name" | "emailVerified" | "image" | "isArchived" | "archivedAt" | "createdAt" | "updatedAt" | "totalPaid" | "totalSpent" | "admin", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | User$accountsArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    apiKeys?: boolean | User$apiKeysArgs<ExtArgs>
    appMemberships?: boolean | User$appMembershipsArgs<ExtArgs>
    payments?: boolean | User$paymentsArgs<ExtArgs>
    refreshTokens?: boolean | User$refreshTokensArgs<ExtArgs>
    transactions?: boolean | User$transactionsArgs<ExtArgs>
    spendPoolUsage?: boolean | User$spendPoolUsageArgs<ExtArgs>
    ReferralCode?: boolean | User$ReferralCodeArgs<ExtArgs>
    appSessions?: boolean | User$appSessionsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      accounts: Prisma.$AccountPayload<ExtArgs>[]
      sessions: Prisma.$SessionPayload<ExtArgs>[]
      apiKeys: Prisma.$ApiKeyPayload<ExtArgs>[]
      appMemberships: Prisma.$AppMembershipPayload<ExtArgs>[]
      payments: Prisma.$PaymentPayload<ExtArgs>[]
      refreshTokens: Prisma.$RefreshTokenPayload<ExtArgs>[]
      transactions: Prisma.$TransactionPayload<ExtArgs>[]
      spendPoolUsage: Prisma.$UserSpendPoolUsagePayload<ExtArgs>[]
      ReferralCode: Prisma.$ReferralCodePayload<ExtArgs>[]
      appSessions: Prisma.$AppSessionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      name: string | null
      emailVerified: Date | null
      image: string | null
      isArchived: boolean
      archivedAt: Date | null
      createdAt: Date
      updatedAt: Date
      totalPaid: Prisma.Decimal
      totalSpent: Prisma.Decimal
      admin: boolean
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    accounts<T extends User$accountsArgs<ExtArgs> = {}>(args?: Subset<T, User$accountsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sessions<T extends User$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, User$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    apiKeys<T extends User$apiKeysArgs<ExtArgs> = {}>(args?: Subset<T, User$apiKeysArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    appMemberships<T extends User$appMembershipsArgs<ExtArgs> = {}>(args?: Subset<T, User$appMembershipsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppMembershipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    payments<T extends User$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, User$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    refreshTokens<T extends User$refreshTokensArgs<ExtArgs> = {}>(args?: Subset<T, User$refreshTokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transactions<T extends User$transactionsArgs<ExtArgs> = {}>(args?: Subset<T, User$transactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    spendPoolUsage<T extends User$spendPoolUsageArgs<ExtArgs> = {}>(args?: Subset<T, User$spendPoolUsageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSpendPoolUsagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ReferralCode<T extends User$ReferralCodeArgs<ExtArgs> = {}>(args?: Subset<T, User$ReferralCodeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReferralCodePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    appSessions<T extends User$appSessionsArgs<ExtArgs> = {}>(args?: Subset<T, User$appSessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppSessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly emailVerified: FieldRef<"User", 'DateTime'>
    readonly image: FieldRef<"User", 'String'>
    readonly isArchived: FieldRef<"User", 'Boolean'>
    readonly archivedAt: FieldRef<"User", 'DateTime'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly totalPaid: FieldRef<"User", 'Decimal'>
    readonly totalSpent: FieldRef<"User", 'Decimal'>
    readonly admin: FieldRef<"User", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.accounts
   */
  export type User$accountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    cursor?: AccountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * User.sessions
   */
  export type User$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    cursor?: SessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * User.apiKeys
   */
  export type User$apiKeysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiKey
     */
    omit?: ApiKeyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    where?: ApiKeyWhereInput
    orderBy?: ApiKeyOrderByWithRelationInput | ApiKeyOrderByWithRelationInput[]
    cursor?: ApiKeyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApiKeyScalarFieldEnum | ApiKeyScalarFieldEnum[]
  }

  /**
   * User.appMemberships
   */
  export type User$appMembershipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMembership
     */
    select?: AppMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppMembership
     */
    omit?: AppMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppMembershipInclude<ExtArgs> | null
    where?: AppMembershipWhereInput
    orderBy?: AppMembershipOrderByWithRelationInput | AppMembershipOrderByWithRelationInput[]
    cursor?: AppMembershipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AppMembershipScalarFieldEnum | AppMembershipScalarFieldEnum[]
  }

  /**
   * User.payments
   */
  export type User$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    cursor?: PaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * User.refreshTokens
   */
  export type User$refreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    cursor?: RefreshTokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * User.transactions
   */
  export type User$transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    where?: TransactionWhereInput
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    cursor?: TransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * User.spendPoolUsage
   */
  export type User$spendPoolUsageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSpendPoolUsage
     */
    select?: UserSpendPoolUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSpendPoolUsage
     */
    omit?: UserSpendPoolUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSpendPoolUsageInclude<ExtArgs> | null
    where?: UserSpendPoolUsageWhereInput
    orderBy?: UserSpendPoolUsageOrderByWithRelationInput | UserSpendPoolUsageOrderByWithRelationInput[]
    cursor?: UserSpendPoolUsageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserSpendPoolUsageScalarFieldEnum | UserSpendPoolUsageScalarFieldEnum[]
  }

  /**
   * User.ReferralCode
   */
  export type User$ReferralCodeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralCode
     */
    select?: ReferralCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralCode
     */
    omit?: ReferralCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralCodeInclude<ExtArgs> | null
    where?: ReferralCodeWhereInput
    orderBy?: ReferralCodeOrderByWithRelationInput | ReferralCodeOrderByWithRelationInput[]
    cursor?: ReferralCodeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReferralCodeScalarFieldEnum | ReferralCodeScalarFieldEnum[]
  }

  /**
   * User.appSessions
   */
  export type User$appSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppSession
     */
    select?: AppSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppSession
     */
    omit?: AppSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppSessionInclude<ExtArgs> | null
    where?: AppSessionWhereInput
    orderBy?: AppSessionOrderByWithRelationInput | AppSessionOrderByWithRelationInput[]
    cursor?: AppSessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AppSessionScalarFieldEnum | AppSessionScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Account
   */

  export type AggregateAccount = {
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  export type AccountAvgAggregateOutputType = {
    expires_at: number | null
  }

  export type AccountSumAggregateOutputType = {
    expires_at: number | null
  }

  export type AccountMinAggregateOutputType = {
    userId: string | null
    type: string | null
    provider: string | null
    providerAccountId: string | null
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AccountMaxAggregateOutputType = {
    userId: string | null
    type: string | null
    provider: string | null
    providerAccountId: string | null
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AccountCountAggregateOutputType = {
    userId: number
    type: number
    provider: number
    providerAccountId: number
    refresh_token: number
    access_token: number
    expires_at: number
    token_type: number
    scope: number
    id_token: number
    session_state: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AccountAvgAggregateInputType = {
    expires_at?: true
  }

  export type AccountSumAggregateInputType = {
    expires_at?: true
  }

  export type AccountMinAggregateInputType = {
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AccountMaxAggregateInputType = {
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AccountCountAggregateInputType = {
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AccountAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Account to aggregate.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Accounts
    **/
    _count?: true | AccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AccountAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AccountSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountMaxAggregateInputType
  }

  export type GetAccountAggregateType<T extends AccountAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount[P]>
      : GetScalarType<T[P], AggregateAccount[P]>
  }




  export type AccountGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithAggregationInput | AccountOrderByWithAggregationInput[]
    by: AccountScalarFieldEnum[] | AccountScalarFieldEnum
    having?: AccountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountCountAggregateInputType | true
    _avg?: AccountAvgAggregateInputType
    _sum?: AccountSumAggregateInputType
    _min?: AccountMinAggregateInputType
    _max?: AccountMaxAggregateInputType
  }

  export type AccountGroupByOutputType = {
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
    createdAt: Date
    updatedAt: Date
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  type GetAccountGroupByPayload<T extends AccountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountGroupByOutputType[P]>
            : GetScalarType<T[P], AccountGroupByOutputType[P]>
        }
      >
    >


  export type AccountSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectScalar = {
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AccountOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"userId" | "type" | "provider" | "providerAccountId" | "refresh_token" | "access_token" | "expires_at" | "token_type" | "scope" | "id_token" | "session_state" | "createdAt" | "updatedAt", ExtArgs["result"]["account"]>
  export type AccountInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AccountIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AccountIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AccountPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Account"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      userId: string
      type: string
      provider: string
      providerAccountId: string
      refresh_token: string | null
      access_token: string | null
      expires_at: number | null
      token_type: string | null
      scope: string | null
      id_token: string | null
      session_state: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["account"]>
    composites: {}
  }

  type AccountGetPayload<S extends boolean | null | undefined | AccountDefaultArgs> = $Result.GetResult<Prisma.$AccountPayload, S>

  type AccountCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AccountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AccountCountAggregateInputType | true
    }

  export interface AccountDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Account'], meta: { name: 'Account' } }
    /**
     * Find zero or one Account that matches the filter.
     * @param {AccountFindUniqueArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccountFindUniqueArgs>(args: SelectSubset<T, AccountFindUniqueArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Account that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AccountFindUniqueOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccountFindUniqueOrThrowArgs>(args: SelectSubset<T, AccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccountFindFirstArgs>(args?: SelectSubset<T, AccountFindFirstArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccountFindFirstOrThrowArgs>(args?: SelectSubset<T, AccountFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accounts
     * const accounts = await prisma.account.findMany()
     * 
     * // Get first 10 Accounts
     * const accounts = await prisma.account.findMany({ take: 10 })
     * 
     * // Only select the `userId`
     * const accountWithUserIdOnly = await prisma.account.findMany({ select: { userId: true } })
     * 
     */
    findMany<T extends AccountFindManyArgs>(args?: SelectSubset<T, AccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Account.
     * @param {AccountCreateArgs} args - Arguments to create a Account.
     * @example
     * // Create one Account
     * const Account = await prisma.account.create({
     *   data: {
     *     // ... data to create a Account
     *   }
     * })
     * 
     */
    create<T extends AccountCreateArgs>(args: SelectSubset<T, AccountCreateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Accounts.
     * @param {AccountCreateManyArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccountCreateManyArgs>(args?: SelectSubset<T, AccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Accounts and returns the data saved in the database.
     * @param {AccountCreateManyAndReturnArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Accounts and only return the `userId`
     * const accountWithUserIdOnly = await prisma.account.createManyAndReturn({
     *   select: { userId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AccountCreateManyAndReturnArgs>(args?: SelectSubset<T, AccountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Account.
     * @param {AccountDeleteArgs} args - Arguments to delete one Account.
     * @example
     * // Delete one Account
     * const Account = await prisma.account.delete({
     *   where: {
     *     // ... filter to delete one Account
     *   }
     * })
     * 
     */
    delete<T extends AccountDeleteArgs>(args: SelectSubset<T, AccountDeleteArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Account.
     * @param {AccountUpdateArgs} args - Arguments to update one Account.
     * @example
     * // Update one Account
     * const account = await prisma.account.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccountUpdateArgs>(args: SelectSubset<T, AccountUpdateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Accounts.
     * @param {AccountDeleteManyArgs} args - Arguments to filter Accounts to delete.
     * @example
     * // Delete a few Accounts
     * const { count } = await prisma.account.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccountDeleteManyArgs>(args?: SelectSubset<T, AccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccountUpdateManyArgs>(args: SelectSubset<T, AccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts and returns the data updated in the database.
     * @param {AccountUpdateManyAndReturnArgs} args - Arguments to update many Accounts.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Accounts and only return the `userId`
     * const accountWithUserIdOnly = await prisma.account.updateManyAndReturn({
     *   select: { userId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AccountUpdateManyAndReturnArgs>(args: SelectSubset<T, AccountUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Account.
     * @param {AccountUpsertArgs} args - Arguments to update or create a Account.
     * @example
     * // Update or create a Account
     * const account = await prisma.account.upsert({
     *   create: {
     *     // ... data to create a Account
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account we want to update
     *   }
     * })
     */
    upsert<T extends AccountUpsertArgs>(args: SelectSubset<T, AccountUpsertArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountCountArgs} args - Arguments to filter Accounts to count.
     * @example
     * // Count the number of Accounts
     * const count = await prisma.account.count({
     *   where: {
     *     // ... the filter for the Accounts we want to count
     *   }
     * })
    **/
    count<T extends AccountCountArgs>(
      args?: Subset<T, AccountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountAggregateArgs>(args: Subset<T, AccountAggregateArgs>): Prisma.PrismaPromise<GetAccountAggregateType<T>>

    /**
     * Group by Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountGroupByArgs['orderBy'] }
        : { orderBy?: AccountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Account model
   */
  readonly fields: AccountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Account.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccountClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Account model
   */
  interface AccountFieldRefs {
    readonly userId: FieldRef<"Account", 'String'>
    readonly type: FieldRef<"Account", 'String'>
    readonly provider: FieldRef<"Account", 'String'>
    readonly providerAccountId: FieldRef<"Account", 'String'>
    readonly refresh_token: FieldRef<"Account", 'String'>
    readonly access_token: FieldRef<"Account", 'String'>
    readonly expires_at: FieldRef<"Account", 'Int'>
    readonly token_type: FieldRef<"Account", 'String'>
    readonly scope: FieldRef<"Account", 'String'>
    readonly id_token: FieldRef<"Account", 'String'>
    readonly session_state: FieldRef<"Account", 'String'>
    readonly createdAt: FieldRef<"Account", 'DateTime'>
    readonly updatedAt: FieldRef<"Account", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Account findUnique
   */
  export type AccountFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findUniqueOrThrow
   */
  export type AccountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findFirst
   */
  export type AccountFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findFirstOrThrow
   */
  export type AccountFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findMany
   */
  export type AccountFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Accounts to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account create
   */
  export type AccountCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to create a Account.
     */
    data: XOR<AccountCreateInput, AccountUncheckedCreateInput>
  }

  /**
   * Account createMany
   */
  export type AccountCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Account createManyAndReturn
   */
  export type AccountCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Account update
   */
  export type AccountUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to update a Account.
     */
    data: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
    /**
     * Choose, which Account to update.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account updateMany
   */
  export type AccountUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
  }

  /**
   * Account updateManyAndReturn
   */
  export type AccountUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Account upsert
   */
  export type AccountUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The filter to search for the Account to update in case it exists.
     */
    where: AccountWhereUniqueInput
    /**
     * In case the Account found by the `where` argument doesn't exist, create a new Account with this data.
     */
    create: XOR<AccountCreateInput, AccountUncheckedCreateInput>
    /**
     * In case the Account was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
  }

  /**
   * Account delete
   */
  export type AccountDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter which Account to delete.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account deleteMany
   */
  export type AccountDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Accounts to delete
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to delete.
     */
    limit?: number
  }

  /**
   * Account without action
   */
  export type AccountDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
  }


  /**
   * Model Session
   */

  export type AggregateSession = {
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  export type SessionMinAggregateOutputType = {
    sessionToken: string | null
    userId: string | null
    expires: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SessionMaxAggregateOutputType = {
    sessionToken: string | null
    userId: string | null
    expires: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SessionCountAggregateOutputType = {
    sessionToken: number
    userId: number
    expires: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SessionMinAggregateInputType = {
    sessionToken?: true
    userId?: true
    expires?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SessionMaxAggregateInputType = {
    sessionToken?: true
    userId?: true
    expires?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SessionCountAggregateInputType = {
    sessionToken?: true
    userId?: true
    expires?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Session to aggregate.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sessions
    **/
    _count?: true | SessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionMaxAggregateInputType
  }

  export type GetSessionAggregateType<T extends SessionAggregateArgs> = {
        [P in keyof T & keyof AggregateSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSession[P]>
      : GetScalarType<T[P], AggregateSession[P]>
  }




  export type SessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithAggregationInput | SessionOrderByWithAggregationInput[]
    by: SessionScalarFieldEnum[] | SessionScalarFieldEnum
    having?: SessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionCountAggregateInputType | true
    _min?: SessionMinAggregateInputType
    _max?: SessionMaxAggregateInputType
  }

  export type SessionGroupByOutputType = {
    sessionToken: string
    userId: string
    expires: Date
    createdAt: Date
    updatedAt: Date
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  type GetSessionGroupByPayload<T extends SessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionGroupByOutputType[P]>
            : GetScalarType<T[P], SessionGroupByOutputType[P]>
        }
      >
    >


  export type SessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectScalar = {
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"sessionToken" | "userId" | "expires" | "createdAt" | "updatedAt", ExtArgs["result"]["session"]>
  export type SessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SessionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SessionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Session"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      sessionToken: string
      userId: string
      expires: Date
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["session"]>
    composites: {}
  }

  type SessionGetPayload<S extends boolean | null | undefined | SessionDefaultArgs> = $Result.GetResult<Prisma.$SessionPayload, S>

  type SessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SessionCountAggregateInputType | true
    }

  export interface SessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Session'], meta: { name: 'Session' } }
    /**
     * Find zero or one Session that matches the filter.
     * @param {SessionFindUniqueArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SessionFindUniqueArgs>(args: SelectSubset<T, SessionFindUniqueArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Session that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SessionFindUniqueOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SessionFindUniqueOrThrowArgs>(args: SelectSubset<T, SessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SessionFindFirstArgs>(args?: SelectSubset<T, SessionFindFirstArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SessionFindFirstOrThrowArgs>(args?: SelectSubset<T, SessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.session.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.session.findMany({ take: 10 })
     * 
     * // Only select the `sessionToken`
     * const sessionWithSessionTokenOnly = await prisma.session.findMany({ select: { sessionToken: true } })
     * 
     */
    findMany<T extends SessionFindManyArgs>(args?: SelectSubset<T, SessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Session.
     * @param {SessionCreateArgs} args - Arguments to create a Session.
     * @example
     * // Create one Session
     * const Session = await prisma.session.create({
     *   data: {
     *     // ... data to create a Session
     *   }
     * })
     * 
     */
    create<T extends SessionCreateArgs>(args: SelectSubset<T, SessionCreateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sessions.
     * @param {SessionCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SessionCreateManyArgs>(args?: SelectSubset<T, SessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sessions and returns the data saved in the database.
     * @param {SessionCreateManyAndReturnArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sessions and only return the `sessionToken`
     * const sessionWithSessionTokenOnly = await prisma.session.createManyAndReturn({
     *   select: { sessionToken: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SessionCreateManyAndReturnArgs>(args?: SelectSubset<T, SessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Session.
     * @param {SessionDeleteArgs} args - Arguments to delete one Session.
     * @example
     * // Delete one Session
     * const Session = await prisma.session.delete({
     *   where: {
     *     // ... filter to delete one Session
     *   }
     * })
     * 
     */
    delete<T extends SessionDeleteArgs>(args: SelectSubset<T, SessionDeleteArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Session.
     * @param {SessionUpdateArgs} args - Arguments to update one Session.
     * @example
     * // Update one Session
     * const session = await prisma.session.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SessionUpdateArgs>(args: SelectSubset<T, SessionUpdateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sessions.
     * @param {SessionDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.session.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SessionDeleteManyArgs>(args?: SelectSubset<T, SessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SessionUpdateManyArgs>(args: SelectSubset<T, SessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions and returns the data updated in the database.
     * @param {SessionUpdateManyAndReturnArgs} args - Arguments to update many Sessions.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sessions and only return the `sessionToken`
     * const sessionWithSessionTokenOnly = await prisma.session.updateManyAndReturn({
     *   select: { sessionToken: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SessionUpdateManyAndReturnArgs>(args: SelectSubset<T, SessionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Session.
     * @param {SessionUpsertArgs} args - Arguments to update or create a Session.
     * @example
     * // Update or create a Session
     * const session = await prisma.session.upsert({
     *   create: {
     *     // ... data to create a Session
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Session we want to update
     *   }
     * })
     */
    upsert<T extends SessionUpsertArgs>(args: SelectSubset<T, SessionUpsertArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.session.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends SessionCountArgs>(
      args?: Subset<T, SessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionAggregateArgs>(args: Subset<T, SessionAggregateArgs>): Prisma.PrismaPromise<GetSessionAggregateType<T>>

    /**
     * Group by Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SessionGroupByArgs['orderBy'] }
        : { orderBy?: SessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Session model
   */
  readonly fields: SessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Session.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Session model
   */
  interface SessionFieldRefs {
    readonly sessionToken: FieldRef<"Session", 'String'>
    readonly userId: FieldRef<"Session", 'String'>
    readonly expires: FieldRef<"Session", 'DateTime'>
    readonly createdAt: FieldRef<"Session", 'DateTime'>
    readonly updatedAt: FieldRef<"Session", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Session findUnique
   */
  export type SessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findUniqueOrThrow
   */
  export type SessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findFirst
   */
  export type SessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findFirstOrThrow
   */
  export type SessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findMany
   */
  export type SessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Sessions to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session create
   */
  export type SessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to create a Session.
     */
    data: XOR<SessionCreateInput, SessionUncheckedCreateInput>
  }

  /**
   * Session createMany
   */
  export type SessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Session createManyAndReturn
   */
  export type SessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session update
   */
  export type SessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to update a Session.
     */
    data: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
    /**
     * Choose, which Session to update.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session updateMany
   */
  export type SessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
  }

  /**
   * Session updateManyAndReturn
   */
  export type SessionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session upsert
   */
  export type SessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The filter to search for the Session to update in case it exists.
     */
    where: SessionWhereUniqueInput
    /**
     * In case the Session found by the `where` argument doesn't exist, create a new Session with this data.
     */
    create: XOR<SessionCreateInput, SessionUncheckedCreateInput>
    /**
     * In case the Session was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
  }

  /**
   * Session delete
   */
  export type SessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter which Session to delete.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session deleteMany
   */
  export type SessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sessions to delete
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to delete.
     */
    limit?: number
  }

  /**
   * Session without action
   */
  export type SessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
  }


  /**
   * Model VerificationToken
   */

  export type AggregateVerificationToken = {
    _count: VerificationTokenCountAggregateOutputType | null
    _min: VerificationTokenMinAggregateOutputType | null
    _max: VerificationTokenMaxAggregateOutputType | null
  }

  export type VerificationTokenMinAggregateOutputType = {
    identifier: string | null
    token: string | null
    expires: Date | null
  }

  export type VerificationTokenMaxAggregateOutputType = {
    identifier: string | null
    token: string | null
    expires: Date | null
  }

  export type VerificationTokenCountAggregateOutputType = {
    identifier: number
    token: number
    expires: number
    _all: number
  }


  export type VerificationTokenMinAggregateInputType = {
    identifier?: true
    token?: true
    expires?: true
  }

  export type VerificationTokenMaxAggregateInputType = {
    identifier?: true
    token?: true
    expires?: true
  }

  export type VerificationTokenCountAggregateInputType = {
    identifier?: true
    token?: true
    expires?: true
    _all?: true
  }

  export type VerificationTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationToken to aggregate.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VerificationTokens
    **/
    _count?: true | VerificationTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VerificationTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VerificationTokenMaxAggregateInputType
  }

  export type GetVerificationTokenAggregateType<T extends VerificationTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateVerificationToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVerificationToken[P]>
      : GetScalarType<T[P], AggregateVerificationToken[P]>
  }




  export type VerificationTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VerificationTokenWhereInput
    orderBy?: VerificationTokenOrderByWithAggregationInput | VerificationTokenOrderByWithAggregationInput[]
    by: VerificationTokenScalarFieldEnum[] | VerificationTokenScalarFieldEnum
    having?: VerificationTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VerificationTokenCountAggregateInputType | true
    _min?: VerificationTokenMinAggregateInputType
    _max?: VerificationTokenMaxAggregateInputType
  }

  export type VerificationTokenGroupByOutputType = {
    identifier: string
    token: string
    expires: Date
    _count: VerificationTokenCountAggregateOutputType | null
    _min: VerificationTokenMinAggregateOutputType | null
    _max: VerificationTokenMaxAggregateOutputType | null
  }

  type GetVerificationTokenGroupByPayload<T extends VerificationTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VerificationTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VerificationTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VerificationTokenGroupByOutputType[P]>
            : GetScalarType<T[P], VerificationTokenGroupByOutputType[P]>
        }
      >
    >


  export type VerificationTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    identifier?: boolean
    token?: boolean
    expires?: boolean
  }, ExtArgs["result"]["verificationToken"]>

  export type VerificationTokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    identifier?: boolean
    token?: boolean
    expires?: boolean
  }, ExtArgs["result"]["verificationToken"]>

  export type VerificationTokenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    identifier?: boolean
    token?: boolean
    expires?: boolean
  }, ExtArgs["result"]["verificationToken"]>

  export type VerificationTokenSelectScalar = {
    identifier?: boolean
    token?: boolean
    expires?: boolean
  }

  export type VerificationTokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"identifier" | "token" | "expires", ExtArgs["result"]["verificationToken"]>

  export type $VerificationTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VerificationToken"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      identifier: string
      token: string
      expires: Date
    }, ExtArgs["result"]["verificationToken"]>
    composites: {}
  }

  type VerificationTokenGetPayload<S extends boolean | null | undefined | VerificationTokenDefaultArgs> = $Result.GetResult<Prisma.$VerificationTokenPayload, S>

  type VerificationTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VerificationTokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VerificationTokenCountAggregateInputType | true
    }

  export interface VerificationTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VerificationToken'], meta: { name: 'VerificationToken' } }
    /**
     * Find zero or one VerificationToken that matches the filter.
     * @param {VerificationTokenFindUniqueArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VerificationTokenFindUniqueArgs>(args: SelectSubset<T, VerificationTokenFindUniqueArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one VerificationToken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VerificationTokenFindUniqueOrThrowArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VerificationTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, VerificationTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VerificationToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindFirstArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VerificationTokenFindFirstArgs>(args?: SelectSubset<T, VerificationTokenFindFirstArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VerificationToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindFirstOrThrowArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VerificationTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, VerificationTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more VerificationTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VerificationTokens
     * const verificationTokens = await prisma.verificationToken.findMany()
     * 
     * // Get first 10 VerificationTokens
     * const verificationTokens = await prisma.verificationToken.findMany({ take: 10 })
     * 
     * // Only select the `identifier`
     * const verificationTokenWithIdentifierOnly = await prisma.verificationToken.findMany({ select: { identifier: true } })
     * 
     */
    findMany<T extends VerificationTokenFindManyArgs>(args?: SelectSubset<T, VerificationTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a VerificationToken.
     * @param {VerificationTokenCreateArgs} args - Arguments to create a VerificationToken.
     * @example
     * // Create one VerificationToken
     * const VerificationToken = await prisma.verificationToken.create({
     *   data: {
     *     // ... data to create a VerificationToken
     *   }
     * })
     * 
     */
    create<T extends VerificationTokenCreateArgs>(args: SelectSubset<T, VerificationTokenCreateArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many VerificationTokens.
     * @param {VerificationTokenCreateManyArgs} args - Arguments to create many VerificationTokens.
     * @example
     * // Create many VerificationTokens
     * const verificationToken = await prisma.verificationToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VerificationTokenCreateManyArgs>(args?: SelectSubset<T, VerificationTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VerificationTokens and returns the data saved in the database.
     * @param {VerificationTokenCreateManyAndReturnArgs} args - Arguments to create many VerificationTokens.
     * @example
     * // Create many VerificationTokens
     * const verificationToken = await prisma.verificationToken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VerificationTokens and only return the `identifier`
     * const verificationTokenWithIdentifierOnly = await prisma.verificationToken.createManyAndReturn({
     *   select: { identifier: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VerificationTokenCreateManyAndReturnArgs>(args?: SelectSubset<T, VerificationTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a VerificationToken.
     * @param {VerificationTokenDeleteArgs} args - Arguments to delete one VerificationToken.
     * @example
     * // Delete one VerificationToken
     * const VerificationToken = await prisma.verificationToken.delete({
     *   where: {
     *     // ... filter to delete one VerificationToken
     *   }
     * })
     * 
     */
    delete<T extends VerificationTokenDeleteArgs>(args: SelectSubset<T, VerificationTokenDeleteArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one VerificationToken.
     * @param {VerificationTokenUpdateArgs} args - Arguments to update one VerificationToken.
     * @example
     * // Update one VerificationToken
     * const verificationToken = await prisma.verificationToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VerificationTokenUpdateArgs>(args: SelectSubset<T, VerificationTokenUpdateArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more VerificationTokens.
     * @param {VerificationTokenDeleteManyArgs} args - Arguments to filter VerificationTokens to delete.
     * @example
     * // Delete a few VerificationTokens
     * const { count } = await prisma.verificationToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VerificationTokenDeleteManyArgs>(args?: SelectSubset<T, VerificationTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VerificationTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VerificationTokens
     * const verificationToken = await prisma.verificationToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VerificationTokenUpdateManyArgs>(args: SelectSubset<T, VerificationTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VerificationTokens and returns the data updated in the database.
     * @param {VerificationTokenUpdateManyAndReturnArgs} args - Arguments to update many VerificationTokens.
     * @example
     * // Update many VerificationTokens
     * const verificationToken = await prisma.verificationToken.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more VerificationTokens and only return the `identifier`
     * const verificationTokenWithIdentifierOnly = await prisma.verificationToken.updateManyAndReturn({
     *   select: { identifier: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VerificationTokenUpdateManyAndReturnArgs>(args: SelectSubset<T, VerificationTokenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one VerificationToken.
     * @param {VerificationTokenUpsertArgs} args - Arguments to update or create a VerificationToken.
     * @example
     * // Update or create a VerificationToken
     * const verificationToken = await prisma.verificationToken.upsert({
     *   create: {
     *     // ... data to create a VerificationToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VerificationToken we want to update
     *   }
     * })
     */
    upsert<T extends VerificationTokenUpsertArgs>(args: SelectSubset<T, VerificationTokenUpsertArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of VerificationTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenCountArgs} args - Arguments to filter VerificationTokens to count.
     * @example
     * // Count the number of VerificationTokens
     * const count = await prisma.verificationToken.count({
     *   where: {
     *     // ... the filter for the VerificationTokens we want to count
     *   }
     * })
    **/
    count<T extends VerificationTokenCountArgs>(
      args?: Subset<T, VerificationTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VerificationTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VerificationToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VerificationTokenAggregateArgs>(args: Subset<T, VerificationTokenAggregateArgs>): Prisma.PrismaPromise<GetVerificationTokenAggregateType<T>>

    /**
     * Group by VerificationToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VerificationTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VerificationTokenGroupByArgs['orderBy'] }
        : { orderBy?: VerificationTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VerificationTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVerificationTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VerificationToken model
   */
  readonly fields: VerificationTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VerificationToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VerificationTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VerificationToken model
   */
  interface VerificationTokenFieldRefs {
    readonly identifier: FieldRef<"VerificationToken", 'String'>
    readonly token: FieldRef<"VerificationToken", 'String'>
    readonly expires: FieldRef<"VerificationToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * VerificationToken findUnique
   */
  export type VerificationTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken findUniqueOrThrow
   */
  export type VerificationTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken findFirst
   */
  export type VerificationTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationTokens.
     */
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken findFirstOrThrow
   */
  export type VerificationTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationTokens.
     */
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken findMany
   */
  export type VerificationTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationTokens to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken create
   */
  export type VerificationTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data needed to create a VerificationToken.
     */
    data: XOR<VerificationTokenCreateInput, VerificationTokenUncheckedCreateInput>
  }

  /**
   * VerificationToken createMany
   */
  export type VerificationTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VerificationTokens.
     */
    data: VerificationTokenCreateManyInput | VerificationTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VerificationToken createManyAndReturn
   */
  export type VerificationTokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data used to create many VerificationTokens.
     */
    data: VerificationTokenCreateManyInput | VerificationTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VerificationToken update
   */
  export type VerificationTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data needed to update a VerificationToken.
     */
    data: XOR<VerificationTokenUpdateInput, VerificationTokenUncheckedUpdateInput>
    /**
     * Choose, which VerificationToken to update.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken updateMany
   */
  export type VerificationTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VerificationTokens.
     */
    data: XOR<VerificationTokenUpdateManyMutationInput, VerificationTokenUncheckedUpdateManyInput>
    /**
     * Filter which VerificationTokens to update
     */
    where?: VerificationTokenWhereInput
    /**
     * Limit how many VerificationTokens to update.
     */
    limit?: number
  }

  /**
   * VerificationToken updateManyAndReturn
   */
  export type VerificationTokenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data used to update VerificationTokens.
     */
    data: XOR<VerificationTokenUpdateManyMutationInput, VerificationTokenUncheckedUpdateManyInput>
    /**
     * Filter which VerificationTokens to update
     */
    where?: VerificationTokenWhereInput
    /**
     * Limit how many VerificationTokens to update.
     */
    limit?: number
  }

  /**
   * VerificationToken upsert
   */
  export type VerificationTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The filter to search for the VerificationToken to update in case it exists.
     */
    where: VerificationTokenWhereUniqueInput
    /**
     * In case the VerificationToken found by the `where` argument doesn't exist, create a new VerificationToken with this data.
     */
    create: XOR<VerificationTokenCreateInput, VerificationTokenUncheckedCreateInput>
    /**
     * In case the VerificationToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VerificationTokenUpdateInput, VerificationTokenUncheckedUpdateInput>
  }

  /**
   * VerificationToken delete
   */
  export type VerificationTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter which VerificationToken to delete.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken deleteMany
   */
  export type VerificationTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationTokens to delete
     */
    where?: VerificationTokenWhereInput
    /**
     * Limit how many VerificationTokens to delete.
     */
    limit?: number
  }

  /**
   * VerificationToken without action
   */
  export type VerificationTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
  }


  /**
   * Model EchoApp
   */

  export type AggregateEchoApp = {
    _count: EchoAppCountAggregateOutputType | null
    _min: EchoAppMinAggregateOutputType | null
    _max: EchoAppMaxAggregateOutputType | null
  }

  export type EchoAppMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    profilePictureUrl: string | null
    bannerImageUrl: string | null
    homepageUrl: string | null
    isPublic: boolean | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    currentReferralRewardId: string | null
  }

  export type EchoAppMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    profilePictureUrl: string | null
    bannerImageUrl: string | null
    homepageUrl: string | null
    isPublic: boolean | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    currentReferralRewardId: string | null
  }

  export type EchoAppCountAggregateOutputType = {
    id: number
    name: number
    description: number
    profilePictureUrl: number
    bannerImageUrl: number
    homepageUrl: number
    isPublic: number
    isArchived: number
    archivedAt: number
    createdAt: number
    updatedAt: number
    authorizedCallbackUrls: number
    currentReferralRewardId: number
    _all: number
  }


  export type EchoAppMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    profilePictureUrl?: true
    bannerImageUrl?: true
    homepageUrl?: true
    isPublic?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    currentReferralRewardId?: true
  }

  export type EchoAppMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    profilePictureUrl?: true
    bannerImageUrl?: true
    homepageUrl?: true
    isPublic?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    currentReferralRewardId?: true
  }

  export type EchoAppCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    profilePictureUrl?: true
    bannerImageUrl?: true
    homepageUrl?: true
    isPublic?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    authorizedCallbackUrls?: true
    currentReferralRewardId?: true
    _all?: true
  }

  export type EchoAppAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EchoApp to aggregate.
     */
    where?: EchoAppWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EchoApps to fetch.
     */
    orderBy?: EchoAppOrderByWithRelationInput | EchoAppOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EchoAppWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EchoApps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EchoApps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EchoApps
    **/
    _count?: true | EchoAppCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EchoAppMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EchoAppMaxAggregateInputType
  }

  export type GetEchoAppAggregateType<T extends EchoAppAggregateArgs> = {
        [P in keyof T & keyof AggregateEchoApp]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEchoApp[P]>
      : GetScalarType<T[P], AggregateEchoApp[P]>
  }




  export type EchoAppGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EchoAppWhereInput
    orderBy?: EchoAppOrderByWithAggregationInput | EchoAppOrderByWithAggregationInput[]
    by: EchoAppScalarFieldEnum[] | EchoAppScalarFieldEnum
    having?: EchoAppScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EchoAppCountAggregateInputType | true
    _min?: EchoAppMinAggregateInputType
    _max?: EchoAppMaxAggregateInputType
  }

  export type EchoAppGroupByOutputType = {
    id: string
    name: string
    description: string | null
    profilePictureUrl: string | null
    bannerImageUrl: string | null
    homepageUrl: string | null
    isPublic: boolean
    isArchived: boolean
    archivedAt: Date | null
    createdAt: Date
    updatedAt: Date
    authorizedCallbackUrls: string[]
    currentReferralRewardId: string | null
    _count: EchoAppCountAggregateOutputType | null
    _min: EchoAppMinAggregateOutputType | null
    _max: EchoAppMaxAggregateOutputType | null
  }

  type GetEchoAppGroupByPayload<T extends EchoAppGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EchoAppGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EchoAppGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EchoAppGroupByOutputType[P]>
            : GetScalarType<T[P], EchoAppGroupByOutputType[P]>
        }
      >
    >


  export type EchoAppSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    profilePictureUrl?: boolean
    bannerImageUrl?: boolean
    homepageUrl?: boolean
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    authorizedCallbackUrls?: boolean
    currentReferralRewardId?: boolean
    apiKeys?: boolean | EchoApp$apiKeysArgs<ExtArgs>
    Transactions?: boolean | EchoApp$TransactionsArgs<ExtArgs>
    refreshTokens?: boolean | EchoApp$refreshTokensArgs<ExtArgs>
    appMemberships?: boolean | EchoApp$appMembershipsArgs<ExtArgs>
    markUp?: boolean | EchoApp$markUpArgs<ExtArgs>
    githubLink?: boolean | EchoApp$githubLinkArgs<ExtArgs>
    spendPools?: boolean | EchoApp$spendPoolsArgs<ExtArgs>
    ReferralCode?: boolean | EchoApp$ReferralCodeArgs<ExtArgs>
    currentReferralReward?: boolean | EchoApp$currentReferralRewardArgs<ExtArgs>
    ReferralRewards?: boolean | EchoApp$ReferralRewardsArgs<ExtArgs>
    appSessions?: boolean | EchoApp$appSessionsArgs<ExtArgs>
    _count?: boolean | EchoAppCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["echoApp"]>

  export type EchoAppSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    profilePictureUrl?: boolean
    bannerImageUrl?: boolean
    homepageUrl?: boolean
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    authorizedCallbackUrls?: boolean
    currentReferralRewardId?: boolean
    currentReferralReward?: boolean | EchoApp$currentReferralRewardArgs<ExtArgs>
  }, ExtArgs["result"]["echoApp"]>

  export type EchoAppSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    profilePictureUrl?: boolean
    bannerImageUrl?: boolean
    homepageUrl?: boolean
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    authorizedCallbackUrls?: boolean
    currentReferralRewardId?: boolean
    currentReferralReward?: boolean | EchoApp$currentReferralRewardArgs<ExtArgs>
  }, ExtArgs["result"]["echoApp"]>

  export type EchoAppSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    profilePictureUrl?: boolean
    bannerImageUrl?: boolean
    homepageUrl?: boolean
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    authorizedCallbackUrls?: boolean
    currentReferralRewardId?: boolean
  }

  export type EchoAppOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "profilePictureUrl" | "bannerImageUrl" | "homepageUrl" | "isPublic" | "isArchived" | "archivedAt" | "createdAt" | "updatedAt" | "authorizedCallbackUrls" | "currentReferralRewardId", ExtArgs["result"]["echoApp"]>
  export type EchoAppInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    apiKeys?: boolean | EchoApp$apiKeysArgs<ExtArgs>
    Transactions?: boolean | EchoApp$TransactionsArgs<ExtArgs>
    refreshTokens?: boolean | EchoApp$refreshTokensArgs<ExtArgs>
    appMemberships?: boolean | EchoApp$appMembershipsArgs<ExtArgs>
    markUp?: boolean | EchoApp$markUpArgs<ExtArgs>
    githubLink?: boolean | EchoApp$githubLinkArgs<ExtArgs>
    spendPools?: boolean | EchoApp$spendPoolsArgs<ExtArgs>
    ReferralCode?: boolean | EchoApp$ReferralCodeArgs<ExtArgs>
    currentReferralReward?: boolean | EchoApp$currentReferralRewardArgs<ExtArgs>
    ReferralRewards?: boolean | EchoApp$ReferralRewardsArgs<ExtArgs>
    appSessions?: boolean | EchoApp$appSessionsArgs<ExtArgs>
    _count?: boolean | EchoAppCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EchoAppIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    currentReferralReward?: boolean | EchoApp$currentReferralRewardArgs<ExtArgs>
  }
  export type EchoAppIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    currentReferralReward?: boolean | EchoApp$currentReferralRewardArgs<ExtArgs>
  }

  export type $EchoAppPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EchoApp"
    objects: {
      apiKeys: Prisma.$ApiKeyPayload<ExtArgs>[]
      Transactions: Prisma.$TransactionPayload<ExtArgs>[]
      refreshTokens: Prisma.$RefreshTokenPayload<ExtArgs>[]
      appMemberships: Prisma.$AppMembershipPayload<ExtArgs>[]
      markUp: Prisma.$MarkUpPayload<ExtArgs> | null
      githubLink: Prisma.$GithubLinkPayload<ExtArgs> | null
      spendPools: Prisma.$SpendPoolPayload<ExtArgs>[]
      ReferralCode: Prisma.$ReferralCodePayload<ExtArgs>[]
      currentReferralReward: Prisma.$ReferralRewardPayload<ExtArgs> | null
      ReferralRewards: Prisma.$ReferralRewardPayload<ExtArgs>[]
      appSessions: Prisma.$AppSessionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      profilePictureUrl: string | null
      bannerImageUrl: string | null
      homepageUrl: string | null
      isPublic: boolean
      isArchived: boolean
      archivedAt: Date | null
      createdAt: Date
      updatedAt: Date
      authorizedCallbackUrls: string[]
      currentReferralRewardId: string | null
    }, ExtArgs["result"]["echoApp"]>
    composites: {}
  }

  type EchoAppGetPayload<S extends boolean | null | undefined | EchoAppDefaultArgs> = $Result.GetResult<Prisma.$EchoAppPayload, S>

  type EchoAppCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EchoAppFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EchoAppCountAggregateInputType | true
    }

  export interface EchoAppDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EchoApp'], meta: { name: 'EchoApp' } }
    /**
     * Find zero or one EchoApp that matches the filter.
     * @param {EchoAppFindUniqueArgs} args - Arguments to find a EchoApp
     * @example
     * // Get one EchoApp
     * const echoApp = await prisma.echoApp.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EchoAppFindUniqueArgs>(args: SelectSubset<T, EchoAppFindUniqueArgs<ExtArgs>>): Prisma__EchoAppClient<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EchoApp that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EchoAppFindUniqueOrThrowArgs} args - Arguments to find a EchoApp
     * @example
     * // Get one EchoApp
     * const echoApp = await prisma.echoApp.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EchoAppFindUniqueOrThrowArgs>(args: SelectSubset<T, EchoAppFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EchoAppClient<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EchoApp that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EchoAppFindFirstArgs} args - Arguments to find a EchoApp
     * @example
     * // Get one EchoApp
     * const echoApp = await prisma.echoApp.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EchoAppFindFirstArgs>(args?: SelectSubset<T, EchoAppFindFirstArgs<ExtArgs>>): Prisma__EchoAppClient<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EchoApp that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EchoAppFindFirstOrThrowArgs} args - Arguments to find a EchoApp
     * @example
     * // Get one EchoApp
     * const echoApp = await prisma.echoApp.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EchoAppFindFirstOrThrowArgs>(args?: SelectSubset<T, EchoAppFindFirstOrThrowArgs<ExtArgs>>): Prisma__EchoAppClient<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EchoApps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EchoAppFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EchoApps
     * const echoApps = await prisma.echoApp.findMany()
     * 
     * // Get first 10 EchoApps
     * const echoApps = await prisma.echoApp.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const echoAppWithIdOnly = await prisma.echoApp.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EchoAppFindManyArgs>(args?: SelectSubset<T, EchoAppFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EchoApp.
     * @param {EchoAppCreateArgs} args - Arguments to create a EchoApp.
     * @example
     * // Create one EchoApp
     * const EchoApp = await prisma.echoApp.create({
     *   data: {
     *     // ... data to create a EchoApp
     *   }
     * })
     * 
     */
    create<T extends EchoAppCreateArgs>(args: SelectSubset<T, EchoAppCreateArgs<ExtArgs>>): Prisma__EchoAppClient<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EchoApps.
     * @param {EchoAppCreateManyArgs} args - Arguments to create many EchoApps.
     * @example
     * // Create many EchoApps
     * const echoApp = await prisma.echoApp.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EchoAppCreateManyArgs>(args?: SelectSubset<T, EchoAppCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EchoApps and returns the data saved in the database.
     * @param {EchoAppCreateManyAndReturnArgs} args - Arguments to create many EchoApps.
     * @example
     * // Create many EchoApps
     * const echoApp = await prisma.echoApp.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EchoApps and only return the `id`
     * const echoAppWithIdOnly = await prisma.echoApp.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EchoAppCreateManyAndReturnArgs>(args?: SelectSubset<T, EchoAppCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EchoApp.
     * @param {EchoAppDeleteArgs} args - Arguments to delete one EchoApp.
     * @example
     * // Delete one EchoApp
     * const EchoApp = await prisma.echoApp.delete({
     *   where: {
     *     // ... filter to delete one EchoApp
     *   }
     * })
     * 
     */
    delete<T extends EchoAppDeleteArgs>(args: SelectSubset<T, EchoAppDeleteArgs<ExtArgs>>): Prisma__EchoAppClient<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EchoApp.
     * @param {EchoAppUpdateArgs} args - Arguments to update one EchoApp.
     * @example
     * // Update one EchoApp
     * const echoApp = await prisma.echoApp.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EchoAppUpdateArgs>(args: SelectSubset<T, EchoAppUpdateArgs<ExtArgs>>): Prisma__EchoAppClient<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EchoApps.
     * @param {EchoAppDeleteManyArgs} args - Arguments to filter EchoApps to delete.
     * @example
     * // Delete a few EchoApps
     * const { count } = await prisma.echoApp.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EchoAppDeleteManyArgs>(args?: SelectSubset<T, EchoAppDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EchoApps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EchoAppUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EchoApps
     * const echoApp = await prisma.echoApp.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EchoAppUpdateManyArgs>(args: SelectSubset<T, EchoAppUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EchoApps and returns the data updated in the database.
     * @param {EchoAppUpdateManyAndReturnArgs} args - Arguments to update many EchoApps.
     * @example
     * // Update many EchoApps
     * const echoApp = await prisma.echoApp.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EchoApps and only return the `id`
     * const echoAppWithIdOnly = await prisma.echoApp.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EchoAppUpdateManyAndReturnArgs>(args: SelectSubset<T, EchoAppUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EchoApp.
     * @param {EchoAppUpsertArgs} args - Arguments to update or create a EchoApp.
     * @example
     * // Update or create a EchoApp
     * const echoApp = await prisma.echoApp.upsert({
     *   create: {
     *     // ... data to create a EchoApp
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EchoApp we want to update
     *   }
     * })
     */
    upsert<T extends EchoAppUpsertArgs>(args: SelectSubset<T, EchoAppUpsertArgs<ExtArgs>>): Prisma__EchoAppClient<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EchoApps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EchoAppCountArgs} args - Arguments to filter EchoApps to count.
     * @example
     * // Count the number of EchoApps
     * const count = await prisma.echoApp.count({
     *   where: {
     *     // ... the filter for the EchoApps we want to count
     *   }
     * })
    **/
    count<T extends EchoAppCountArgs>(
      args?: Subset<T, EchoAppCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EchoAppCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EchoApp.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EchoAppAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EchoAppAggregateArgs>(args: Subset<T, EchoAppAggregateArgs>): Prisma.PrismaPromise<GetEchoAppAggregateType<T>>

    /**
     * Group by EchoApp.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EchoAppGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EchoAppGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EchoAppGroupByArgs['orderBy'] }
        : { orderBy?: EchoAppGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EchoAppGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEchoAppGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EchoApp model
   */
  readonly fields: EchoAppFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EchoApp.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EchoAppClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    apiKeys<T extends EchoApp$apiKeysArgs<ExtArgs> = {}>(args?: Subset<T, EchoApp$apiKeysArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Transactions<T extends EchoApp$TransactionsArgs<ExtArgs> = {}>(args?: Subset<T, EchoApp$TransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    refreshTokens<T extends EchoApp$refreshTokensArgs<ExtArgs> = {}>(args?: Subset<T, EchoApp$refreshTokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    appMemberships<T extends EchoApp$appMembershipsArgs<ExtArgs> = {}>(args?: Subset<T, EchoApp$appMembershipsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppMembershipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    markUp<T extends EchoApp$markUpArgs<ExtArgs> = {}>(args?: Subset<T, EchoApp$markUpArgs<ExtArgs>>): Prisma__MarkUpClient<$Result.GetResult<Prisma.$MarkUpPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    githubLink<T extends EchoApp$githubLinkArgs<ExtArgs> = {}>(args?: Subset<T, EchoApp$githubLinkArgs<ExtArgs>>): Prisma__GithubLinkClient<$Result.GetResult<Prisma.$GithubLinkPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    spendPools<T extends EchoApp$spendPoolsArgs<ExtArgs> = {}>(args?: Subset<T, EchoApp$spendPoolsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SpendPoolPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ReferralCode<T extends EchoApp$ReferralCodeArgs<ExtArgs> = {}>(args?: Subset<T, EchoApp$ReferralCodeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReferralCodePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    currentReferralReward<T extends EchoApp$currentReferralRewardArgs<ExtArgs> = {}>(args?: Subset<T, EchoApp$currentReferralRewardArgs<ExtArgs>>): Prisma__ReferralRewardClient<$Result.GetResult<Prisma.$ReferralRewardPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ReferralRewards<T extends EchoApp$ReferralRewardsArgs<ExtArgs> = {}>(args?: Subset<T, EchoApp$ReferralRewardsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReferralRewardPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    appSessions<T extends EchoApp$appSessionsArgs<ExtArgs> = {}>(args?: Subset<T, EchoApp$appSessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppSessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EchoApp model
   */
  interface EchoAppFieldRefs {
    readonly id: FieldRef<"EchoApp", 'String'>
    readonly name: FieldRef<"EchoApp", 'String'>
    readonly description: FieldRef<"EchoApp", 'String'>
    readonly profilePictureUrl: FieldRef<"EchoApp", 'String'>
    readonly bannerImageUrl: FieldRef<"EchoApp", 'String'>
    readonly homepageUrl: FieldRef<"EchoApp", 'String'>
    readonly isPublic: FieldRef<"EchoApp", 'Boolean'>
    readonly isArchived: FieldRef<"EchoApp", 'Boolean'>
    readonly archivedAt: FieldRef<"EchoApp", 'DateTime'>
    readonly createdAt: FieldRef<"EchoApp", 'DateTime'>
    readonly updatedAt: FieldRef<"EchoApp", 'DateTime'>
    readonly authorizedCallbackUrls: FieldRef<"EchoApp", 'String[]'>
    readonly currentReferralRewardId: FieldRef<"EchoApp", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EchoApp findUnique
   */
  export type EchoAppFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EchoApp
     */
    select?: EchoAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EchoApp
     */
    omit?: EchoAppOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EchoAppInclude<ExtArgs> | null
    /**
     * Filter, which EchoApp to fetch.
     */
    where: EchoAppWhereUniqueInput
  }

  /**
   * EchoApp findUniqueOrThrow
   */
  export type EchoAppFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EchoApp
     */
    select?: EchoAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EchoApp
     */
    omit?: EchoAppOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EchoAppInclude<ExtArgs> | null
    /**
     * Filter, which EchoApp to fetch.
     */
    where: EchoAppWhereUniqueInput
  }

  /**
   * EchoApp findFirst
   */
  export type EchoAppFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EchoApp
     */
    select?: EchoAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EchoApp
     */
    omit?: EchoAppOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EchoAppInclude<ExtArgs> | null
    /**
     * Filter, which EchoApp to fetch.
     */
    where?: EchoAppWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EchoApps to fetch.
     */
    orderBy?: EchoAppOrderByWithRelationInput | EchoAppOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EchoApps.
     */
    cursor?: EchoAppWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EchoApps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EchoApps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EchoApps.
     */
    distinct?: EchoAppScalarFieldEnum | EchoAppScalarFieldEnum[]
  }

  /**
   * EchoApp findFirstOrThrow
   */
  export type EchoAppFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EchoApp
     */
    select?: EchoAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EchoApp
     */
    omit?: EchoAppOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EchoAppInclude<ExtArgs> | null
    /**
     * Filter, which EchoApp to fetch.
     */
    where?: EchoAppWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EchoApps to fetch.
     */
    orderBy?: EchoAppOrderByWithRelationInput | EchoAppOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EchoApps.
     */
    cursor?: EchoAppWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EchoApps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EchoApps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EchoApps.
     */
    distinct?: EchoAppScalarFieldEnum | EchoAppScalarFieldEnum[]
  }

  /**
   * EchoApp findMany
   */
  export type EchoAppFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EchoApp
     */
    select?: EchoAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EchoApp
     */
    omit?: EchoAppOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EchoAppInclude<ExtArgs> | null
    /**
     * Filter, which EchoApps to fetch.
     */
    where?: EchoAppWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EchoApps to fetch.
     */
    orderBy?: EchoAppOrderByWithRelationInput | EchoAppOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EchoApps.
     */
    cursor?: EchoAppWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EchoApps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EchoApps.
     */
    skip?: number
    distinct?: EchoAppScalarFieldEnum | EchoAppScalarFieldEnum[]
  }

  /**
   * EchoApp create
   */
  export type EchoAppCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EchoApp
     */
    select?: EchoAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EchoApp
     */
    omit?: EchoAppOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EchoAppInclude<ExtArgs> | null
    /**
     * The data needed to create a EchoApp.
     */
    data: XOR<EchoAppCreateInput, EchoAppUncheckedCreateInput>
  }

  /**
   * EchoApp createMany
   */
  export type EchoAppCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EchoApps.
     */
    data: EchoAppCreateManyInput | EchoAppCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EchoApp createManyAndReturn
   */
  export type EchoAppCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EchoApp
     */
    select?: EchoAppSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EchoApp
     */
    omit?: EchoAppOmit<ExtArgs> | null
    /**
     * The data used to create many EchoApps.
     */
    data: EchoAppCreateManyInput | EchoAppCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EchoAppIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EchoApp update
   */
  export type EchoAppUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EchoApp
     */
    select?: EchoAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EchoApp
     */
    omit?: EchoAppOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EchoAppInclude<ExtArgs> | null
    /**
     * The data needed to update a EchoApp.
     */
    data: XOR<EchoAppUpdateInput, EchoAppUncheckedUpdateInput>
    /**
     * Choose, which EchoApp to update.
     */
    where: EchoAppWhereUniqueInput
  }

  /**
   * EchoApp updateMany
   */
  export type EchoAppUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EchoApps.
     */
    data: XOR<EchoAppUpdateManyMutationInput, EchoAppUncheckedUpdateManyInput>
    /**
     * Filter which EchoApps to update
     */
    where?: EchoAppWhereInput
    /**
     * Limit how many EchoApps to update.
     */
    limit?: number
  }

  /**
   * EchoApp updateManyAndReturn
   */
  export type EchoAppUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EchoApp
     */
    select?: EchoAppSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EchoApp
     */
    omit?: EchoAppOmit<ExtArgs> | null
    /**
     * The data used to update EchoApps.
     */
    data: XOR<EchoAppUpdateManyMutationInput, EchoAppUncheckedUpdateManyInput>
    /**
     * Filter which EchoApps to update
     */
    where?: EchoAppWhereInput
    /**
     * Limit how many EchoApps to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EchoAppIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * EchoApp upsert
   */
  export type EchoAppUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EchoApp
     */
    select?: EchoAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EchoApp
     */
    omit?: EchoAppOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EchoAppInclude<ExtArgs> | null
    /**
     * The filter to search for the EchoApp to update in case it exists.
     */
    where: EchoAppWhereUniqueInput
    /**
     * In case the EchoApp found by the `where` argument doesn't exist, create a new EchoApp with this data.
     */
    create: XOR<EchoAppCreateInput, EchoAppUncheckedCreateInput>
    /**
     * In case the EchoApp was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EchoAppUpdateInput, EchoAppUncheckedUpdateInput>
  }

  /**
   * EchoApp delete
   */
  export type EchoAppDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EchoApp
     */
    select?: EchoAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EchoApp
     */
    omit?: EchoAppOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EchoAppInclude<ExtArgs> | null
    /**
     * Filter which EchoApp to delete.
     */
    where: EchoAppWhereUniqueInput
  }

  /**
   * EchoApp deleteMany
   */
  export type EchoAppDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EchoApps to delete
     */
    where?: EchoAppWhereInput
    /**
     * Limit how many EchoApps to delete.
     */
    limit?: number
  }

  /**
   * EchoApp.apiKeys
   */
  export type EchoApp$apiKeysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiKey
     */
    omit?: ApiKeyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    where?: ApiKeyWhereInput
    orderBy?: ApiKeyOrderByWithRelationInput | ApiKeyOrderByWithRelationInput[]
    cursor?: ApiKeyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApiKeyScalarFieldEnum | ApiKeyScalarFieldEnum[]
  }

  /**
   * EchoApp.Transactions
   */
  export type EchoApp$TransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    where?: TransactionWhereInput
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    cursor?: TransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * EchoApp.refreshTokens
   */
  export type EchoApp$refreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    cursor?: RefreshTokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * EchoApp.appMemberships
   */
  export type EchoApp$appMembershipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMembership
     */
    select?: AppMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppMembership
     */
    omit?: AppMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppMembershipInclude<ExtArgs> | null
    where?: AppMembershipWhereInput
    orderBy?: AppMembershipOrderByWithRelationInput | AppMembershipOrderByWithRelationInput[]
    cursor?: AppMembershipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AppMembershipScalarFieldEnum | AppMembershipScalarFieldEnum[]
  }

  /**
   * EchoApp.markUp
   */
  export type EchoApp$markUpArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarkUp
     */
    select?: MarkUpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarkUp
     */
    omit?: MarkUpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarkUpInclude<ExtArgs> | null
    where?: MarkUpWhereInput
  }

  /**
   * EchoApp.githubLink
   */
  export type EchoApp$githubLinkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GithubLink
     */
    select?: GithubLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GithubLink
     */
    omit?: GithubLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GithubLinkInclude<ExtArgs> | null
    where?: GithubLinkWhereInput
  }

  /**
   * EchoApp.spendPools
   */
  export type EchoApp$spendPoolsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpendPool
     */
    select?: SpendPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SpendPool
     */
    omit?: SpendPoolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpendPoolInclude<ExtArgs> | null
    where?: SpendPoolWhereInput
    orderBy?: SpendPoolOrderByWithRelationInput | SpendPoolOrderByWithRelationInput[]
    cursor?: SpendPoolWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SpendPoolScalarFieldEnum | SpendPoolScalarFieldEnum[]
  }

  /**
   * EchoApp.ReferralCode
   */
  export type EchoApp$ReferralCodeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralCode
     */
    select?: ReferralCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralCode
     */
    omit?: ReferralCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralCodeInclude<ExtArgs> | null
    where?: ReferralCodeWhereInput
    orderBy?: ReferralCodeOrderByWithRelationInput | ReferralCodeOrderByWithRelationInput[]
    cursor?: ReferralCodeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReferralCodeScalarFieldEnum | ReferralCodeScalarFieldEnum[]
  }

  /**
   * EchoApp.currentReferralReward
   */
  export type EchoApp$currentReferralRewardArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralReward
     */
    select?: ReferralRewardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralReward
     */
    omit?: ReferralRewardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralRewardInclude<ExtArgs> | null
    where?: ReferralRewardWhereInput
  }

  /**
   * EchoApp.ReferralRewards
   */
  export type EchoApp$ReferralRewardsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralReward
     */
    select?: ReferralRewardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralReward
     */
    omit?: ReferralRewardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralRewardInclude<ExtArgs> | null
    where?: ReferralRewardWhereInput
    orderBy?: ReferralRewardOrderByWithRelationInput | ReferralRewardOrderByWithRelationInput[]
    cursor?: ReferralRewardWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReferralRewardScalarFieldEnum | ReferralRewardScalarFieldEnum[]
  }

  /**
   * EchoApp.appSessions
   */
  export type EchoApp$appSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppSession
     */
    select?: AppSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppSession
     */
    omit?: AppSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppSessionInclude<ExtArgs> | null
    where?: AppSessionWhereInput
    orderBy?: AppSessionOrderByWithRelationInput | AppSessionOrderByWithRelationInput[]
    cursor?: AppSessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AppSessionScalarFieldEnum | AppSessionScalarFieldEnum[]
  }

  /**
   * EchoApp without action
   */
  export type EchoAppDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EchoApp
     */
    select?: EchoAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EchoApp
     */
    omit?: EchoAppOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EchoAppInclude<ExtArgs> | null
  }


  /**
   * Model AppMembership
   */

  export type AggregateAppMembership = {
    _count: AppMembershipCountAggregateOutputType | null
    _avg: AppMembershipAvgAggregateOutputType | null
    _sum: AppMembershipSumAggregateOutputType | null
    _min: AppMembershipMinAggregateOutputType | null
    _max: AppMembershipMaxAggregateOutputType | null
  }

  export type AppMembershipAvgAggregateOutputType = {
    totalSpent: Decimal | null
    amountSpent: Decimal | null
  }

  export type AppMembershipSumAggregateOutputType = {
    totalSpent: Decimal | null
    amountSpent: Decimal | null
  }

  export type AppMembershipMinAggregateOutputType = {
    id: string | null
    userId: string | null
    echoAppId: string | null
    role: string | null
    status: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    totalSpent: Decimal | null
    amountSpent: Decimal | null
    referrerId: string | null
  }

  export type AppMembershipMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    echoAppId: string | null
    role: string | null
    status: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    totalSpent: Decimal | null
    amountSpent: Decimal | null
    referrerId: string | null
  }

  export type AppMembershipCountAggregateOutputType = {
    id: number
    userId: number
    echoAppId: number
    role: number
    status: number
    isArchived: number
    archivedAt: number
    createdAt: number
    updatedAt: number
    totalSpent: number
    amountSpent: number
    referrerId: number
    _all: number
  }


  export type AppMembershipAvgAggregateInputType = {
    totalSpent?: true
    amountSpent?: true
  }

  export type AppMembershipSumAggregateInputType = {
    totalSpent?: true
    amountSpent?: true
  }

  export type AppMembershipMinAggregateInputType = {
    id?: true
    userId?: true
    echoAppId?: true
    role?: true
    status?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    totalSpent?: true
    amountSpent?: true
    referrerId?: true
  }

  export type AppMembershipMaxAggregateInputType = {
    id?: true
    userId?: true
    echoAppId?: true
    role?: true
    status?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    totalSpent?: true
    amountSpent?: true
    referrerId?: true
  }

  export type AppMembershipCountAggregateInputType = {
    id?: true
    userId?: true
    echoAppId?: true
    role?: true
    status?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    totalSpent?: true
    amountSpent?: true
    referrerId?: true
    _all?: true
  }

  export type AppMembershipAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AppMembership to aggregate.
     */
    where?: AppMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AppMemberships to fetch.
     */
    orderBy?: AppMembershipOrderByWithRelationInput | AppMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AppMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AppMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AppMemberships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AppMemberships
    **/
    _count?: true | AppMembershipCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AppMembershipAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AppMembershipSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AppMembershipMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AppMembershipMaxAggregateInputType
  }

  export type GetAppMembershipAggregateType<T extends AppMembershipAggregateArgs> = {
        [P in keyof T & keyof AggregateAppMembership]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAppMembership[P]>
      : GetScalarType<T[P], AggregateAppMembership[P]>
  }




  export type AppMembershipGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AppMembershipWhereInput
    orderBy?: AppMembershipOrderByWithAggregationInput | AppMembershipOrderByWithAggregationInput[]
    by: AppMembershipScalarFieldEnum[] | AppMembershipScalarFieldEnum
    having?: AppMembershipScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AppMembershipCountAggregateInputType | true
    _avg?: AppMembershipAvgAggregateInputType
    _sum?: AppMembershipSumAggregateInputType
    _min?: AppMembershipMinAggregateInputType
    _max?: AppMembershipMaxAggregateInputType
  }

  export type AppMembershipGroupByOutputType = {
    id: string
    userId: string
    echoAppId: string
    role: string
    status: string
    isArchived: boolean
    archivedAt: Date | null
    createdAt: Date
    updatedAt: Date
    totalSpent: Decimal
    amountSpent: Decimal
    referrerId: string | null
    _count: AppMembershipCountAggregateOutputType | null
    _avg: AppMembershipAvgAggregateOutputType | null
    _sum: AppMembershipSumAggregateOutputType | null
    _min: AppMembershipMinAggregateOutputType | null
    _max: AppMembershipMaxAggregateOutputType | null
  }

  type GetAppMembershipGroupByPayload<T extends AppMembershipGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AppMembershipGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AppMembershipGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AppMembershipGroupByOutputType[P]>
            : GetScalarType<T[P], AppMembershipGroupByOutputType[P]>
        }
      >
    >


  export type AppMembershipSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    echoAppId?: boolean
    role?: boolean
    status?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    totalSpent?: boolean
    amountSpent?: boolean
    referrerId?: boolean
    referrer?: boolean | AppMembership$referrerArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["appMembership"]>

  export type AppMembershipSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    echoAppId?: boolean
    role?: boolean
    status?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    totalSpent?: boolean
    amountSpent?: boolean
    referrerId?: boolean
    referrer?: boolean | AppMembership$referrerArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["appMembership"]>

  export type AppMembershipSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    echoAppId?: boolean
    role?: boolean
    status?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    totalSpent?: boolean
    amountSpent?: boolean
    referrerId?: boolean
    referrer?: boolean | AppMembership$referrerArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["appMembership"]>

  export type AppMembershipSelectScalar = {
    id?: boolean
    userId?: boolean
    echoAppId?: boolean
    role?: boolean
    status?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    totalSpent?: boolean
    amountSpent?: boolean
    referrerId?: boolean
  }

  export type AppMembershipOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "echoAppId" | "role" | "status" | "isArchived" | "archivedAt" | "createdAt" | "updatedAt" | "totalSpent" | "amountSpent" | "referrerId", ExtArgs["result"]["appMembership"]>
  export type AppMembershipInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    referrer?: boolean | AppMembership$referrerArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AppMembershipIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    referrer?: boolean | AppMembership$referrerArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AppMembershipIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    referrer?: boolean | AppMembership$referrerArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AppMembershipPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AppMembership"
    objects: {
      referrer: Prisma.$ReferralCodePayload<ExtArgs> | null
      echoApp: Prisma.$EchoAppPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      echoAppId: string
      role: string
      status: string
      isArchived: boolean
      archivedAt: Date | null
      createdAt: Date
      updatedAt: Date
      totalSpent: Prisma.Decimal
      amountSpent: Prisma.Decimal
      referrerId: string | null
    }, ExtArgs["result"]["appMembership"]>
    composites: {}
  }

  type AppMembershipGetPayload<S extends boolean | null | undefined | AppMembershipDefaultArgs> = $Result.GetResult<Prisma.$AppMembershipPayload, S>

  type AppMembershipCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AppMembershipFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AppMembershipCountAggregateInputType | true
    }

  export interface AppMembershipDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AppMembership'], meta: { name: 'AppMembership' } }
    /**
     * Find zero or one AppMembership that matches the filter.
     * @param {AppMembershipFindUniqueArgs} args - Arguments to find a AppMembership
     * @example
     * // Get one AppMembership
     * const appMembership = await prisma.appMembership.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AppMembershipFindUniqueArgs>(args: SelectSubset<T, AppMembershipFindUniqueArgs<ExtArgs>>): Prisma__AppMembershipClient<$Result.GetResult<Prisma.$AppMembershipPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AppMembership that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AppMembershipFindUniqueOrThrowArgs} args - Arguments to find a AppMembership
     * @example
     * // Get one AppMembership
     * const appMembership = await prisma.appMembership.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AppMembershipFindUniqueOrThrowArgs>(args: SelectSubset<T, AppMembershipFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AppMembershipClient<$Result.GetResult<Prisma.$AppMembershipPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AppMembership that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppMembershipFindFirstArgs} args - Arguments to find a AppMembership
     * @example
     * // Get one AppMembership
     * const appMembership = await prisma.appMembership.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AppMembershipFindFirstArgs>(args?: SelectSubset<T, AppMembershipFindFirstArgs<ExtArgs>>): Prisma__AppMembershipClient<$Result.GetResult<Prisma.$AppMembershipPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AppMembership that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppMembershipFindFirstOrThrowArgs} args - Arguments to find a AppMembership
     * @example
     * // Get one AppMembership
     * const appMembership = await prisma.appMembership.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AppMembershipFindFirstOrThrowArgs>(args?: SelectSubset<T, AppMembershipFindFirstOrThrowArgs<ExtArgs>>): Prisma__AppMembershipClient<$Result.GetResult<Prisma.$AppMembershipPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AppMemberships that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppMembershipFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AppMemberships
     * const appMemberships = await prisma.appMembership.findMany()
     * 
     * // Get first 10 AppMemberships
     * const appMemberships = await prisma.appMembership.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const appMembershipWithIdOnly = await prisma.appMembership.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AppMembershipFindManyArgs>(args?: SelectSubset<T, AppMembershipFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppMembershipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AppMembership.
     * @param {AppMembershipCreateArgs} args - Arguments to create a AppMembership.
     * @example
     * // Create one AppMembership
     * const AppMembership = await prisma.appMembership.create({
     *   data: {
     *     // ... data to create a AppMembership
     *   }
     * })
     * 
     */
    create<T extends AppMembershipCreateArgs>(args: SelectSubset<T, AppMembershipCreateArgs<ExtArgs>>): Prisma__AppMembershipClient<$Result.GetResult<Prisma.$AppMembershipPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AppMemberships.
     * @param {AppMembershipCreateManyArgs} args - Arguments to create many AppMemberships.
     * @example
     * // Create many AppMemberships
     * const appMembership = await prisma.appMembership.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AppMembershipCreateManyArgs>(args?: SelectSubset<T, AppMembershipCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AppMemberships and returns the data saved in the database.
     * @param {AppMembershipCreateManyAndReturnArgs} args - Arguments to create many AppMemberships.
     * @example
     * // Create many AppMemberships
     * const appMembership = await prisma.appMembership.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AppMemberships and only return the `id`
     * const appMembershipWithIdOnly = await prisma.appMembership.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AppMembershipCreateManyAndReturnArgs>(args?: SelectSubset<T, AppMembershipCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppMembershipPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AppMembership.
     * @param {AppMembershipDeleteArgs} args - Arguments to delete one AppMembership.
     * @example
     * // Delete one AppMembership
     * const AppMembership = await prisma.appMembership.delete({
     *   where: {
     *     // ... filter to delete one AppMembership
     *   }
     * })
     * 
     */
    delete<T extends AppMembershipDeleteArgs>(args: SelectSubset<T, AppMembershipDeleteArgs<ExtArgs>>): Prisma__AppMembershipClient<$Result.GetResult<Prisma.$AppMembershipPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AppMembership.
     * @param {AppMembershipUpdateArgs} args - Arguments to update one AppMembership.
     * @example
     * // Update one AppMembership
     * const appMembership = await prisma.appMembership.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AppMembershipUpdateArgs>(args: SelectSubset<T, AppMembershipUpdateArgs<ExtArgs>>): Prisma__AppMembershipClient<$Result.GetResult<Prisma.$AppMembershipPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AppMemberships.
     * @param {AppMembershipDeleteManyArgs} args - Arguments to filter AppMemberships to delete.
     * @example
     * // Delete a few AppMemberships
     * const { count } = await prisma.appMembership.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AppMembershipDeleteManyArgs>(args?: SelectSubset<T, AppMembershipDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AppMemberships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppMembershipUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AppMemberships
     * const appMembership = await prisma.appMembership.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AppMembershipUpdateManyArgs>(args: SelectSubset<T, AppMembershipUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AppMemberships and returns the data updated in the database.
     * @param {AppMembershipUpdateManyAndReturnArgs} args - Arguments to update many AppMemberships.
     * @example
     * // Update many AppMemberships
     * const appMembership = await prisma.appMembership.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AppMemberships and only return the `id`
     * const appMembershipWithIdOnly = await prisma.appMembership.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AppMembershipUpdateManyAndReturnArgs>(args: SelectSubset<T, AppMembershipUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppMembershipPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AppMembership.
     * @param {AppMembershipUpsertArgs} args - Arguments to update or create a AppMembership.
     * @example
     * // Update or create a AppMembership
     * const appMembership = await prisma.appMembership.upsert({
     *   create: {
     *     // ... data to create a AppMembership
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AppMembership we want to update
     *   }
     * })
     */
    upsert<T extends AppMembershipUpsertArgs>(args: SelectSubset<T, AppMembershipUpsertArgs<ExtArgs>>): Prisma__AppMembershipClient<$Result.GetResult<Prisma.$AppMembershipPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AppMemberships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppMembershipCountArgs} args - Arguments to filter AppMemberships to count.
     * @example
     * // Count the number of AppMemberships
     * const count = await prisma.appMembership.count({
     *   where: {
     *     // ... the filter for the AppMemberships we want to count
     *   }
     * })
    **/
    count<T extends AppMembershipCountArgs>(
      args?: Subset<T, AppMembershipCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AppMembershipCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AppMembership.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppMembershipAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AppMembershipAggregateArgs>(args: Subset<T, AppMembershipAggregateArgs>): Prisma.PrismaPromise<GetAppMembershipAggregateType<T>>

    /**
     * Group by AppMembership.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppMembershipGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AppMembershipGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AppMembershipGroupByArgs['orderBy'] }
        : { orderBy?: AppMembershipGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AppMembershipGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAppMembershipGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AppMembership model
   */
  readonly fields: AppMembershipFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AppMembership.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AppMembershipClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    referrer<T extends AppMembership$referrerArgs<ExtArgs> = {}>(args?: Subset<T, AppMembership$referrerArgs<ExtArgs>>): Prisma__ReferralCodeClient<$Result.GetResult<Prisma.$ReferralCodePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    echoApp<T extends EchoAppDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EchoAppDefaultArgs<ExtArgs>>): Prisma__EchoAppClient<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AppMembership model
   */
  interface AppMembershipFieldRefs {
    readonly id: FieldRef<"AppMembership", 'String'>
    readonly userId: FieldRef<"AppMembership", 'String'>
    readonly echoAppId: FieldRef<"AppMembership", 'String'>
    readonly role: FieldRef<"AppMembership", 'String'>
    readonly status: FieldRef<"AppMembership", 'String'>
    readonly isArchived: FieldRef<"AppMembership", 'Boolean'>
    readonly archivedAt: FieldRef<"AppMembership", 'DateTime'>
    readonly createdAt: FieldRef<"AppMembership", 'DateTime'>
    readonly updatedAt: FieldRef<"AppMembership", 'DateTime'>
    readonly totalSpent: FieldRef<"AppMembership", 'Decimal'>
    readonly amountSpent: FieldRef<"AppMembership", 'Decimal'>
    readonly referrerId: FieldRef<"AppMembership", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AppMembership findUnique
   */
  export type AppMembershipFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMembership
     */
    select?: AppMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppMembership
     */
    omit?: AppMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppMembershipInclude<ExtArgs> | null
    /**
     * Filter, which AppMembership to fetch.
     */
    where: AppMembershipWhereUniqueInput
  }

  /**
   * AppMembership findUniqueOrThrow
   */
  export type AppMembershipFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMembership
     */
    select?: AppMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppMembership
     */
    omit?: AppMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppMembershipInclude<ExtArgs> | null
    /**
     * Filter, which AppMembership to fetch.
     */
    where: AppMembershipWhereUniqueInput
  }

  /**
   * AppMembership findFirst
   */
  export type AppMembershipFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMembership
     */
    select?: AppMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppMembership
     */
    omit?: AppMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppMembershipInclude<ExtArgs> | null
    /**
     * Filter, which AppMembership to fetch.
     */
    where?: AppMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AppMemberships to fetch.
     */
    orderBy?: AppMembershipOrderByWithRelationInput | AppMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AppMemberships.
     */
    cursor?: AppMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AppMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AppMemberships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AppMemberships.
     */
    distinct?: AppMembershipScalarFieldEnum | AppMembershipScalarFieldEnum[]
  }

  /**
   * AppMembership findFirstOrThrow
   */
  export type AppMembershipFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMembership
     */
    select?: AppMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppMembership
     */
    omit?: AppMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppMembershipInclude<ExtArgs> | null
    /**
     * Filter, which AppMembership to fetch.
     */
    where?: AppMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AppMemberships to fetch.
     */
    orderBy?: AppMembershipOrderByWithRelationInput | AppMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AppMemberships.
     */
    cursor?: AppMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AppMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AppMemberships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AppMemberships.
     */
    distinct?: AppMembershipScalarFieldEnum | AppMembershipScalarFieldEnum[]
  }

  /**
   * AppMembership findMany
   */
  export type AppMembershipFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMembership
     */
    select?: AppMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppMembership
     */
    omit?: AppMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppMembershipInclude<ExtArgs> | null
    /**
     * Filter, which AppMemberships to fetch.
     */
    where?: AppMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AppMemberships to fetch.
     */
    orderBy?: AppMembershipOrderByWithRelationInput | AppMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AppMemberships.
     */
    cursor?: AppMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AppMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AppMemberships.
     */
    skip?: number
    distinct?: AppMembershipScalarFieldEnum | AppMembershipScalarFieldEnum[]
  }

  /**
   * AppMembership create
   */
  export type AppMembershipCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMembership
     */
    select?: AppMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppMembership
     */
    omit?: AppMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppMembershipInclude<ExtArgs> | null
    /**
     * The data needed to create a AppMembership.
     */
    data: XOR<AppMembershipCreateInput, AppMembershipUncheckedCreateInput>
  }

  /**
   * AppMembership createMany
   */
  export type AppMembershipCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AppMemberships.
     */
    data: AppMembershipCreateManyInput | AppMembershipCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AppMembership createManyAndReturn
   */
  export type AppMembershipCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMembership
     */
    select?: AppMembershipSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AppMembership
     */
    omit?: AppMembershipOmit<ExtArgs> | null
    /**
     * The data used to create many AppMemberships.
     */
    data: AppMembershipCreateManyInput | AppMembershipCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppMembershipIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AppMembership update
   */
  export type AppMembershipUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMembership
     */
    select?: AppMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppMembership
     */
    omit?: AppMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppMembershipInclude<ExtArgs> | null
    /**
     * The data needed to update a AppMembership.
     */
    data: XOR<AppMembershipUpdateInput, AppMembershipUncheckedUpdateInput>
    /**
     * Choose, which AppMembership to update.
     */
    where: AppMembershipWhereUniqueInput
  }

  /**
   * AppMembership updateMany
   */
  export type AppMembershipUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AppMemberships.
     */
    data: XOR<AppMembershipUpdateManyMutationInput, AppMembershipUncheckedUpdateManyInput>
    /**
     * Filter which AppMemberships to update
     */
    where?: AppMembershipWhereInput
    /**
     * Limit how many AppMemberships to update.
     */
    limit?: number
  }

  /**
   * AppMembership updateManyAndReturn
   */
  export type AppMembershipUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMembership
     */
    select?: AppMembershipSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AppMembership
     */
    omit?: AppMembershipOmit<ExtArgs> | null
    /**
     * The data used to update AppMemberships.
     */
    data: XOR<AppMembershipUpdateManyMutationInput, AppMembershipUncheckedUpdateManyInput>
    /**
     * Filter which AppMemberships to update
     */
    where?: AppMembershipWhereInput
    /**
     * Limit how many AppMemberships to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppMembershipIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AppMembership upsert
   */
  export type AppMembershipUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMembership
     */
    select?: AppMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppMembership
     */
    omit?: AppMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppMembershipInclude<ExtArgs> | null
    /**
     * The filter to search for the AppMembership to update in case it exists.
     */
    where: AppMembershipWhereUniqueInput
    /**
     * In case the AppMembership found by the `where` argument doesn't exist, create a new AppMembership with this data.
     */
    create: XOR<AppMembershipCreateInput, AppMembershipUncheckedCreateInput>
    /**
     * In case the AppMembership was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AppMembershipUpdateInput, AppMembershipUncheckedUpdateInput>
  }

  /**
   * AppMembership delete
   */
  export type AppMembershipDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMembership
     */
    select?: AppMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppMembership
     */
    omit?: AppMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppMembershipInclude<ExtArgs> | null
    /**
     * Filter which AppMembership to delete.
     */
    where: AppMembershipWhereUniqueInput
  }

  /**
   * AppMembership deleteMany
   */
  export type AppMembershipDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AppMemberships to delete
     */
    where?: AppMembershipWhereInput
    /**
     * Limit how many AppMemberships to delete.
     */
    limit?: number
  }

  /**
   * AppMembership.referrer
   */
  export type AppMembership$referrerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralCode
     */
    select?: ReferralCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralCode
     */
    omit?: ReferralCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralCodeInclude<ExtArgs> | null
    where?: ReferralCodeWhereInput
  }

  /**
   * AppMembership without action
   */
  export type AppMembershipDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMembership
     */
    select?: AppMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppMembership
     */
    omit?: AppMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppMembershipInclude<ExtArgs> | null
  }


  /**
   * Model ApiKey
   */

  export type AggregateApiKey = {
    _count: ApiKeyCountAggregateOutputType | null
    _min: ApiKeyMinAggregateOutputType | null
    _max: ApiKeyMaxAggregateOutputType | null
  }

  export type ApiKeyMinAggregateOutputType = {
    id: string | null
    keyHash: string | null
    name: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    lastUsed: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
    echoAppId: string | null
    scope: string | null
  }

  export type ApiKeyMaxAggregateOutputType = {
    id: string | null
    keyHash: string | null
    name: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    lastUsed: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
    echoAppId: string | null
    scope: string | null
  }

  export type ApiKeyCountAggregateOutputType = {
    id: number
    keyHash: number
    name: number
    isArchived: number
    archivedAt: number
    lastUsed: number
    metadata: number
    createdAt: number
    updatedAt: number
    userId: number
    echoAppId: number
    scope: number
    _all: number
  }


  export type ApiKeyMinAggregateInputType = {
    id?: true
    keyHash?: true
    name?: true
    isArchived?: true
    archivedAt?: true
    lastUsed?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    echoAppId?: true
    scope?: true
  }

  export type ApiKeyMaxAggregateInputType = {
    id?: true
    keyHash?: true
    name?: true
    isArchived?: true
    archivedAt?: true
    lastUsed?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    echoAppId?: true
    scope?: true
  }

  export type ApiKeyCountAggregateInputType = {
    id?: true
    keyHash?: true
    name?: true
    isArchived?: true
    archivedAt?: true
    lastUsed?: true
    metadata?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    echoAppId?: true
    scope?: true
    _all?: true
  }

  export type ApiKeyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ApiKey to aggregate.
     */
    where?: ApiKeyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApiKeys to fetch.
     */
    orderBy?: ApiKeyOrderByWithRelationInput | ApiKeyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ApiKeyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApiKeys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApiKeys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ApiKeys
    **/
    _count?: true | ApiKeyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ApiKeyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ApiKeyMaxAggregateInputType
  }

  export type GetApiKeyAggregateType<T extends ApiKeyAggregateArgs> = {
        [P in keyof T & keyof AggregateApiKey]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApiKey[P]>
      : GetScalarType<T[P], AggregateApiKey[P]>
  }




  export type ApiKeyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApiKeyWhereInput
    orderBy?: ApiKeyOrderByWithAggregationInput | ApiKeyOrderByWithAggregationInput[]
    by: ApiKeyScalarFieldEnum[] | ApiKeyScalarFieldEnum
    having?: ApiKeyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ApiKeyCountAggregateInputType | true
    _min?: ApiKeyMinAggregateInputType
    _max?: ApiKeyMaxAggregateInputType
  }

  export type ApiKeyGroupByOutputType = {
    id: string
    keyHash: string
    name: string | null
    isArchived: boolean
    archivedAt: Date | null
    lastUsed: Date | null
    metadata: JsonValue | null
    createdAt: Date
    updatedAt: Date
    userId: string
    echoAppId: string
    scope: string
    _count: ApiKeyCountAggregateOutputType | null
    _min: ApiKeyMinAggregateOutputType | null
    _max: ApiKeyMaxAggregateOutputType | null
  }

  type GetApiKeyGroupByPayload<T extends ApiKeyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ApiKeyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ApiKeyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ApiKeyGroupByOutputType[P]>
            : GetScalarType<T[P], ApiKeyGroupByOutputType[P]>
        }
      >
    >


  export type ApiKeySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    keyHash?: boolean
    name?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    lastUsed?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    echoAppId?: boolean
    scope?: boolean
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    Transactions?: boolean | ApiKey$TransactionsArgs<ExtArgs>
    _count?: boolean | ApiKeyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["apiKey"]>

  export type ApiKeySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    keyHash?: boolean
    name?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    lastUsed?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    echoAppId?: boolean
    scope?: boolean
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["apiKey"]>

  export type ApiKeySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    keyHash?: boolean
    name?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    lastUsed?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    echoAppId?: boolean
    scope?: boolean
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["apiKey"]>

  export type ApiKeySelectScalar = {
    id?: boolean
    keyHash?: boolean
    name?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    lastUsed?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    echoAppId?: boolean
    scope?: boolean
  }

  export type ApiKeyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "keyHash" | "name" | "isArchived" | "archivedAt" | "lastUsed" | "metadata" | "createdAt" | "updatedAt" | "userId" | "echoAppId" | "scope", ExtArgs["result"]["apiKey"]>
  export type ApiKeyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    Transactions?: boolean | ApiKey$TransactionsArgs<ExtArgs>
    _count?: boolean | ApiKeyCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ApiKeyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ApiKeyIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ApiKeyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ApiKey"
    objects: {
      echoApp: Prisma.$EchoAppPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
      Transactions: Prisma.$TransactionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      /**
       * Deterministic HMAC-SHA256 hash of the API key for secure storage and O(1) lookup
       */
      keyHash: string
      name: string | null
      isArchived: boolean
      archivedAt: Date | null
      lastUsed: Date | null
      metadata: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
      userId: string
      echoAppId: string
      scope: string
    }, ExtArgs["result"]["apiKey"]>
    composites: {}
  }

  type ApiKeyGetPayload<S extends boolean | null | undefined | ApiKeyDefaultArgs> = $Result.GetResult<Prisma.$ApiKeyPayload, S>

  type ApiKeyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ApiKeyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ApiKeyCountAggregateInputType | true
    }

  export interface ApiKeyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ApiKey'], meta: { name: 'ApiKey' } }
    /**
     * Find zero or one ApiKey that matches the filter.
     * @param {ApiKeyFindUniqueArgs} args - Arguments to find a ApiKey
     * @example
     * // Get one ApiKey
     * const apiKey = await prisma.apiKey.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ApiKeyFindUniqueArgs>(args: SelectSubset<T, ApiKeyFindUniqueArgs<ExtArgs>>): Prisma__ApiKeyClient<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ApiKey that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ApiKeyFindUniqueOrThrowArgs} args - Arguments to find a ApiKey
     * @example
     * // Get one ApiKey
     * const apiKey = await prisma.apiKey.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ApiKeyFindUniqueOrThrowArgs>(args: SelectSubset<T, ApiKeyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ApiKeyClient<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ApiKey that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyFindFirstArgs} args - Arguments to find a ApiKey
     * @example
     * // Get one ApiKey
     * const apiKey = await prisma.apiKey.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ApiKeyFindFirstArgs>(args?: SelectSubset<T, ApiKeyFindFirstArgs<ExtArgs>>): Prisma__ApiKeyClient<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ApiKey that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyFindFirstOrThrowArgs} args - Arguments to find a ApiKey
     * @example
     * // Get one ApiKey
     * const apiKey = await prisma.apiKey.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ApiKeyFindFirstOrThrowArgs>(args?: SelectSubset<T, ApiKeyFindFirstOrThrowArgs<ExtArgs>>): Prisma__ApiKeyClient<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ApiKeys that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ApiKeys
     * const apiKeys = await prisma.apiKey.findMany()
     * 
     * // Get first 10 ApiKeys
     * const apiKeys = await prisma.apiKey.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const apiKeyWithIdOnly = await prisma.apiKey.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ApiKeyFindManyArgs>(args?: SelectSubset<T, ApiKeyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ApiKey.
     * @param {ApiKeyCreateArgs} args - Arguments to create a ApiKey.
     * @example
     * // Create one ApiKey
     * const ApiKey = await prisma.apiKey.create({
     *   data: {
     *     // ... data to create a ApiKey
     *   }
     * })
     * 
     */
    create<T extends ApiKeyCreateArgs>(args: SelectSubset<T, ApiKeyCreateArgs<ExtArgs>>): Prisma__ApiKeyClient<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ApiKeys.
     * @param {ApiKeyCreateManyArgs} args - Arguments to create many ApiKeys.
     * @example
     * // Create many ApiKeys
     * const apiKey = await prisma.apiKey.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ApiKeyCreateManyArgs>(args?: SelectSubset<T, ApiKeyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ApiKeys and returns the data saved in the database.
     * @param {ApiKeyCreateManyAndReturnArgs} args - Arguments to create many ApiKeys.
     * @example
     * // Create many ApiKeys
     * const apiKey = await prisma.apiKey.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ApiKeys and only return the `id`
     * const apiKeyWithIdOnly = await prisma.apiKey.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ApiKeyCreateManyAndReturnArgs>(args?: SelectSubset<T, ApiKeyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ApiKey.
     * @param {ApiKeyDeleteArgs} args - Arguments to delete one ApiKey.
     * @example
     * // Delete one ApiKey
     * const ApiKey = await prisma.apiKey.delete({
     *   where: {
     *     // ... filter to delete one ApiKey
     *   }
     * })
     * 
     */
    delete<T extends ApiKeyDeleteArgs>(args: SelectSubset<T, ApiKeyDeleteArgs<ExtArgs>>): Prisma__ApiKeyClient<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ApiKey.
     * @param {ApiKeyUpdateArgs} args - Arguments to update one ApiKey.
     * @example
     * // Update one ApiKey
     * const apiKey = await prisma.apiKey.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ApiKeyUpdateArgs>(args: SelectSubset<T, ApiKeyUpdateArgs<ExtArgs>>): Prisma__ApiKeyClient<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ApiKeys.
     * @param {ApiKeyDeleteManyArgs} args - Arguments to filter ApiKeys to delete.
     * @example
     * // Delete a few ApiKeys
     * const { count } = await prisma.apiKey.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ApiKeyDeleteManyArgs>(args?: SelectSubset<T, ApiKeyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ApiKeys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ApiKeys
     * const apiKey = await prisma.apiKey.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ApiKeyUpdateManyArgs>(args: SelectSubset<T, ApiKeyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ApiKeys and returns the data updated in the database.
     * @param {ApiKeyUpdateManyAndReturnArgs} args - Arguments to update many ApiKeys.
     * @example
     * // Update many ApiKeys
     * const apiKey = await prisma.apiKey.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ApiKeys and only return the `id`
     * const apiKeyWithIdOnly = await prisma.apiKey.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ApiKeyUpdateManyAndReturnArgs>(args: SelectSubset<T, ApiKeyUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ApiKey.
     * @param {ApiKeyUpsertArgs} args - Arguments to update or create a ApiKey.
     * @example
     * // Update or create a ApiKey
     * const apiKey = await prisma.apiKey.upsert({
     *   create: {
     *     // ... data to create a ApiKey
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ApiKey we want to update
     *   }
     * })
     */
    upsert<T extends ApiKeyUpsertArgs>(args: SelectSubset<T, ApiKeyUpsertArgs<ExtArgs>>): Prisma__ApiKeyClient<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ApiKeys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyCountArgs} args - Arguments to filter ApiKeys to count.
     * @example
     * // Count the number of ApiKeys
     * const count = await prisma.apiKey.count({
     *   where: {
     *     // ... the filter for the ApiKeys we want to count
     *   }
     * })
    **/
    count<T extends ApiKeyCountArgs>(
      args?: Subset<T, ApiKeyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ApiKeyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ApiKey.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ApiKeyAggregateArgs>(args: Subset<T, ApiKeyAggregateArgs>): Prisma.PrismaPromise<GetApiKeyAggregateType<T>>

    /**
     * Group by ApiKey.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ApiKeyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ApiKeyGroupByArgs['orderBy'] }
        : { orderBy?: ApiKeyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ApiKeyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApiKeyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ApiKey model
   */
  readonly fields: ApiKeyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ApiKey.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ApiKeyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    echoApp<T extends EchoAppDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EchoAppDefaultArgs<ExtArgs>>): Prisma__EchoAppClient<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Transactions<T extends ApiKey$TransactionsArgs<ExtArgs> = {}>(args?: Subset<T, ApiKey$TransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ApiKey model
   */
  interface ApiKeyFieldRefs {
    readonly id: FieldRef<"ApiKey", 'String'>
    readonly keyHash: FieldRef<"ApiKey", 'String'>
    readonly name: FieldRef<"ApiKey", 'String'>
    readonly isArchived: FieldRef<"ApiKey", 'Boolean'>
    readonly archivedAt: FieldRef<"ApiKey", 'DateTime'>
    readonly lastUsed: FieldRef<"ApiKey", 'DateTime'>
    readonly metadata: FieldRef<"ApiKey", 'Json'>
    readonly createdAt: FieldRef<"ApiKey", 'DateTime'>
    readonly updatedAt: FieldRef<"ApiKey", 'DateTime'>
    readonly userId: FieldRef<"ApiKey", 'String'>
    readonly echoAppId: FieldRef<"ApiKey", 'String'>
    readonly scope: FieldRef<"ApiKey", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ApiKey findUnique
   */
  export type ApiKeyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiKey
     */
    omit?: ApiKeyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    /**
     * Filter, which ApiKey to fetch.
     */
    where: ApiKeyWhereUniqueInput
  }

  /**
   * ApiKey findUniqueOrThrow
   */
  export type ApiKeyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiKey
     */
    omit?: ApiKeyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    /**
     * Filter, which ApiKey to fetch.
     */
    where: ApiKeyWhereUniqueInput
  }

  /**
   * ApiKey findFirst
   */
  export type ApiKeyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiKey
     */
    omit?: ApiKeyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    /**
     * Filter, which ApiKey to fetch.
     */
    where?: ApiKeyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApiKeys to fetch.
     */
    orderBy?: ApiKeyOrderByWithRelationInput | ApiKeyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApiKeys.
     */
    cursor?: ApiKeyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApiKeys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApiKeys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApiKeys.
     */
    distinct?: ApiKeyScalarFieldEnum | ApiKeyScalarFieldEnum[]
  }

  /**
   * ApiKey findFirstOrThrow
   */
  export type ApiKeyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiKey
     */
    omit?: ApiKeyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    /**
     * Filter, which ApiKey to fetch.
     */
    where?: ApiKeyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApiKeys to fetch.
     */
    orderBy?: ApiKeyOrderByWithRelationInput | ApiKeyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApiKeys.
     */
    cursor?: ApiKeyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApiKeys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApiKeys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApiKeys.
     */
    distinct?: ApiKeyScalarFieldEnum | ApiKeyScalarFieldEnum[]
  }

  /**
   * ApiKey findMany
   */
  export type ApiKeyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiKey
     */
    omit?: ApiKeyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    /**
     * Filter, which ApiKeys to fetch.
     */
    where?: ApiKeyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApiKeys to fetch.
     */
    orderBy?: ApiKeyOrderByWithRelationInput | ApiKeyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ApiKeys.
     */
    cursor?: ApiKeyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApiKeys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApiKeys.
     */
    skip?: number
    distinct?: ApiKeyScalarFieldEnum | ApiKeyScalarFieldEnum[]
  }

  /**
   * ApiKey create
   */
  export type ApiKeyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiKey
     */
    omit?: ApiKeyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    /**
     * The data needed to create a ApiKey.
     */
    data: XOR<ApiKeyCreateInput, ApiKeyUncheckedCreateInput>
  }

  /**
   * ApiKey createMany
   */
  export type ApiKeyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ApiKeys.
     */
    data: ApiKeyCreateManyInput | ApiKeyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ApiKey createManyAndReturn
   */
  export type ApiKeyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ApiKey
     */
    omit?: ApiKeyOmit<ExtArgs> | null
    /**
     * The data used to create many ApiKeys.
     */
    data: ApiKeyCreateManyInput | ApiKeyCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ApiKey update
   */
  export type ApiKeyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiKey
     */
    omit?: ApiKeyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    /**
     * The data needed to update a ApiKey.
     */
    data: XOR<ApiKeyUpdateInput, ApiKeyUncheckedUpdateInput>
    /**
     * Choose, which ApiKey to update.
     */
    where: ApiKeyWhereUniqueInput
  }

  /**
   * ApiKey updateMany
   */
  export type ApiKeyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ApiKeys.
     */
    data: XOR<ApiKeyUpdateManyMutationInput, ApiKeyUncheckedUpdateManyInput>
    /**
     * Filter which ApiKeys to update
     */
    where?: ApiKeyWhereInput
    /**
     * Limit how many ApiKeys to update.
     */
    limit?: number
  }

  /**
   * ApiKey updateManyAndReturn
   */
  export type ApiKeyUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ApiKey
     */
    omit?: ApiKeyOmit<ExtArgs> | null
    /**
     * The data used to update ApiKeys.
     */
    data: XOR<ApiKeyUpdateManyMutationInput, ApiKeyUncheckedUpdateManyInput>
    /**
     * Filter which ApiKeys to update
     */
    where?: ApiKeyWhereInput
    /**
     * Limit how many ApiKeys to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ApiKey upsert
   */
  export type ApiKeyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiKey
     */
    omit?: ApiKeyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    /**
     * The filter to search for the ApiKey to update in case it exists.
     */
    where: ApiKeyWhereUniqueInput
    /**
     * In case the ApiKey found by the `where` argument doesn't exist, create a new ApiKey with this data.
     */
    create: XOR<ApiKeyCreateInput, ApiKeyUncheckedCreateInput>
    /**
     * In case the ApiKey was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ApiKeyUpdateInput, ApiKeyUncheckedUpdateInput>
  }

  /**
   * ApiKey delete
   */
  export type ApiKeyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiKey
     */
    omit?: ApiKeyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    /**
     * Filter which ApiKey to delete.
     */
    where: ApiKeyWhereUniqueInput
  }

  /**
   * ApiKey deleteMany
   */
  export type ApiKeyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ApiKeys to delete
     */
    where?: ApiKeyWhereInput
    /**
     * Limit how many ApiKeys to delete.
     */
    limit?: number
  }

  /**
   * ApiKey.Transactions
   */
  export type ApiKey$TransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    where?: TransactionWhereInput
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    cursor?: TransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * ApiKey without action
   */
  export type ApiKeyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiKey
     */
    omit?: ApiKeyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
  }


  /**
   * Model RefreshToken
   */

  export type AggregateRefreshToken = {
    _count: RefreshTokenCountAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  export type RefreshTokenMinAggregateOutputType = {
    id: string | null
    token: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
    echoAppId: string | null
    scope: string | null
    sessionId: string | null
  }

  export type RefreshTokenMaxAggregateOutputType = {
    id: string | null
    token: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
    echoAppId: string | null
    scope: string | null
    sessionId: string | null
  }

  export type RefreshTokenCountAggregateOutputType = {
    id: number
    token: number
    isArchived: number
    archivedAt: number
    expiresAt: number
    createdAt: number
    updatedAt: number
    userId: number
    echoAppId: number
    scope: number
    sessionId: number
    _all: number
  }


  export type RefreshTokenMinAggregateInputType = {
    id?: true
    token?: true
    isArchived?: true
    archivedAt?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    echoAppId?: true
    scope?: true
    sessionId?: true
  }

  export type RefreshTokenMaxAggregateInputType = {
    id?: true
    token?: true
    isArchived?: true
    archivedAt?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    echoAppId?: true
    scope?: true
    sessionId?: true
  }

  export type RefreshTokenCountAggregateInputType = {
    id?: true
    token?: true
    isArchived?: true
    archivedAt?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    echoAppId?: true
    scope?: true
    sessionId?: true
    _all?: true
  }

  export type RefreshTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshToken to aggregate.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RefreshTokens
    **/
    _count?: true | RefreshTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RefreshTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type GetRefreshTokenAggregateType<T extends RefreshTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateRefreshToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRefreshToken[P]>
      : GetScalarType<T[P], AggregateRefreshToken[P]>
  }




  export type RefreshTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithAggregationInput | RefreshTokenOrderByWithAggregationInput[]
    by: RefreshTokenScalarFieldEnum[] | RefreshTokenScalarFieldEnum
    having?: RefreshTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RefreshTokenCountAggregateInputType | true
    _min?: RefreshTokenMinAggregateInputType
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type RefreshTokenGroupByOutputType = {
    id: string
    token: string
    isArchived: boolean
    archivedAt: Date | null
    expiresAt: Date
    createdAt: Date
    updatedAt: Date
    userId: string
    echoAppId: string
    scope: string
    sessionId: string | null
    _count: RefreshTokenCountAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  type GetRefreshTokenGroupByPayload<T extends RefreshTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RefreshTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RefreshTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
            : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
        }
      >
    >


  export type RefreshTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    echoAppId?: boolean
    scope?: boolean
    sessionId?: boolean
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    session?: boolean | RefreshToken$sessionArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    echoAppId?: boolean
    scope?: boolean
    sessionId?: boolean
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    session?: boolean | RefreshToken$sessionArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    echoAppId?: boolean
    scope?: boolean
    sessionId?: boolean
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    session?: boolean | RefreshToken$sessionArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectScalar = {
    id?: boolean
    token?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    echoAppId?: boolean
    scope?: boolean
    sessionId?: boolean
  }

  export type RefreshTokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "token" | "isArchived" | "archivedAt" | "expiresAt" | "createdAt" | "updatedAt" | "userId" | "echoAppId" | "scope" | "sessionId", ExtArgs["result"]["refreshToken"]>
  export type RefreshTokenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    session?: boolean | RefreshToken$sessionArgs<ExtArgs>
  }
  export type RefreshTokenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    session?: boolean | RefreshToken$sessionArgs<ExtArgs>
  }
  export type RefreshTokenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    session?: boolean | RefreshToken$sessionArgs<ExtArgs>
  }

  export type $RefreshTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RefreshToken"
    objects: {
      echoApp: Prisma.$EchoAppPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
      session: Prisma.$AppSessionPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      token: string
      isArchived: boolean
      archivedAt: Date | null
      expiresAt: Date
      createdAt: Date
      updatedAt: Date
      userId: string
      echoAppId: string
      scope: string
      sessionId: string | null
    }, ExtArgs["result"]["refreshToken"]>
    composites: {}
  }

  type RefreshTokenGetPayload<S extends boolean | null | undefined | RefreshTokenDefaultArgs> = $Result.GetResult<Prisma.$RefreshTokenPayload, S>

  type RefreshTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RefreshTokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RefreshTokenCountAggregateInputType | true
    }

  export interface RefreshTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RefreshToken'], meta: { name: 'RefreshToken' } }
    /**
     * Find zero or one RefreshToken that matches the filter.
     * @param {RefreshTokenFindUniqueArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RefreshTokenFindUniqueArgs>(args: SelectSubset<T, RefreshTokenFindUniqueArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RefreshToken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RefreshTokenFindUniqueOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RefreshTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, RefreshTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RefreshToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RefreshTokenFindFirstArgs>(args?: SelectSubset<T, RefreshTokenFindFirstArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RefreshToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RefreshTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, RefreshTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RefreshTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany()
     * 
     * // Get first 10 RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RefreshTokenFindManyArgs>(args?: SelectSubset<T, RefreshTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RefreshToken.
     * @param {RefreshTokenCreateArgs} args - Arguments to create a RefreshToken.
     * @example
     * // Create one RefreshToken
     * const RefreshToken = await prisma.refreshToken.create({
     *   data: {
     *     // ... data to create a RefreshToken
     *   }
     * })
     * 
     */
    create<T extends RefreshTokenCreateArgs>(args: SelectSubset<T, RefreshTokenCreateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RefreshTokens.
     * @param {RefreshTokenCreateManyArgs} args - Arguments to create many RefreshTokens.
     * @example
     * // Create many RefreshTokens
     * const refreshToken = await prisma.refreshToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RefreshTokenCreateManyArgs>(args?: SelectSubset<T, RefreshTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RefreshTokens and returns the data saved in the database.
     * @param {RefreshTokenCreateManyAndReturnArgs} args - Arguments to create many RefreshTokens.
     * @example
     * // Create many RefreshTokens
     * const refreshToken = await prisma.refreshToken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RefreshTokens and only return the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RefreshTokenCreateManyAndReturnArgs>(args?: SelectSubset<T, RefreshTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RefreshToken.
     * @param {RefreshTokenDeleteArgs} args - Arguments to delete one RefreshToken.
     * @example
     * // Delete one RefreshToken
     * const RefreshToken = await prisma.refreshToken.delete({
     *   where: {
     *     // ... filter to delete one RefreshToken
     *   }
     * })
     * 
     */
    delete<T extends RefreshTokenDeleteArgs>(args: SelectSubset<T, RefreshTokenDeleteArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RefreshToken.
     * @param {RefreshTokenUpdateArgs} args - Arguments to update one RefreshToken.
     * @example
     * // Update one RefreshToken
     * const refreshToken = await prisma.refreshToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RefreshTokenUpdateArgs>(args: SelectSubset<T, RefreshTokenUpdateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RefreshTokens.
     * @param {RefreshTokenDeleteManyArgs} args - Arguments to filter RefreshTokens to delete.
     * @example
     * // Delete a few RefreshTokens
     * const { count } = await prisma.refreshToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RefreshTokenDeleteManyArgs>(args?: SelectSubset<T, RefreshTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RefreshTokens
     * const refreshToken = await prisma.refreshToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RefreshTokenUpdateManyArgs>(args: SelectSubset<T, RefreshTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RefreshTokens and returns the data updated in the database.
     * @param {RefreshTokenUpdateManyAndReturnArgs} args - Arguments to update many RefreshTokens.
     * @example
     * // Update many RefreshTokens
     * const refreshToken = await prisma.refreshToken.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RefreshTokens and only return the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RefreshTokenUpdateManyAndReturnArgs>(args: SelectSubset<T, RefreshTokenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RefreshToken.
     * @param {RefreshTokenUpsertArgs} args - Arguments to update or create a RefreshToken.
     * @example
     * // Update or create a RefreshToken
     * const refreshToken = await prisma.refreshToken.upsert({
     *   create: {
     *     // ... data to create a RefreshToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RefreshToken we want to update
     *   }
     * })
     */
    upsert<T extends RefreshTokenUpsertArgs>(args: SelectSubset<T, RefreshTokenUpsertArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenCountArgs} args - Arguments to filter RefreshTokens to count.
     * @example
     * // Count the number of RefreshTokens
     * const count = await prisma.refreshToken.count({
     *   where: {
     *     // ... the filter for the RefreshTokens we want to count
     *   }
     * })
    **/
    count<T extends RefreshTokenCountArgs>(
      args?: Subset<T, RefreshTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RefreshTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RefreshTokenAggregateArgs>(args: Subset<T, RefreshTokenAggregateArgs>): Prisma.PrismaPromise<GetRefreshTokenAggregateType<T>>

    /**
     * Group by RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RefreshTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RefreshTokenGroupByArgs['orderBy'] }
        : { orderBy?: RefreshTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RefreshTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRefreshTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RefreshToken model
   */
  readonly fields: RefreshTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RefreshToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RefreshTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    echoApp<T extends EchoAppDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EchoAppDefaultArgs<ExtArgs>>): Prisma__EchoAppClient<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    session<T extends RefreshToken$sessionArgs<ExtArgs> = {}>(args?: Subset<T, RefreshToken$sessionArgs<ExtArgs>>): Prisma__AppSessionClient<$Result.GetResult<Prisma.$AppSessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RefreshToken model
   */
  interface RefreshTokenFieldRefs {
    readonly id: FieldRef<"RefreshToken", 'String'>
    readonly token: FieldRef<"RefreshToken", 'String'>
    readonly isArchived: FieldRef<"RefreshToken", 'Boolean'>
    readonly archivedAt: FieldRef<"RefreshToken", 'DateTime'>
    readonly expiresAt: FieldRef<"RefreshToken", 'DateTime'>
    readonly createdAt: FieldRef<"RefreshToken", 'DateTime'>
    readonly updatedAt: FieldRef<"RefreshToken", 'DateTime'>
    readonly userId: FieldRef<"RefreshToken", 'String'>
    readonly echoAppId: FieldRef<"RefreshToken", 'String'>
    readonly scope: FieldRef<"RefreshToken", 'String'>
    readonly sessionId: FieldRef<"RefreshToken", 'String'>
  }
    

  // Custom InputTypes
  /**
   * RefreshToken findUnique
   */
  export type RefreshTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findUniqueOrThrow
   */
  export type RefreshTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findFirst
   */
  export type RefreshTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findFirstOrThrow
   */
  export type RefreshTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findMany
   */
  export type RefreshTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshTokens to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken create
   */
  export type RefreshTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to create a RefreshToken.
     */
    data: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
  }

  /**
   * RefreshToken createMany
   */
  export type RefreshTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RefreshTokens.
     */
    data: RefreshTokenCreateManyInput | RefreshTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RefreshToken createManyAndReturn
   */
  export type RefreshTokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * The data used to create many RefreshTokens.
     */
    data: RefreshTokenCreateManyInput | RefreshTokenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RefreshToken update
   */
  export type RefreshTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to update a RefreshToken.
     */
    data: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
    /**
     * Choose, which RefreshToken to update.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken updateMany
   */
  export type RefreshTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RefreshTokens.
     */
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyInput>
    /**
     * Filter which RefreshTokens to update
     */
    where?: RefreshTokenWhereInput
    /**
     * Limit how many RefreshTokens to update.
     */
    limit?: number
  }

  /**
   * RefreshToken updateManyAndReturn
   */
  export type RefreshTokenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * The data used to update RefreshTokens.
     */
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyInput>
    /**
     * Filter which RefreshTokens to update
     */
    where?: RefreshTokenWhereInput
    /**
     * Limit how many RefreshTokens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RefreshToken upsert
   */
  export type RefreshTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The filter to search for the RefreshToken to update in case it exists.
     */
    where: RefreshTokenWhereUniqueInput
    /**
     * In case the RefreshToken found by the `where` argument doesn't exist, create a new RefreshToken with this data.
     */
    create: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
    /**
     * In case the RefreshToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
  }

  /**
   * RefreshToken delete
   */
  export type RefreshTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter which RefreshToken to delete.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken deleteMany
   */
  export type RefreshTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshTokens to delete
     */
    where?: RefreshTokenWhereInput
    /**
     * Limit how many RefreshTokens to delete.
     */
    limit?: number
  }

  /**
   * RefreshToken.session
   */
  export type RefreshToken$sessionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppSession
     */
    select?: AppSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppSession
     */
    omit?: AppSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppSessionInclude<ExtArgs> | null
    where?: AppSessionWhereInput
  }

  /**
   * RefreshToken without action
   */
  export type RefreshTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
  }


  /**
   * Model AppSession
   */

  export type AggregateAppSession = {
    _count: AppSessionCountAggregateOutputType | null
    _min: AppSessionMinAggregateOutputType | null
    _max: AppSessionMaxAggregateOutputType | null
  }

  export type AppSessionMinAggregateOutputType = {
    id: string | null
    userId: string | null
    echoAppId: string | null
    deviceName: string | null
    userAgent: string | null
    ipAddress: string | null
    createdAt: Date | null
    updatedAt: Date | null
    lastSeenAt: Date | null
    revokedAt: Date | null
    isArchived: boolean | null
  }

  export type AppSessionMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    echoAppId: string | null
    deviceName: string | null
    userAgent: string | null
    ipAddress: string | null
    createdAt: Date | null
    updatedAt: Date | null
    lastSeenAt: Date | null
    revokedAt: Date | null
    isArchived: boolean | null
  }

  export type AppSessionCountAggregateOutputType = {
    id: number
    userId: number
    echoAppId: number
    deviceName: number
    userAgent: number
    ipAddress: number
    createdAt: number
    updatedAt: number
    lastSeenAt: number
    revokedAt: number
    isArchived: number
    _all: number
  }


  export type AppSessionMinAggregateInputType = {
    id?: true
    userId?: true
    echoAppId?: true
    deviceName?: true
    userAgent?: true
    ipAddress?: true
    createdAt?: true
    updatedAt?: true
    lastSeenAt?: true
    revokedAt?: true
    isArchived?: true
  }

  export type AppSessionMaxAggregateInputType = {
    id?: true
    userId?: true
    echoAppId?: true
    deviceName?: true
    userAgent?: true
    ipAddress?: true
    createdAt?: true
    updatedAt?: true
    lastSeenAt?: true
    revokedAt?: true
    isArchived?: true
  }

  export type AppSessionCountAggregateInputType = {
    id?: true
    userId?: true
    echoAppId?: true
    deviceName?: true
    userAgent?: true
    ipAddress?: true
    createdAt?: true
    updatedAt?: true
    lastSeenAt?: true
    revokedAt?: true
    isArchived?: true
    _all?: true
  }

  export type AppSessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AppSession to aggregate.
     */
    where?: AppSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AppSessions to fetch.
     */
    orderBy?: AppSessionOrderByWithRelationInput | AppSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AppSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AppSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AppSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AppSessions
    **/
    _count?: true | AppSessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AppSessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AppSessionMaxAggregateInputType
  }

  export type GetAppSessionAggregateType<T extends AppSessionAggregateArgs> = {
        [P in keyof T & keyof AggregateAppSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAppSession[P]>
      : GetScalarType<T[P], AggregateAppSession[P]>
  }




  export type AppSessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AppSessionWhereInput
    orderBy?: AppSessionOrderByWithAggregationInput | AppSessionOrderByWithAggregationInput[]
    by: AppSessionScalarFieldEnum[] | AppSessionScalarFieldEnum
    having?: AppSessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AppSessionCountAggregateInputType | true
    _min?: AppSessionMinAggregateInputType
    _max?: AppSessionMaxAggregateInputType
  }

  export type AppSessionGroupByOutputType = {
    id: string
    userId: string
    echoAppId: string
    deviceName: string | null
    userAgent: string | null
    ipAddress: string | null
    createdAt: Date
    updatedAt: Date
    lastSeenAt: Date | null
    revokedAt: Date | null
    isArchived: boolean
    _count: AppSessionCountAggregateOutputType | null
    _min: AppSessionMinAggregateOutputType | null
    _max: AppSessionMaxAggregateOutputType | null
  }

  type GetAppSessionGroupByPayload<T extends AppSessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AppSessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AppSessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AppSessionGroupByOutputType[P]>
            : GetScalarType<T[P], AppSessionGroupByOutputType[P]>
        }
      >
    >


  export type AppSessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    echoAppId?: boolean
    deviceName?: boolean
    userAgent?: boolean
    ipAddress?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastSeenAt?: boolean
    revokedAt?: boolean
    isArchived?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    refreshTokens?: boolean | AppSession$refreshTokensArgs<ExtArgs>
    _count?: boolean | AppSessionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["appSession"]>

  export type AppSessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    echoAppId?: boolean
    deviceName?: boolean
    userAgent?: boolean
    ipAddress?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastSeenAt?: boolean
    revokedAt?: boolean
    isArchived?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["appSession"]>

  export type AppSessionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    echoAppId?: boolean
    deviceName?: boolean
    userAgent?: boolean
    ipAddress?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastSeenAt?: boolean
    revokedAt?: boolean
    isArchived?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["appSession"]>

  export type AppSessionSelectScalar = {
    id?: boolean
    userId?: boolean
    echoAppId?: boolean
    deviceName?: boolean
    userAgent?: boolean
    ipAddress?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastSeenAt?: boolean
    revokedAt?: boolean
    isArchived?: boolean
  }

  export type AppSessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "echoAppId" | "deviceName" | "userAgent" | "ipAddress" | "createdAt" | "updatedAt" | "lastSeenAt" | "revokedAt" | "isArchived", ExtArgs["result"]["appSession"]>
  export type AppSessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    refreshTokens?: boolean | AppSession$refreshTokensArgs<ExtArgs>
    _count?: boolean | AppSessionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AppSessionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }
  export type AppSessionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }

  export type $AppSessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AppSession"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      echoApp: Prisma.$EchoAppPayload<ExtArgs>
      refreshTokens: Prisma.$RefreshTokenPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      echoAppId: string
      deviceName: string | null
      userAgent: string | null
      ipAddress: string | null
      createdAt: Date
      updatedAt: Date
      lastSeenAt: Date | null
      revokedAt: Date | null
      isArchived: boolean
    }, ExtArgs["result"]["appSession"]>
    composites: {}
  }

  type AppSessionGetPayload<S extends boolean | null | undefined | AppSessionDefaultArgs> = $Result.GetResult<Prisma.$AppSessionPayload, S>

  type AppSessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AppSessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AppSessionCountAggregateInputType | true
    }

  export interface AppSessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AppSession'], meta: { name: 'AppSession' } }
    /**
     * Find zero or one AppSession that matches the filter.
     * @param {AppSessionFindUniqueArgs} args - Arguments to find a AppSession
     * @example
     * // Get one AppSession
     * const appSession = await prisma.appSession.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AppSessionFindUniqueArgs>(args: SelectSubset<T, AppSessionFindUniqueArgs<ExtArgs>>): Prisma__AppSessionClient<$Result.GetResult<Prisma.$AppSessionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AppSession that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AppSessionFindUniqueOrThrowArgs} args - Arguments to find a AppSession
     * @example
     * // Get one AppSession
     * const appSession = await prisma.appSession.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AppSessionFindUniqueOrThrowArgs>(args: SelectSubset<T, AppSessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AppSessionClient<$Result.GetResult<Prisma.$AppSessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AppSession that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppSessionFindFirstArgs} args - Arguments to find a AppSession
     * @example
     * // Get one AppSession
     * const appSession = await prisma.appSession.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AppSessionFindFirstArgs>(args?: SelectSubset<T, AppSessionFindFirstArgs<ExtArgs>>): Prisma__AppSessionClient<$Result.GetResult<Prisma.$AppSessionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AppSession that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppSessionFindFirstOrThrowArgs} args - Arguments to find a AppSession
     * @example
     * // Get one AppSession
     * const appSession = await prisma.appSession.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AppSessionFindFirstOrThrowArgs>(args?: SelectSubset<T, AppSessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__AppSessionClient<$Result.GetResult<Prisma.$AppSessionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AppSessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppSessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AppSessions
     * const appSessions = await prisma.appSession.findMany()
     * 
     * // Get first 10 AppSessions
     * const appSessions = await prisma.appSession.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const appSessionWithIdOnly = await prisma.appSession.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AppSessionFindManyArgs>(args?: SelectSubset<T, AppSessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppSessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AppSession.
     * @param {AppSessionCreateArgs} args - Arguments to create a AppSession.
     * @example
     * // Create one AppSession
     * const AppSession = await prisma.appSession.create({
     *   data: {
     *     // ... data to create a AppSession
     *   }
     * })
     * 
     */
    create<T extends AppSessionCreateArgs>(args: SelectSubset<T, AppSessionCreateArgs<ExtArgs>>): Prisma__AppSessionClient<$Result.GetResult<Prisma.$AppSessionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AppSessions.
     * @param {AppSessionCreateManyArgs} args - Arguments to create many AppSessions.
     * @example
     * // Create many AppSessions
     * const appSession = await prisma.appSession.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AppSessionCreateManyArgs>(args?: SelectSubset<T, AppSessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AppSessions and returns the data saved in the database.
     * @param {AppSessionCreateManyAndReturnArgs} args - Arguments to create many AppSessions.
     * @example
     * // Create many AppSessions
     * const appSession = await prisma.appSession.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AppSessions and only return the `id`
     * const appSessionWithIdOnly = await prisma.appSession.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AppSessionCreateManyAndReturnArgs>(args?: SelectSubset<T, AppSessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppSessionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AppSession.
     * @param {AppSessionDeleteArgs} args - Arguments to delete one AppSession.
     * @example
     * // Delete one AppSession
     * const AppSession = await prisma.appSession.delete({
     *   where: {
     *     // ... filter to delete one AppSession
     *   }
     * })
     * 
     */
    delete<T extends AppSessionDeleteArgs>(args: SelectSubset<T, AppSessionDeleteArgs<ExtArgs>>): Prisma__AppSessionClient<$Result.GetResult<Prisma.$AppSessionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AppSession.
     * @param {AppSessionUpdateArgs} args - Arguments to update one AppSession.
     * @example
     * // Update one AppSession
     * const appSession = await prisma.appSession.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AppSessionUpdateArgs>(args: SelectSubset<T, AppSessionUpdateArgs<ExtArgs>>): Prisma__AppSessionClient<$Result.GetResult<Prisma.$AppSessionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AppSessions.
     * @param {AppSessionDeleteManyArgs} args - Arguments to filter AppSessions to delete.
     * @example
     * // Delete a few AppSessions
     * const { count } = await prisma.appSession.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AppSessionDeleteManyArgs>(args?: SelectSubset<T, AppSessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AppSessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppSessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AppSessions
     * const appSession = await prisma.appSession.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AppSessionUpdateManyArgs>(args: SelectSubset<T, AppSessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AppSessions and returns the data updated in the database.
     * @param {AppSessionUpdateManyAndReturnArgs} args - Arguments to update many AppSessions.
     * @example
     * // Update many AppSessions
     * const appSession = await prisma.appSession.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AppSessions and only return the `id`
     * const appSessionWithIdOnly = await prisma.appSession.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AppSessionUpdateManyAndReturnArgs>(args: SelectSubset<T, AppSessionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppSessionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AppSession.
     * @param {AppSessionUpsertArgs} args - Arguments to update or create a AppSession.
     * @example
     * // Update or create a AppSession
     * const appSession = await prisma.appSession.upsert({
     *   create: {
     *     // ... data to create a AppSession
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AppSession we want to update
     *   }
     * })
     */
    upsert<T extends AppSessionUpsertArgs>(args: SelectSubset<T, AppSessionUpsertArgs<ExtArgs>>): Prisma__AppSessionClient<$Result.GetResult<Prisma.$AppSessionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AppSessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppSessionCountArgs} args - Arguments to filter AppSessions to count.
     * @example
     * // Count the number of AppSessions
     * const count = await prisma.appSession.count({
     *   where: {
     *     // ... the filter for the AppSessions we want to count
     *   }
     * })
    **/
    count<T extends AppSessionCountArgs>(
      args?: Subset<T, AppSessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AppSessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AppSession.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppSessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AppSessionAggregateArgs>(args: Subset<T, AppSessionAggregateArgs>): Prisma.PrismaPromise<GetAppSessionAggregateType<T>>

    /**
     * Group by AppSession.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppSessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AppSessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AppSessionGroupByArgs['orderBy'] }
        : { orderBy?: AppSessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AppSessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAppSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AppSession model
   */
  readonly fields: AppSessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AppSession.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AppSessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    echoApp<T extends EchoAppDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EchoAppDefaultArgs<ExtArgs>>): Prisma__EchoAppClient<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    refreshTokens<T extends AppSession$refreshTokensArgs<ExtArgs> = {}>(args?: Subset<T, AppSession$refreshTokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AppSession model
   */
  interface AppSessionFieldRefs {
    readonly id: FieldRef<"AppSession", 'String'>
    readonly userId: FieldRef<"AppSession", 'String'>
    readonly echoAppId: FieldRef<"AppSession", 'String'>
    readonly deviceName: FieldRef<"AppSession", 'String'>
    readonly userAgent: FieldRef<"AppSession", 'String'>
    readonly ipAddress: FieldRef<"AppSession", 'String'>
    readonly createdAt: FieldRef<"AppSession", 'DateTime'>
    readonly updatedAt: FieldRef<"AppSession", 'DateTime'>
    readonly lastSeenAt: FieldRef<"AppSession", 'DateTime'>
    readonly revokedAt: FieldRef<"AppSession", 'DateTime'>
    readonly isArchived: FieldRef<"AppSession", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * AppSession findUnique
   */
  export type AppSessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppSession
     */
    select?: AppSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppSession
     */
    omit?: AppSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppSessionInclude<ExtArgs> | null
    /**
     * Filter, which AppSession to fetch.
     */
    where: AppSessionWhereUniqueInput
  }

  /**
   * AppSession findUniqueOrThrow
   */
  export type AppSessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppSession
     */
    select?: AppSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppSession
     */
    omit?: AppSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppSessionInclude<ExtArgs> | null
    /**
     * Filter, which AppSession to fetch.
     */
    where: AppSessionWhereUniqueInput
  }

  /**
   * AppSession findFirst
   */
  export type AppSessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppSession
     */
    select?: AppSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppSession
     */
    omit?: AppSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppSessionInclude<ExtArgs> | null
    /**
     * Filter, which AppSession to fetch.
     */
    where?: AppSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AppSessions to fetch.
     */
    orderBy?: AppSessionOrderByWithRelationInput | AppSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AppSessions.
     */
    cursor?: AppSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AppSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AppSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AppSessions.
     */
    distinct?: AppSessionScalarFieldEnum | AppSessionScalarFieldEnum[]
  }

  /**
   * AppSession findFirstOrThrow
   */
  export type AppSessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppSession
     */
    select?: AppSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppSession
     */
    omit?: AppSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppSessionInclude<ExtArgs> | null
    /**
     * Filter, which AppSession to fetch.
     */
    where?: AppSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AppSessions to fetch.
     */
    orderBy?: AppSessionOrderByWithRelationInput | AppSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AppSessions.
     */
    cursor?: AppSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AppSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AppSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AppSessions.
     */
    distinct?: AppSessionScalarFieldEnum | AppSessionScalarFieldEnum[]
  }

  /**
   * AppSession findMany
   */
  export type AppSessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppSession
     */
    select?: AppSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppSession
     */
    omit?: AppSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppSessionInclude<ExtArgs> | null
    /**
     * Filter, which AppSessions to fetch.
     */
    where?: AppSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AppSessions to fetch.
     */
    orderBy?: AppSessionOrderByWithRelationInput | AppSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AppSessions.
     */
    cursor?: AppSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AppSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AppSessions.
     */
    skip?: number
    distinct?: AppSessionScalarFieldEnum | AppSessionScalarFieldEnum[]
  }

  /**
   * AppSession create
   */
  export type AppSessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppSession
     */
    select?: AppSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppSession
     */
    omit?: AppSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppSessionInclude<ExtArgs> | null
    /**
     * The data needed to create a AppSession.
     */
    data: XOR<AppSessionCreateInput, AppSessionUncheckedCreateInput>
  }

  /**
   * AppSession createMany
   */
  export type AppSessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AppSessions.
     */
    data: AppSessionCreateManyInput | AppSessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AppSession createManyAndReturn
   */
  export type AppSessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppSession
     */
    select?: AppSessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AppSession
     */
    omit?: AppSessionOmit<ExtArgs> | null
    /**
     * The data used to create many AppSessions.
     */
    data: AppSessionCreateManyInput | AppSessionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppSessionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AppSession update
   */
  export type AppSessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppSession
     */
    select?: AppSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppSession
     */
    omit?: AppSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppSessionInclude<ExtArgs> | null
    /**
     * The data needed to update a AppSession.
     */
    data: XOR<AppSessionUpdateInput, AppSessionUncheckedUpdateInput>
    /**
     * Choose, which AppSession to update.
     */
    where: AppSessionWhereUniqueInput
  }

  /**
   * AppSession updateMany
   */
  export type AppSessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AppSessions.
     */
    data: XOR<AppSessionUpdateManyMutationInput, AppSessionUncheckedUpdateManyInput>
    /**
     * Filter which AppSessions to update
     */
    where?: AppSessionWhereInput
    /**
     * Limit how many AppSessions to update.
     */
    limit?: number
  }

  /**
   * AppSession updateManyAndReturn
   */
  export type AppSessionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppSession
     */
    select?: AppSessionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AppSession
     */
    omit?: AppSessionOmit<ExtArgs> | null
    /**
     * The data used to update AppSessions.
     */
    data: XOR<AppSessionUpdateManyMutationInput, AppSessionUncheckedUpdateManyInput>
    /**
     * Filter which AppSessions to update
     */
    where?: AppSessionWhereInput
    /**
     * Limit how many AppSessions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppSessionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AppSession upsert
   */
  export type AppSessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppSession
     */
    select?: AppSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppSession
     */
    omit?: AppSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppSessionInclude<ExtArgs> | null
    /**
     * The filter to search for the AppSession to update in case it exists.
     */
    where: AppSessionWhereUniqueInput
    /**
     * In case the AppSession found by the `where` argument doesn't exist, create a new AppSession with this data.
     */
    create: XOR<AppSessionCreateInput, AppSessionUncheckedCreateInput>
    /**
     * In case the AppSession was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AppSessionUpdateInput, AppSessionUncheckedUpdateInput>
  }

  /**
   * AppSession delete
   */
  export type AppSessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppSession
     */
    select?: AppSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppSession
     */
    omit?: AppSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppSessionInclude<ExtArgs> | null
    /**
     * Filter which AppSession to delete.
     */
    where: AppSessionWhereUniqueInput
  }

  /**
   * AppSession deleteMany
   */
  export type AppSessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AppSessions to delete
     */
    where?: AppSessionWhereInput
    /**
     * Limit how many AppSessions to delete.
     */
    limit?: number
  }

  /**
   * AppSession.refreshTokens
   */
  export type AppSession$refreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    cursor?: RefreshTokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * AppSession without action
   */
  export type AppSessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppSession
     */
    select?: AppSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppSession
     */
    omit?: AppSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppSessionInclude<ExtArgs> | null
  }


  /**
   * Model Payment
   */

  export type AggregatePayment = {
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  export type PaymentAvgAggregateOutputType = {
    amount: Decimal | null
  }

  export type PaymentSumAggregateOutputType = {
    amount: Decimal | null
  }

  export type PaymentMinAggregateOutputType = {
    id: string | null
    paymentId: string | null
    amount: Decimal | null
    currency: string | null
    status: string | null
    description: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
    spendPoolId: string | null
  }

  export type PaymentMaxAggregateOutputType = {
    id: string | null
    paymentId: string | null
    amount: Decimal | null
    currency: string | null
    status: string | null
    description: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
    spendPoolId: string | null
  }

  export type PaymentCountAggregateOutputType = {
    id: number
    paymentId: number
    amount: number
    currency: number
    status: number
    description: number
    isArchived: number
    archivedAt: number
    createdAt: number
    updatedAt: number
    userId: number
    spendPoolId: number
    _all: number
  }


  export type PaymentAvgAggregateInputType = {
    amount?: true
  }

  export type PaymentSumAggregateInputType = {
    amount?: true
  }

  export type PaymentMinAggregateInputType = {
    id?: true
    paymentId?: true
    amount?: true
    currency?: true
    status?: true
    description?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    spendPoolId?: true
  }

  export type PaymentMaxAggregateInputType = {
    id?: true
    paymentId?: true
    amount?: true
    currency?: true
    status?: true
    description?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    spendPoolId?: true
  }

  export type PaymentCountAggregateInputType = {
    id?: true
    paymentId?: true
    amount?: true
    currency?: true
    status?: true
    description?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    spendPoolId?: true
    _all?: true
  }

  export type PaymentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payment to aggregate.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Payments
    **/
    _count?: true | PaymentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentMaxAggregateInputType
  }

  export type GetPaymentAggregateType<T extends PaymentAggregateArgs> = {
        [P in keyof T & keyof AggregatePayment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePayment[P]>
      : GetScalarType<T[P], AggregatePayment[P]>
  }




  export type PaymentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithAggregationInput | PaymentOrderByWithAggregationInput[]
    by: PaymentScalarFieldEnum[] | PaymentScalarFieldEnum
    having?: PaymentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentCountAggregateInputType | true
    _avg?: PaymentAvgAggregateInputType
    _sum?: PaymentSumAggregateInputType
    _min?: PaymentMinAggregateInputType
    _max?: PaymentMaxAggregateInputType
  }

  export type PaymentGroupByOutputType = {
    id: string
    paymentId: string
    amount: Decimal
    currency: string
    status: string
    description: string | null
    isArchived: boolean
    archivedAt: Date | null
    createdAt: Date
    updatedAt: Date
    userId: string
    spendPoolId: string | null
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  type GetPaymentGroupByPayload<T extends PaymentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentGroupByOutputType[P]>
        }
      >
    >


  export type PaymentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    paymentId?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    description?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    spendPoolId?: boolean
    spendPool?: boolean | Payment$spendPoolArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    paymentId?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    description?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    spendPoolId?: boolean
    spendPool?: boolean | Payment$spendPoolArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    paymentId?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    description?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    spendPoolId?: boolean
    spendPool?: boolean | Payment$spendPoolArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectScalar = {
    id?: boolean
    paymentId?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    description?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    spendPoolId?: boolean
  }

  export type PaymentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "paymentId" | "amount" | "currency" | "status" | "description" | "isArchived" | "archivedAt" | "createdAt" | "updatedAt" | "userId" | "spendPoolId", ExtArgs["result"]["payment"]>
  export type PaymentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    spendPool?: boolean | Payment$spendPoolArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type PaymentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    spendPool?: boolean | Payment$spendPoolArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type PaymentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    spendPool?: boolean | Payment$spendPoolArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $PaymentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Payment"
    objects: {
      spendPool: Prisma.$SpendPoolPayload<ExtArgs> | null
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      paymentId: string
      amount: Prisma.Decimal
      currency: string
      status: string
      description: string | null
      isArchived: boolean
      archivedAt: Date | null
      createdAt: Date
      updatedAt: Date
      userId: string
      spendPoolId: string | null
    }, ExtArgs["result"]["payment"]>
    composites: {}
  }

  type PaymentGetPayload<S extends boolean | null | undefined | PaymentDefaultArgs> = $Result.GetResult<Prisma.$PaymentPayload, S>

  type PaymentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentCountAggregateInputType | true
    }

  export interface PaymentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Payment'], meta: { name: 'Payment' } }
    /**
     * Find zero or one Payment that matches the filter.
     * @param {PaymentFindUniqueArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentFindUniqueArgs>(args: SelectSubset<T, PaymentFindUniqueArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Payment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentFindUniqueOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentFindFirstArgs>(args?: SelectSubset<T, PaymentFindFirstArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Payments
     * const payments = await prisma.payment.findMany()
     * 
     * // Get first 10 Payments
     * const payments = await prisma.payment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentWithIdOnly = await prisma.payment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentFindManyArgs>(args?: SelectSubset<T, PaymentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Payment.
     * @param {PaymentCreateArgs} args - Arguments to create a Payment.
     * @example
     * // Create one Payment
     * const Payment = await prisma.payment.create({
     *   data: {
     *     // ... data to create a Payment
     *   }
     * })
     * 
     */
    create<T extends PaymentCreateArgs>(args: SelectSubset<T, PaymentCreateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Payments.
     * @param {PaymentCreateManyArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentCreateManyArgs>(args?: SelectSubset<T, PaymentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Payments and returns the data saved in the database.
     * @param {PaymentCreateManyAndReturnArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Payments and only return the `id`
     * const paymentWithIdOnly = await prisma.payment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Payment.
     * @param {PaymentDeleteArgs} args - Arguments to delete one Payment.
     * @example
     * // Delete one Payment
     * const Payment = await prisma.payment.delete({
     *   where: {
     *     // ... filter to delete one Payment
     *   }
     * })
     * 
     */
    delete<T extends PaymentDeleteArgs>(args: SelectSubset<T, PaymentDeleteArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Payment.
     * @param {PaymentUpdateArgs} args - Arguments to update one Payment.
     * @example
     * // Update one Payment
     * const payment = await prisma.payment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentUpdateArgs>(args: SelectSubset<T, PaymentUpdateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Payments.
     * @param {PaymentDeleteManyArgs} args - Arguments to filter Payments to delete.
     * @example
     * // Delete a few Payments
     * const { count } = await prisma.payment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentDeleteManyArgs>(args?: SelectSubset<T, PaymentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentUpdateManyArgs>(args: SelectSubset<T, PaymentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments and returns the data updated in the database.
     * @param {PaymentUpdateManyAndReturnArgs} args - Arguments to update many Payments.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Payments and only return the `id`
     * const paymentWithIdOnly = await prisma.payment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaymentUpdateManyAndReturnArgs>(args: SelectSubset<T, PaymentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Payment.
     * @param {PaymentUpsertArgs} args - Arguments to update or create a Payment.
     * @example
     * // Update or create a Payment
     * const payment = await prisma.payment.upsert({
     *   create: {
     *     // ... data to create a Payment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Payment we want to update
     *   }
     * })
     */
    upsert<T extends PaymentUpsertArgs>(args: SelectSubset<T, PaymentUpsertArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentCountArgs} args - Arguments to filter Payments to count.
     * @example
     * // Count the number of Payments
     * const count = await prisma.payment.count({
     *   where: {
     *     // ... the filter for the Payments we want to count
     *   }
     * })
    **/
    count<T extends PaymentCountArgs>(
      args?: Subset<T, PaymentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentAggregateArgs>(args: Subset<T, PaymentAggregateArgs>): Prisma.PrismaPromise<GetPaymentAggregateType<T>>

    /**
     * Group by Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentGroupByArgs['orderBy'] }
        : { orderBy?: PaymentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Payment model
   */
  readonly fields: PaymentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Payment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    spendPool<T extends Payment$spendPoolArgs<ExtArgs> = {}>(args?: Subset<T, Payment$spendPoolArgs<ExtArgs>>): Prisma__SpendPoolClient<$Result.GetResult<Prisma.$SpendPoolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Payment model
   */
  interface PaymentFieldRefs {
    readonly id: FieldRef<"Payment", 'String'>
    readonly paymentId: FieldRef<"Payment", 'String'>
    readonly amount: FieldRef<"Payment", 'Decimal'>
    readonly currency: FieldRef<"Payment", 'String'>
    readonly status: FieldRef<"Payment", 'String'>
    readonly description: FieldRef<"Payment", 'String'>
    readonly isArchived: FieldRef<"Payment", 'Boolean'>
    readonly archivedAt: FieldRef<"Payment", 'DateTime'>
    readonly createdAt: FieldRef<"Payment", 'DateTime'>
    readonly updatedAt: FieldRef<"Payment", 'DateTime'>
    readonly userId: FieldRef<"Payment", 'String'>
    readonly spendPoolId: FieldRef<"Payment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Payment findUnique
   */
  export type PaymentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findUniqueOrThrow
   */
  export type PaymentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findFirst
   */
  export type PaymentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findFirstOrThrow
   */
  export type PaymentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findMany
   */
  export type PaymentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payments to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment create
   */
  export type PaymentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to create a Payment.
     */
    data: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
  }

  /**
   * Payment createMany
   */
  export type PaymentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Payment createManyAndReturn
   */
  export type PaymentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Payment update
   */
  export type PaymentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to update a Payment.
     */
    data: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
    /**
     * Choose, which Payment to update.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment updateMany
   */
  export type PaymentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to update.
     */
    limit?: number
  }

  /**
   * Payment updateManyAndReturn
   */
  export type PaymentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Payment upsert
   */
  export type PaymentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The filter to search for the Payment to update in case it exists.
     */
    where: PaymentWhereUniqueInput
    /**
     * In case the Payment found by the `where` argument doesn't exist, create a new Payment with this data.
     */
    create: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
    /**
     * In case the Payment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
  }

  /**
   * Payment delete
   */
  export type PaymentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter which Payment to delete.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment deleteMany
   */
  export type PaymentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payments to delete
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to delete.
     */
    limit?: number
  }

  /**
   * Payment.spendPool
   */
  export type Payment$spendPoolArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpendPool
     */
    select?: SpendPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SpendPool
     */
    omit?: SpendPoolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpendPoolInclude<ExtArgs> | null
    where?: SpendPoolWhereInput
  }

  /**
   * Payment without action
   */
  export type PaymentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
  }


  /**
   * Model MarkUp
   */

  export type AggregateMarkUp = {
    _count: MarkUpCountAggregateOutputType | null
    _avg: MarkUpAvgAggregateOutputType | null
    _sum: MarkUpSumAggregateOutputType | null
    _min: MarkUpMinAggregateOutputType | null
    _max: MarkUpMaxAggregateOutputType | null
  }

  export type MarkUpAvgAggregateOutputType = {
    amount: Decimal | null
  }

  export type MarkUpSumAggregateOutputType = {
    amount: Decimal | null
  }

  export type MarkUpMinAggregateOutputType = {
    id: string | null
    amount: Decimal | null
    description: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    echoAppId: string | null
  }

  export type MarkUpMaxAggregateOutputType = {
    id: string | null
    amount: Decimal | null
    description: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    echoAppId: string | null
  }

  export type MarkUpCountAggregateOutputType = {
    id: number
    amount: number
    description: number
    isArchived: number
    archivedAt: number
    createdAt: number
    updatedAt: number
    echoAppId: number
    _all: number
  }


  export type MarkUpAvgAggregateInputType = {
    amount?: true
  }

  export type MarkUpSumAggregateInputType = {
    amount?: true
  }

  export type MarkUpMinAggregateInputType = {
    id?: true
    amount?: true
    description?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    echoAppId?: true
  }

  export type MarkUpMaxAggregateInputType = {
    id?: true
    amount?: true
    description?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    echoAppId?: true
  }

  export type MarkUpCountAggregateInputType = {
    id?: true
    amount?: true
    description?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    echoAppId?: true
    _all?: true
  }

  export type MarkUpAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MarkUp to aggregate.
     */
    where?: MarkUpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MarkUps to fetch.
     */
    orderBy?: MarkUpOrderByWithRelationInput | MarkUpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MarkUpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MarkUps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MarkUps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MarkUps
    **/
    _count?: true | MarkUpCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MarkUpAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MarkUpSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MarkUpMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MarkUpMaxAggregateInputType
  }

  export type GetMarkUpAggregateType<T extends MarkUpAggregateArgs> = {
        [P in keyof T & keyof AggregateMarkUp]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMarkUp[P]>
      : GetScalarType<T[P], AggregateMarkUp[P]>
  }




  export type MarkUpGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MarkUpWhereInput
    orderBy?: MarkUpOrderByWithAggregationInput | MarkUpOrderByWithAggregationInput[]
    by: MarkUpScalarFieldEnum[] | MarkUpScalarFieldEnum
    having?: MarkUpScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MarkUpCountAggregateInputType | true
    _avg?: MarkUpAvgAggregateInputType
    _sum?: MarkUpSumAggregateInputType
    _min?: MarkUpMinAggregateInputType
    _max?: MarkUpMaxAggregateInputType
  }

  export type MarkUpGroupByOutputType = {
    id: string
    amount: Decimal
    description: string | null
    isArchived: boolean
    archivedAt: Date | null
    createdAt: Date
    updatedAt: Date
    echoAppId: string
    _count: MarkUpCountAggregateOutputType | null
    _avg: MarkUpAvgAggregateOutputType | null
    _sum: MarkUpSumAggregateOutputType | null
    _min: MarkUpMinAggregateOutputType | null
    _max: MarkUpMaxAggregateOutputType | null
  }

  type GetMarkUpGroupByPayload<T extends MarkUpGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MarkUpGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MarkUpGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MarkUpGroupByOutputType[P]>
            : GetScalarType<T[P], MarkUpGroupByOutputType[P]>
        }
      >
    >


  export type MarkUpSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    amount?: boolean
    description?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    echoAppId?: boolean
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    Transactions?: boolean | MarkUp$TransactionsArgs<ExtArgs>
    _count?: boolean | MarkUpCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["markUp"]>

  export type MarkUpSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    amount?: boolean
    description?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    echoAppId?: boolean
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["markUp"]>

  export type MarkUpSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    amount?: boolean
    description?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    echoAppId?: boolean
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["markUp"]>

  export type MarkUpSelectScalar = {
    id?: boolean
    amount?: boolean
    description?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    echoAppId?: boolean
  }

  export type MarkUpOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "amount" | "description" | "isArchived" | "archivedAt" | "createdAt" | "updatedAt" | "echoAppId", ExtArgs["result"]["markUp"]>
  export type MarkUpInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    Transactions?: boolean | MarkUp$TransactionsArgs<ExtArgs>
    _count?: boolean | MarkUpCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MarkUpIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }
  export type MarkUpIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }

  export type $MarkUpPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MarkUp"
    objects: {
      echoApp: Prisma.$EchoAppPayload<ExtArgs>
      Transactions: Prisma.$TransactionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      amount: Prisma.Decimal
      description: string | null
      isArchived: boolean
      archivedAt: Date | null
      createdAt: Date
      updatedAt: Date
      echoAppId: string
    }, ExtArgs["result"]["markUp"]>
    composites: {}
  }

  type MarkUpGetPayload<S extends boolean | null | undefined | MarkUpDefaultArgs> = $Result.GetResult<Prisma.$MarkUpPayload, S>

  type MarkUpCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MarkUpFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MarkUpCountAggregateInputType | true
    }

  export interface MarkUpDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MarkUp'], meta: { name: 'MarkUp' } }
    /**
     * Find zero or one MarkUp that matches the filter.
     * @param {MarkUpFindUniqueArgs} args - Arguments to find a MarkUp
     * @example
     * // Get one MarkUp
     * const markUp = await prisma.markUp.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MarkUpFindUniqueArgs>(args: SelectSubset<T, MarkUpFindUniqueArgs<ExtArgs>>): Prisma__MarkUpClient<$Result.GetResult<Prisma.$MarkUpPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MarkUp that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MarkUpFindUniqueOrThrowArgs} args - Arguments to find a MarkUp
     * @example
     * // Get one MarkUp
     * const markUp = await prisma.markUp.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MarkUpFindUniqueOrThrowArgs>(args: SelectSubset<T, MarkUpFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MarkUpClient<$Result.GetResult<Prisma.$MarkUpPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MarkUp that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarkUpFindFirstArgs} args - Arguments to find a MarkUp
     * @example
     * // Get one MarkUp
     * const markUp = await prisma.markUp.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MarkUpFindFirstArgs>(args?: SelectSubset<T, MarkUpFindFirstArgs<ExtArgs>>): Prisma__MarkUpClient<$Result.GetResult<Prisma.$MarkUpPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MarkUp that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarkUpFindFirstOrThrowArgs} args - Arguments to find a MarkUp
     * @example
     * // Get one MarkUp
     * const markUp = await prisma.markUp.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MarkUpFindFirstOrThrowArgs>(args?: SelectSubset<T, MarkUpFindFirstOrThrowArgs<ExtArgs>>): Prisma__MarkUpClient<$Result.GetResult<Prisma.$MarkUpPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MarkUps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarkUpFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MarkUps
     * const markUps = await prisma.markUp.findMany()
     * 
     * // Get first 10 MarkUps
     * const markUps = await prisma.markUp.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const markUpWithIdOnly = await prisma.markUp.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MarkUpFindManyArgs>(args?: SelectSubset<T, MarkUpFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarkUpPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MarkUp.
     * @param {MarkUpCreateArgs} args - Arguments to create a MarkUp.
     * @example
     * // Create one MarkUp
     * const MarkUp = await prisma.markUp.create({
     *   data: {
     *     // ... data to create a MarkUp
     *   }
     * })
     * 
     */
    create<T extends MarkUpCreateArgs>(args: SelectSubset<T, MarkUpCreateArgs<ExtArgs>>): Prisma__MarkUpClient<$Result.GetResult<Prisma.$MarkUpPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MarkUps.
     * @param {MarkUpCreateManyArgs} args - Arguments to create many MarkUps.
     * @example
     * // Create many MarkUps
     * const markUp = await prisma.markUp.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MarkUpCreateManyArgs>(args?: SelectSubset<T, MarkUpCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MarkUps and returns the data saved in the database.
     * @param {MarkUpCreateManyAndReturnArgs} args - Arguments to create many MarkUps.
     * @example
     * // Create many MarkUps
     * const markUp = await prisma.markUp.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MarkUps and only return the `id`
     * const markUpWithIdOnly = await prisma.markUp.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MarkUpCreateManyAndReturnArgs>(args?: SelectSubset<T, MarkUpCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarkUpPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MarkUp.
     * @param {MarkUpDeleteArgs} args - Arguments to delete one MarkUp.
     * @example
     * // Delete one MarkUp
     * const MarkUp = await prisma.markUp.delete({
     *   where: {
     *     // ... filter to delete one MarkUp
     *   }
     * })
     * 
     */
    delete<T extends MarkUpDeleteArgs>(args: SelectSubset<T, MarkUpDeleteArgs<ExtArgs>>): Prisma__MarkUpClient<$Result.GetResult<Prisma.$MarkUpPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MarkUp.
     * @param {MarkUpUpdateArgs} args - Arguments to update one MarkUp.
     * @example
     * // Update one MarkUp
     * const markUp = await prisma.markUp.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MarkUpUpdateArgs>(args: SelectSubset<T, MarkUpUpdateArgs<ExtArgs>>): Prisma__MarkUpClient<$Result.GetResult<Prisma.$MarkUpPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MarkUps.
     * @param {MarkUpDeleteManyArgs} args - Arguments to filter MarkUps to delete.
     * @example
     * // Delete a few MarkUps
     * const { count } = await prisma.markUp.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MarkUpDeleteManyArgs>(args?: SelectSubset<T, MarkUpDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MarkUps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarkUpUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MarkUps
     * const markUp = await prisma.markUp.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MarkUpUpdateManyArgs>(args: SelectSubset<T, MarkUpUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MarkUps and returns the data updated in the database.
     * @param {MarkUpUpdateManyAndReturnArgs} args - Arguments to update many MarkUps.
     * @example
     * // Update many MarkUps
     * const markUp = await prisma.markUp.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MarkUps and only return the `id`
     * const markUpWithIdOnly = await prisma.markUp.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MarkUpUpdateManyAndReturnArgs>(args: SelectSubset<T, MarkUpUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarkUpPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MarkUp.
     * @param {MarkUpUpsertArgs} args - Arguments to update or create a MarkUp.
     * @example
     * // Update or create a MarkUp
     * const markUp = await prisma.markUp.upsert({
     *   create: {
     *     // ... data to create a MarkUp
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MarkUp we want to update
     *   }
     * })
     */
    upsert<T extends MarkUpUpsertArgs>(args: SelectSubset<T, MarkUpUpsertArgs<ExtArgs>>): Prisma__MarkUpClient<$Result.GetResult<Prisma.$MarkUpPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MarkUps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarkUpCountArgs} args - Arguments to filter MarkUps to count.
     * @example
     * // Count the number of MarkUps
     * const count = await prisma.markUp.count({
     *   where: {
     *     // ... the filter for the MarkUps we want to count
     *   }
     * })
    **/
    count<T extends MarkUpCountArgs>(
      args?: Subset<T, MarkUpCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MarkUpCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MarkUp.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarkUpAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MarkUpAggregateArgs>(args: Subset<T, MarkUpAggregateArgs>): Prisma.PrismaPromise<GetMarkUpAggregateType<T>>

    /**
     * Group by MarkUp.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarkUpGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MarkUpGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MarkUpGroupByArgs['orderBy'] }
        : { orderBy?: MarkUpGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MarkUpGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMarkUpGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MarkUp model
   */
  readonly fields: MarkUpFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MarkUp.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MarkUpClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    echoApp<T extends EchoAppDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EchoAppDefaultArgs<ExtArgs>>): Prisma__EchoAppClient<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Transactions<T extends MarkUp$TransactionsArgs<ExtArgs> = {}>(args?: Subset<T, MarkUp$TransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MarkUp model
   */
  interface MarkUpFieldRefs {
    readonly id: FieldRef<"MarkUp", 'String'>
    readonly amount: FieldRef<"MarkUp", 'Decimal'>
    readonly description: FieldRef<"MarkUp", 'String'>
    readonly isArchived: FieldRef<"MarkUp", 'Boolean'>
    readonly archivedAt: FieldRef<"MarkUp", 'DateTime'>
    readonly createdAt: FieldRef<"MarkUp", 'DateTime'>
    readonly updatedAt: FieldRef<"MarkUp", 'DateTime'>
    readonly echoAppId: FieldRef<"MarkUp", 'String'>
  }
    

  // Custom InputTypes
  /**
   * MarkUp findUnique
   */
  export type MarkUpFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarkUp
     */
    select?: MarkUpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarkUp
     */
    omit?: MarkUpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarkUpInclude<ExtArgs> | null
    /**
     * Filter, which MarkUp to fetch.
     */
    where: MarkUpWhereUniqueInput
  }

  /**
   * MarkUp findUniqueOrThrow
   */
  export type MarkUpFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarkUp
     */
    select?: MarkUpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarkUp
     */
    omit?: MarkUpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarkUpInclude<ExtArgs> | null
    /**
     * Filter, which MarkUp to fetch.
     */
    where: MarkUpWhereUniqueInput
  }

  /**
   * MarkUp findFirst
   */
  export type MarkUpFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarkUp
     */
    select?: MarkUpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarkUp
     */
    omit?: MarkUpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarkUpInclude<ExtArgs> | null
    /**
     * Filter, which MarkUp to fetch.
     */
    where?: MarkUpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MarkUps to fetch.
     */
    orderBy?: MarkUpOrderByWithRelationInput | MarkUpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MarkUps.
     */
    cursor?: MarkUpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MarkUps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MarkUps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MarkUps.
     */
    distinct?: MarkUpScalarFieldEnum | MarkUpScalarFieldEnum[]
  }

  /**
   * MarkUp findFirstOrThrow
   */
  export type MarkUpFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarkUp
     */
    select?: MarkUpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarkUp
     */
    omit?: MarkUpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarkUpInclude<ExtArgs> | null
    /**
     * Filter, which MarkUp to fetch.
     */
    where?: MarkUpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MarkUps to fetch.
     */
    orderBy?: MarkUpOrderByWithRelationInput | MarkUpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MarkUps.
     */
    cursor?: MarkUpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MarkUps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MarkUps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MarkUps.
     */
    distinct?: MarkUpScalarFieldEnum | MarkUpScalarFieldEnum[]
  }

  /**
   * MarkUp findMany
   */
  export type MarkUpFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarkUp
     */
    select?: MarkUpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarkUp
     */
    omit?: MarkUpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarkUpInclude<ExtArgs> | null
    /**
     * Filter, which MarkUps to fetch.
     */
    where?: MarkUpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MarkUps to fetch.
     */
    orderBy?: MarkUpOrderByWithRelationInput | MarkUpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MarkUps.
     */
    cursor?: MarkUpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MarkUps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MarkUps.
     */
    skip?: number
    distinct?: MarkUpScalarFieldEnum | MarkUpScalarFieldEnum[]
  }

  /**
   * MarkUp create
   */
  export type MarkUpCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarkUp
     */
    select?: MarkUpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarkUp
     */
    omit?: MarkUpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarkUpInclude<ExtArgs> | null
    /**
     * The data needed to create a MarkUp.
     */
    data: XOR<MarkUpCreateInput, MarkUpUncheckedCreateInput>
  }

  /**
   * MarkUp createMany
   */
  export type MarkUpCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MarkUps.
     */
    data: MarkUpCreateManyInput | MarkUpCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MarkUp createManyAndReturn
   */
  export type MarkUpCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarkUp
     */
    select?: MarkUpSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MarkUp
     */
    omit?: MarkUpOmit<ExtArgs> | null
    /**
     * The data used to create many MarkUps.
     */
    data: MarkUpCreateManyInput | MarkUpCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarkUpIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MarkUp update
   */
  export type MarkUpUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarkUp
     */
    select?: MarkUpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarkUp
     */
    omit?: MarkUpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarkUpInclude<ExtArgs> | null
    /**
     * The data needed to update a MarkUp.
     */
    data: XOR<MarkUpUpdateInput, MarkUpUncheckedUpdateInput>
    /**
     * Choose, which MarkUp to update.
     */
    where: MarkUpWhereUniqueInput
  }

  /**
   * MarkUp updateMany
   */
  export type MarkUpUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MarkUps.
     */
    data: XOR<MarkUpUpdateManyMutationInput, MarkUpUncheckedUpdateManyInput>
    /**
     * Filter which MarkUps to update
     */
    where?: MarkUpWhereInput
    /**
     * Limit how many MarkUps to update.
     */
    limit?: number
  }

  /**
   * MarkUp updateManyAndReturn
   */
  export type MarkUpUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarkUp
     */
    select?: MarkUpSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MarkUp
     */
    omit?: MarkUpOmit<ExtArgs> | null
    /**
     * The data used to update MarkUps.
     */
    data: XOR<MarkUpUpdateManyMutationInput, MarkUpUncheckedUpdateManyInput>
    /**
     * Filter which MarkUps to update
     */
    where?: MarkUpWhereInput
    /**
     * Limit how many MarkUps to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarkUpIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MarkUp upsert
   */
  export type MarkUpUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarkUp
     */
    select?: MarkUpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarkUp
     */
    omit?: MarkUpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarkUpInclude<ExtArgs> | null
    /**
     * The filter to search for the MarkUp to update in case it exists.
     */
    where: MarkUpWhereUniqueInput
    /**
     * In case the MarkUp found by the `where` argument doesn't exist, create a new MarkUp with this data.
     */
    create: XOR<MarkUpCreateInput, MarkUpUncheckedCreateInput>
    /**
     * In case the MarkUp was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MarkUpUpdateInput, MarkUpUncheckedUpdateInput>
  }

  /**
   * MarkUp delete
   */
  export type MarkUpDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarkUp
     */
    select?: MarkUpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarkUp
     */
    omit?: MarkUpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarkUpInclude<ExtArgs> | null
    /**
     * Filter which MarkUp to delete.
     */
    where: MarkUpWhereUniqueInput
  }

  /**
   * MarkUp deleteMany
   */
  export type MarkUpDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MarkUps to delete
     */
    where?: MarkUpWhereInput
    /**
     * Limit how many MarkUps to delete.
     */
    limit?: number
  }

  /**
   * MarkUp.Transactions
   */
  export type MarkUp$TransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    where?: TransactionWhereInput
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    cursor?: TransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * MarkUp without action
   */
  export type MarkUpDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarkUp
     */
    select?: MarkUpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarkUp
     */
    omit?: MarkUpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarkUpInclude<ExtArgs> | null
  }


  /**
   * Model GithubLink
   */

  export type AggregateGithubLink = {
    _count: GithubLinkCountAggregateOutputType | null
    _avg: GithubLinkAvgAggregateOutputType | null
    _sum: GithubLinkSumAggregateOutputType | null
    _min: GithubLinkMinAggregateOutputType | null
    _max: GithubLinkMaxAggregateOutputType | null
  }

  export type GithubLinkAvgAggregateOutputType = {
    githubId: number | null
  }

  export type GithubLinkSumAggregateOutputType = {
    githubId: number | null
  }

  export type GithubLinkMinAggregateOutputType = {
    id: string | null
    githubId: number | null
    githubType: $Enums.GithubType | null
    githubUrl: string | null
    description: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    echoAppId: string | null
  }

  export type GithubLinkMaxAggregateOutputType = {
    id: string | null
    githubId: number | null
    githubType: $Enums.GithubType | null
    githubUrl: string | null
    description: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    echoAppId: string | null
  }

  export type GithubLinkCountAggregateOutputType = {
    id: number
    githubId: number
    githubType: number
    githubUrl: number
    description: number
    isArchived: number
    archivedAt: number
    createdAt: number
    updatedAt: number
    echoAppId: number
    _all: number
  }


  export type GithubLinkAvgAggregateInputType = {
    githubId?: true
  }

  export type GithubLinkSumAggregateInputType = {
    githubId?: true
  }

  export type GithubLinkMinAggregateInputType = {
    id?: true
    githubId?: true
    githubType?: true
    githubUrl?: true
    description?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    echoAppId?: true
  }

  export type GithubLinkMaxAggregateInputType = {
    id?: true
    githubId?: true
    githubType?: true
    githubUrl?: true
    description?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    echoAppId?: true
  }

  export type GithubLinkCountAggregateInputType = {
    id?: true
    githubId?: true
    githubType?: true
    githubUrl?: true
    description?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    echoAppId?: true
    _all?: true
  }

  export type GithubLinkAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GithubLink to aggregate.
     */
    where?: GithubLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GithubLinks to fetch.
     */
    orderBy?: GithubLinkOrderByWithRelationInput | GithubLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: GithubLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GithubLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GithubLinks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned GithubLinks
    **/
    _count?: true | GithubLinkCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GithubLinkAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GithubLinkSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GithubLinkMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GithubLinkMaxAggregateInputType
  }

  export type GetGithubLinkAggregateType<T extends GithubLinkAggregateArgs> = {
        [P in keyof T & keyof AggregateGithubLink]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGithubLink[P]>
      : GetScalarType<T[P], AggregateGithubLink[P]>
  }




  export type GithubLinkGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GithubLinkWhereInput
    orderBy?: GithubLinkOrderByWithAggregationInput | GithubLinkOrderByWithAggregationInput[]
    by: GithubLinkScalarFieldEnum[] | GithubLinkScalarFieldEnum
    having?: GithubLinkScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GithubLinkCountAggregateInputType | true
    _avg?: GithubLinkAvgAggregateInputType
    _sum?: GithubLinkSumAggregateInputType
    _min?: GithubLinkMinAggregateInputType
    _max?: GithubLinkMaxAggregateInputType
  }

  export type GithubLinkGroupByOutputType = {
    id: string
    githubId: number
    githubType: $Enums.GithubType
    githubUrl: string
    description: string | null
    isArchived: boolean
    archivedAt: Date | null
    createdAt: Date
    updatedAt: Date
    echoAppId: string
    _count: GithubLinkCountAggregateOutputType | null
    _avg: GithubLinkAvgAggregateOutputType | null
    _sum: GithubLinkSumAggregateOutputType | null
    _min: GithubLinkMinAggregateOutputType | null
    _max: GithubLinkMaxAggregateOutputType | null
  }

  type GetGithubLinkGroupByPayload<T extends GithubLinkGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GithubLinkGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GithubLinkGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GithubLinkGroupByOutputType[P]>
            : GetScalarType<T[P], GithubLinkGroupByOutputType[P]>
        }
      >
    >


  export type GithubLinkSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    githubId?: boolean
    githubType?: boolean
    githubUrl?: boolean
    description?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    echoAppId?: boolean
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    Transactions?: boolean | GithubLink$TransactionsArgs<ExtArgs>
    _count?: boolean | GithubLinkCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["githubLink"]>

  export type GithubLinkSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    githubId?: boolean
    githubType?: boolean
    githubUrl?: boolean
    description?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    echoAppId?: boolean
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["githubLink"]>

  export type GithubLinkSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    githubId?: boolean
    githubType?: boolean
    githubUrl?: boolean
    description?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    echoAppId?: boolean
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["githubLink"]>

  export type GithubLinkSelectScalar = {
    id?: boolean
    githubId?: boolean
    githubType?: boolean
    githubUrl?: boolean
    description?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    echoAppId?: boolean
  }

  export type GithubLinkOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "githubId" | "githubType" | "githubUrl" | "description" | "isArchived" | "archivedAt" | "createdAt" | "updatedAt" | "echoAppId", ExtArgs["result"]["githubLink"]>
  export type GithubLinkInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    Transactions?: boolean | GithubLink$TransactionsArgs<ExtArgs>
    _count?: boolean | GithubLinkCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type GithubLinkIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }
  export type GithubLinkIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }

  export type $GithubLinkPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "GithubLink"
    objects: {
      echoApp: Prisma.$EchoAppPayload<ExtArgs>
      Transactions: Prisma.$TransactionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      githubId: number
      githubType: $Enums.GithubType
      githubUrl: string
      description: string | null
      isArchived: boolean
      archivedAt: Date | null
      createdAt: Date
      updatedAt: Date
      echoAppId: string
    }, ExtArgs["result"]["githubLink"]>
    composites: {}
  }

  type GithubLinkGetPayload<S extends boolean | null | undefined | GithubLinkDefaultArgs> = $Result.GetResult<Prisma.$GithubLinkPayload, S>

  type GithubLinkCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<GithubLinkFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: GithubLinkCountAggregateInputType | true
    }

  export interface GithubLinkDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['GithubLink'], meta: { name: 'GithubLink' } }
    /**
     * Find zero or one GithubLink that matches the filter.
     * @param {GithubLinkFindUniqueArgs} args - Arguments to find a GithubLink
     * @example
     * // Get one GithubLink
     * const githubLink = await prisma.githubLink.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends GithubLinkFindUniqueArgs>(args: SelectSubset<T, GithubLinkFindUniqueArgs<ExtArgs>>): Prisma__GithubLinkClient<$Result.GetResult<Prisma.$GithubLinkPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one GithubLink that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {GithubLinkFindUniqueOrThrowArgs} args - Arguments to find a GithubLink
     * @example
     * // Get one GithubLink
     * const githubLink = await prisma.githubLink.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends GithubLinkFindUniqueOrThrowArgs>(args: SelectSubset<T, GithubLinkFindUniqueOrThrowArgs<ExtArgs>>): Prisma__GithubLinkClient<$Result.GetResult<Prisma.$GithubLinkPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first GithubLink that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GithubLinkFindFirstArgs} args - Arguments to find a GithubLink
     * @example
     * // Get one GithubLink
     * const githubLink = await prisma.githubLink.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends GithubLinkFindFirstArgs>(args?: SelectSubset<T, GithubLinkFindFirstArgs<ExtArgs>>): Prisma__GithubLinkClient<$Result.GetResult<Prisma.$GithubLinkPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first GithubLink that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GithubLinkFindFirstOrThrowArgs} args - Arguments to find a GithubLink
     * @example
     * // Get one GithubLink
     * const githubLink = await prisma.githubLink.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends GithubLinkFindFirstOrThrowArgs>(args?: SelectSubset<T, GithubLinkFindFirstOrThrowArgs<ExtArgs>>): Prisma__GithubLinkClient<$Result.GetResult<Prisma.$GithubLinkPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more GithubLinks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GithubLinkFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all GithubLinks
     * const githubLinks = await prisma.githubLink.findMany()
     * 
     * // Get first 10 GithubLinks
     * const githubLinks = await prisma.githubLink.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const githubLinkWithIdOnly = await prisma.githubLink.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends GithubLinkFindManyArgs>(args?: SelectSubset<T, GithubLinkFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GithubLinkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a GithubLink.
     * @param {GithubLinkCreateArgs} args - Arguments to create a GithubLink.
     * @example
     * // Create one GithubLink
     * const GithubLink = await prisma.githubLink.create({
     *   data: {
     *     // ... data to create a GithubLink
     *   }
     * })
     * 
     */
    create<T extends GithubLinkCreateArgs>(args: SelectSubset<T, GithubLinkCreateArgs<ExtArgs>>): Prisma__GithubLinkClient<$Result.GetResult<Prisma.$GithubLinkPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many GithubLinks.
     * @param {GithubLinkCreateManyArgs} args - Arguments to create many GithubLinks.
     * @example
     * // Create many GithubLinks
     * const githubLink = await prisma.githubLink.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends GithubLinkCreateManyArgs>(args?: SelectSubset<T, GithubLinkCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many GithubLinks and returns the data saved in the database.
     * @param {GithubLinkCreateManyAndReturnArgs} args - Arguments to create many GithubLinks.
     * @example
     * // Create many GithubLinks
     * const githubLink = await prisma.githubLink.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many GithubLinks and only return the `id`
     * const githubLinkWithIdOnly = await prisma.githubLink.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends GithubLinkCreateManyAndReturnArgs>(args?: SelectSubset<T, GithubLinkCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GithubLinkPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a GithubLink.
     * @param {GithubLinkDeleteArgs} args - Arguments to delete one GithubLink.
     * @example
     * // Delete one GithubLink
     * const GithubLink = await prisma.githubLink.delete({
     *   where: {
     *     // ... filter to delete one GithubLink
     *   }
     * })
     * 
     */
    delete<T extends GithubLinkDeleteArgs>(args: SelectSubset<T, GithubLinkDeleteArgs<ExtArgs>>): Prisma__GithubLinkClient<$Result.GetResult<Prisma.$GithubLinkPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one GithubLink.
     * @param {GithubLinkUpdateArgs} args - Arguments to update one GithubLink.
     * @example
     * // Update one GithubLink
     * const githubLink = await prisma.githubLink.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends GithubLinkUpdateArgs>(args: SelectSubset<T, GithubLinkUpdateArgs<ExtArgs>>): Prisma__GithubLinkClient<$Result.GetResult<Prisma.$GithubLinkPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more GithubLinks.
     * @param {GithubLinkDeleteManyArgs} args - Arguments to filter GithubLinks to delete.
     * @example
     * // Delete a few GithubLinks
     * const { count } = await prisma.githubLink.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends GithubLinkDeleteManyArgs>(args?: SelectSubset<T, GithubLinkDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more GithubLinks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GithubLinkUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many GithubLinks
     * const githubLink = await prisma.githubLink.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends GithubLinkUpdateManyArgs>(args: SelectSubset<T, GithubLinkUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more GithubLinks and returns the data updated in the database.
     * @param {GithubLinkUpdateManyAndReturnArgs} args - Arguments to update many GithubLinks.
     * @example
     * // Update many GithubLinks
     * const githubLink = await prisma.githubLink.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more GithubLinks and only return the `id`
     * const githubLinkWithIdOnly = await prisma.githubLink.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends GithubLinkUpdateManyAndReturnArgs>(args: SelectSubset<T, GithubLinkUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GithubLinkPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one GithubLink.
     * @param {GithubLinkUpsertArgs} args - Arguments to update or create a GithubLink.
     * @example
     * // Update or create a GithubLink
     * const githubLink = await prisma.githubLink.upsert({
     *   create: {
     *     // ... data to create a GithubLink
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the GithubLink we want to update
     *   }
     * })
     */
    upsert<T extends GithubLinkUpsertArgs>(args: SelectSubset<T, GithubLinkUpsertArgs<ExtArgs>>): Prisma__GithubLinkClient<$Result.GetResult<Prisma.$GithubLinkPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of GithubLinks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GithubLinkCountArgs} args - Arguments to filter GithubLinks to count.
     * @example
     * // Count the number of GithubLinks
     * const count = await prisma.githubLink.count({
     *   where: {
     *     // ... the filter for the GithubLinks we want to count
     *   }
     * })
    **/
    count<T extends GithubLinkCountArgs>(
      args?: Subset<T, GithubLinkCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GithubLinkCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a GithubLink.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GithubLinkAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GithubLinkAggregateArgs>(args: Subset<T, GithubLinkAggregateArgs>): Prisma.PrismaPromise<GetGithubLinkAggregateType<T>>

    /**
     * Group by GithubLink.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GithubLinkGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GithubLinkGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GithubLinkGroupByArgs['orderBy'] }
        : { orderBy?: GithubLinkGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GithubLinkGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGithubLinkGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the GithubLink model
   */
  readonly fields: GithubLinkFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for GithubLink.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__GithubLinkClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    echoApp<T extends EchoAppDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EchoAppDefaultArgs<ExtArgs>>): Prisma__EchoAppClient<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Transactions<T extends GithubLink$TransactionsArgs<ExtArgs> = {}>(args?: Subset<T, GithubLink$TransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the GithubLink model
   */
  interface GithubLinkFieldRefs {
    readonly id: FieldRef<"GithubLink", 'String'>
    readonly githubId: FieldRef<"GithubLink", 'Int'>
    readonly githubType: FieldRef<"GithubLink", 'GithubType'>
    readonly githubUrl: FieldRef<"GithubLink", 'String'>
    readonly description: FieldRef<"GithubLink", 'String'>
    readonly isArchived: FieldRef<"GithubLink", 'Boolean'>
    readonly archivedAt: FieldRef<"GithubLink", 'DateTime'>
    readonly createdAt: FieldRef<"GithubLink", 'DateTime'>
    readonly updatedAt: FieldRef<"GithubLink", 'DateTime'>
    readonly echoAppId: FieldRef<"GithubLink", 'String'>
  }
    

  // Custom InputTypes
  /**
   * GithubLink findUnique
   */
  export type GithubLinkFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GithubLink
     */
    select?: GithubLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GithubLink
     */
    omit?: GithubLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GithubLinkInclude<ExtArgs> | null
    /**
     * Filter, which GithubLink to fetch.
     */
    where: GithubLinkWhereUniqueInput
  }

  /**
   * GithubLink findUniqueOrThrow
   */
  export type GithubLinkFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GithubLink
     */
    select?: GithubLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GithubLink
     */
    omit?: GithubLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GithubLinkInclude<ExtArgs> | null
    /**
     * Filter, which GithubLink to fetch.
     */
    where: GithubLinkWhereUniqueInput
  }

  /**
   * GithubLink findFirst
   */
  export type GithubLinkFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GithubLink
     */
    select?: GithubLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GithubLink
     */
    omit?: GithubLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GithubLinkInclude<ExtArgs> | null
    /**
     * Filter, which GithubLink to fetch.
     */
    where?: GithubLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GithubLinks to fetch.
     */
    orderBy?: GithubLinkOrderByWithRelationInput | GithubLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GithubLinks.
     */
    cursor?: GithubLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GithubLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GithubLinks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GithubLinks.
     */
    distinct?: GithubLinkScalarFieldEnum | GithubLinkScalarFieldEnum[]
  }

  /**
   * GithubLink findFirstOrThrow
   */
  export type GithubLinkFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GithubLink
     */
    select?: GithubLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GithubLink
     */
    omit?: GithubLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GithubLinkInclude<ExtArgs> | null
    /**
     * Filter, which GithubLink to fetch.
     */
    where?: GithubLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GithubLinks to fetch.
     */
    orderBy?: GithubLinkOrderByWithRelationInput | GithubLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GithubLinks.
     */
    cursor?: GithubLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GithubLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GithubLinks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GithubLinks.
     */
    distinct?: GithubLinkScalarFieldEnum | GithubLinkScalarFieldEnum[]
  }

  /**
   * GithubLink findMany
   */
  export type GithubLinkFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GithubLink
     */
    select?: GithubLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GithubLink
     */
    omit?: GithubLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GithubLinkInclude<ExtArgs> | null
    /**
     * Filter, which GithubLinks to fetch.
     */
    where?: GithubLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GithubLinks to fetch.
     */
    orderBy?: GithubLinkOrderByWithRelationInput | GithubLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing GithubLinks.
     */
    cursor?: GithubLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GithubLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GithubLinks.
     */
    skip?: number
    distinct?: GithubLinkScalarFieldEnum | GithubLinkScalarFieldEnum[]
  }

  /**
   * GithubLink create
   */
  export type GithubLinkCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GithubLink
     */
    select?: GithubLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GithubLink
     */
    omit?: GithubLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GithubLinkInclude<ExtArgs> | null
    /**
     * The data needed to create a GithubLink.
     */
    data: XOR<GithubLinkCreateInput, GithubLinkUncheckedCreateInput>
  }

  /**
   * GithubLink createMany
   */
  export type GithubLinkCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many GithubLinks.
     */
    data: GithubLinkCreateManyInput | GithubLinkCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * GithubLink createManyAndReturn
   */
  export type GithubLinkCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GithubLink
     */
    select?: GithubLinkSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the GithubLink
     */
    omit?: GithubLinkOmit<ExtArgs> | null
    /**
     * The data used to create many GithubLinks.
     */
    data: GithubLinkCreateManyInput | GithubLinkCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GithubLinkIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * GithubLink update
   */
  export type GithubLinkUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GithubLink
     */
    select?: GithubLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GithubLink
     */
    omit?: GithubLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GithubLinkInclude<ExtArgs> | null
    /**
     * The data needed to update a GithubLink.
     */
    data: XOR<GithubLinkUpdateInput, GithubLinkUncheckedUpdateInput>
    /**
     * Choose, which GithubLink to update.
     */
    where: GithubLinkWhereUniqueInput
  }

  /**
   * GithubLink updateMany
   */
  export type GithubLinkUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update GithubLinks.
     */
    data: XOR<GithubLinkUpdateManyMutationInput, GithubLinkUncheckedUpdateManyInput>
    /**
     * Filter which GithubLinks to update
     */
    where?: GithubLinkWhereInput
    /**
     * Limit how many GithubLinks to update.
     */
    limit?: number
  }

  /**
   * GithubLink updateManyAndReturn
   */
  export type GithubLinkUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GithubLink
     */
    select?: GithubLinkSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the GithubLink
     */
    omit?: GithubLinkOmit<ExtArgs> | null
    /**
     * The data used to update GithubLinks.
     */
    data: XOR<GithubLinkUpdateManyMutationInput, GithubLinkUncheckedUpdateManyInput>
    /**
     * Filter which GithubLinks to update
     */
    where?: GithubLinkWhereInput
    /**
     * Limit how many GithubLinks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GithubLinkIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * GithubLink upsert
   */
  export type GithubLinkUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GithubLink
     */
    select?: GithubLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GithubLink
     */
    omit?: GithubLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GithubLinkInclude<ExtArgs> | null
    /**
     * The filter to search for the GithubLink to update in case it exists.
     */
    where: GithubLinkWhereUniqueInput
    /**
     * In case the GithubLink found by the `where` argument doesn't exist, create a new GithubLink with this data.
     */
    create: XOR<GithubLinkCreateInput, GithubLinkUncheckedCreateInput>
    /**
     * In case the GithubLink was found with the provided `where` argument, update it with this data.
     */
    update: XOR<GithubLinkUpdateInput, GithubLinkUncheckedUpdateInput>
  }

  /**
   * GithubLink delete
   */
  export type GithubLinkDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GithubLink
     */
    select?: GithubLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GithubLink
     */
    omit?: GithubLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GithubLinkInclude<ExtArgs> | null
    /**
     * Filter which GithubLink to delete.
     */
    where: GithubLinkWhereUniqueInput
  }

  /**
   * GithubLink deleteMany
   */
  export type GithubLinkDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GithubLinks to delete
     */
    where?: GithubLinkWhereInput
    /**
     * Limit how many GithubLinks to delete.
     */
    limit?: number
  }

  /**
   * GithubLink.Transactions
   */
  export type GithubLink$TransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    where?: TransactionWhereInput
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    cursor?: TransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * GithubLink without action
   */
  export type GithubLinkDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GithubLink
     */
    select?: GithubLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GithubLink
     */
    omit?: GithubLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GithubLinkInclude<ExtArgs> | null
  }


  /**
   * Model Transaction
   */

  export type AggregateTransaction = {
    _count: TransactionCountAggregateOutputType | null
    _avg: TransactionAvgAggregateOutputType | null
    _sum: TransactionSumAggregateOutputType | null
    _min: TransactionMinAggregateOutputType | null
    _max: TransactionMaxAggregateOutputType | null
  }

  export type TransactionAvgAggregateOutputType = {
    totalCost: Decimal | null
    appProfit: Decimal | null
    markUpProfit: Decimal | null
    referralProfit: Decimal | null
    rawTransactionCost: Decimal | null
  }

  export type TransactionSumAggregateOutputType = {
    totalCost: Decimal | null
    appProfit: Decimal | null
    markUpProfit: Decimal | null
    referralProfit: Decimal | null
    rawTransactionCost: Decimal | null
  }

  export type TransactionMinAggregateOutputType = {
    id: string | null
    transactionMetadataId: string | null
    totalCost: Decimal | null
    appProfit: Decimal | null
    markUpProfit: Decimal | null
    referralProfit: Decimal | null
    rawTransactionCost: Decimal | null
    status: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    userId: string | null
    echoAppId: string | null
    apiKeyId: string | null
    markUpId: string | null
    githubLinkId: string | null
    spendPoolId: string | null
    userSpendPoolUsageId: string | null
    referralCodeId: string | null
    referrerRewardId: string | null
  }

  export type TransactionMaxAggregateOutputType = {
    id: string | null
    transactionMetadataId: string | null
    totalCost: Decimal | null
    appProfit: Decimal | null
    markUpProfit: Decimal | null
    referralProfit: Decimal | null
    rawTransactionCost: Decimal | null
    status: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    userId: string | null
    echoAppId: string | null
    apiKeyId: string | null
    markUpId: string | null
    githubLinkId: string | null
    spendPoolId: string | null
    userSpendPoolUsageId: string | null
    referralCodeId: string | null
    referrerRewardId: string | null
  }

  export type TransactionCountAggregateOutputType = {
    id: number
    transactionMetadataId: number
    totalCost: number
    appProfit: number
    markUpProfit: number
    referralProfit: number
    rawTransactionCost: number
    status: number
    isArchived: number
    archivedAt: number
    createdAt: number
    userId: number
    echoAppId: number
    apiKeyId: number
    markUpId: number
    githubLinkId: number
    spendPoolId: number
    userSpendPoolUsageId: number
    referralCodeId: number
    referrerRewardId: number
    _all: number
  }


  export type TransactionAvgAggregateInputType = {
    totalCost?: true
    appProfit?: true
    markUpProfit?: true
    referralProfit?: true
    rawTransactionCost?: true
  }

  export type TransactionSumAggregateInputType = {
    totalCost?: true
    appProfit?: true
    markUpProfit?: true
    referralProfit?: true
    rawTransactionCost?: true
  }

  export type TransactionMinAggregateInputType = {
    id?: true
    transactionMetadataId?: true
    totalCost?: true
    appProfit?: true
    markUpProfit?: true
    referralProfit?: true
    rawTransactionCost?: true
    status?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    userId?: true
    echoAppId?: true
    apiKeyId?: true
    markUpId?: true
    githubLinkId?: true
    spendPoolId?: true
    userSpendPoolUsageId?: true
    referralCodeId?: true
    referrerRewardId?: true
  }

  export type TransactionMaxAggregateInputType = {
    id?: true
    transactionMetadataId?: true
    totalCost?: true
    appProfit?: true
    markUpProfit?: true
    referralProfit?: true
    rawTransactionCost?: true
    status?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    userId?: true
    echoAppId?: true
    apiKeyId?: true
    markUpId?: true
    githubLinkId?: true
    spendPoolId?: true
    userSpendPoolUsageId?: true
    referralCodeId?: true
    referrerRewardId?: true
  }

  export type TransactionCountAggregateInputType = {
    id?: true
    transactionMetadataId?: true
    totalCost?: true
    appProfit?: true
    markUpProfit?: true
    referralProfit?: true
    rawTransactionCost?: true
    status?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    userId?: true
    echoAppId?: true
    apiKeyId?: true
    markUpId?: true
    githubLinkId?: true
    spendPoolId?: true
    userSpendPoolUsageId?: true
    referralCodeId?: true
    referrerRewardId?: true
    _all?: true
  }

  export type TransactionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transaction to aggregate.
     */
    where?: TransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transactions to fetch.
     */
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Transactions
    **/
    _count?: true | TransactionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransactionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransactionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransactionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransactionMaxAggregateInputType
  }

  export type GetTransactionAggregateType<T extends TransactionAggregateArgs> = {
        [P in keyof T & keyof AggregateTransaction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransaction[P]>
      : GetScalarType<T[P], AggregateTransaction[P]>
  }




  export type TransactionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionWhereInput
    orderBy?: TransactionOrderByWithAggregationInput | TransactionOrderByWithAggregationInput[]
    by: TransactionScalarFieldEnum[] | TransactionScalarFieldEnum
    having?: TransactionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransactionCountAggregateInputType | true
    _avg?: TransactionAvgAggregateInputType
    _sum?: TransactionSumAggregateInputType
    _min?: TransactionMinAggregateInputType
    _max?: TransactionMaxAggregateInputType
  }

  export type TransactionGroupByOutputType = {
    id: string
    transactionMetadataId: string | null
    totalCost: Decimal
    appProfit: Decimal
    markUpProfit: Decimal
    referralProfit: Decimal
    rawTransactionCost: Decimal
    status: string | null
    isArchived: boolean
    archivedAt: Date | null
    createdAt: Date
    userId: string
    echoAppId: string
    apiKeyId: string | null
    markUpId: string | null
    githubLinkId: string | null
    spendPoolId: string | null
    userSpendPoolUsageId: string | null
    referralCodeId: string | null
    referrerRewardId: string | null
    _count: TransactionCountAggregateOutputType | null
    _avg: TransactionAvgAggregateOutputType | null
    _sum: TransactionSumAggregateOutputType | null
    _min: TransactionMinAggregateOutputType | null
    _max: TransactionMaxAggregateOutputType | null
  }

  type GetTransactionGroupByPayload<T extends TransactionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransactionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransactionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransactionGroupByOutputType[P]>
            : GetScalarType<T[P], TransactionGroupByOutputType[P]>
        }
      >
    >


  export type TransactionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transactionMetadataId?: boolean
    totalCost?: boolean
    appProfit?: boolean
    markUpProfit?: boolean
    referralProfit?: boolean
    rawTransactionCost?: boolean
    status?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    userId?: boolean
    echoAppId?: boolean
    apiKeyId?: boolean
    markUpId?: boolean
    githubLinkId?: boolean
    spendPoolId?: boolean
    userSpendPoolUsageId?: boolean
    referralCodeId?: boolean
    referrerRewardId?: boolean
    apiKey?: boolean | Transaction$apiKeyArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    githubLink?: boolean | Transaction$githubLinkArgs<ExtArgs>
    markUp?: boolean | Transaction$markUpArgs<ExtArgs>
    spendPool?: boolean | Transaction$spendPoolArgs<ExtArgs>
    transactionMetadata?: boolean | Transaction$transactionMetadataArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    userSpendPoolUsage?: boolean | Transaction$userSpendPoolUsageArgs<ExtArgs>
    referralCode?: boolean | Transaction$referralCodeArgs<ExtArgs>
    referrerReward?: boolean | Transaction$referrerRewardArgs<ExtArgs>
  }, ExtArgs["result"]["transaction"]>

  export type TransactionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transactionMetadataId?: boolean
    totalCost?: boolean
    appProfit?: boolean
    markUpProfit?: boolean
    referralProfit?: boolean
    rawTransactionCost?: boolean
    status?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    userId?: boolean
    echoAppId?: boolean
    apiKeyId?: boolean
    markUpId?: boolean
    githubLinkId?: boolean
    spendPoolId?: boolean
    userSpendPoolUsageId?: boolean
    referralCodeId?: boolean
    referrerRewardId?: boolean
    apiKey?: boolean | Transaction$apiKeyArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    githubLink?: boolean | Transaction$githubLinkArgs<ExtArgs>
    markUp?: boolean | Transaction$markUpArgs<ExtArgs>
    spendPool?: boolean | Transaction$spendPoolArgs<ExtArgs>
    transactionMetadata?: boolean | Transaction$transactionMetadataArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    userSpendPoolUsage?: boolean | Transaction$userSpendPoolUsageArgs<ExtArgs>
    referralCode?: boolean | Transaction$referralCodeArgs<ExtArgs>
    referrerReward?: boolean | Transaction$referrerRewardArgs<ExtArgs>
  }, ExtArgs["result"]["transaction"]>

  export type TransactionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transactionMetadataId?: boolean
    totalCost?: boolean
    appProfit?: boolean
    markUpProfit?: boolean
    referralProfit?: boolean
    rawTransactionCost?: boolean
    status?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    userId?: boolean
    echoAppId?: boolean
    apiKeyId?: boolean
    markUpId?: boolean
    githubLinkId?: boolean
    spendPoolId?: boolean
    userSpendPoolUsageId?: boolean
    referralCodeId?: boolean
    referrerRewardId?: boolean
    apiKey?: boolean | Transaction$apiKeyArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    githubLink?: boolean | Transaction$githubLinkArgs<ExtArgs>
    markUp?: boolean | Transaction$markUpArgs<ExtArgs>
    spendPool?: boolean | Transaction$spendPoolArgs<ExtArgs>
    transactionMetadata?: boolean | Transaction$transactionMetadataArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    userSpendPoolUsage?: boolean | Transaction$userSpendPoolUsageArgs<ExtArgs>
    referralCode?: boolean | Transaction$referralCodeArgs<ExtArgs>
    referrerReward?: boolean | Transaction$referrerRewardArgs<ExtArgs>
  }, ExtArgs["result"]["transaction"]>

  export type TransactionSelectScalar = {
    id?: boolean
    transactionMetadataId?: boolean
    totalCost?: boolean
    appProfit?: boolean
    markUpProfit?: boolean
    referralProfit?: boolean
    rawTransactionCost?: boolean
    status?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    userId?: boolean
    echoAppId?: boolean
    apiKeyId?: boolean
    markUpId?: boolean
    githubLinkId?: boolean
    spendPoolId?: boolean
    userSpendPoolUsageId?: boolean
    referralCodeId?: boolean
    referrerRewardId?: boolean
  }

  export type TransactionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "transactionMetadataId" | "totalCost" | "appProfit" | "markUpProfit" | "referralProfit" | "rawTransactionCost" | "status" | "isArchived" | "archivedAt" | "createdAt" | "userId" | "echoAppId" | "apiKeyId" | "markUpId" | "githubLinkId" | "spendPoolId" | "userSpendPoolUsageId" | "referralCodeId" | "referrerRewardId", ExtArgs["result"]["transaction"]>
  export type TransactionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    apiKey?: boolean | Transaction$apiKeyArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    githubLink?: boolean | Transaction$githubLinkArgs<ExtArgs>
    markUp?: boolean | Transaction$markUpArgs<ExtArgs>
    spendPool?: boolean | Transaction$spendPoolArgs<ExtArgs>
    transactionMetadata?: boolean | Transaction$transactionMetadataArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    userSpendPoolUsage?: boolean | Transaction$userSpendPoolUsageArgs<ExtArgs>
    referralCode?: boolean | Transaction$referralCodeArgs<ExtArgs>
    referrerReward?: boolean | Transaction$referrerRewardArgs<ExtArgs>
  }
  export type TransactionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    apiKey?: boolean | Transaction$apiKeyArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    githubLink?: boolean | Transaction$githubLinkArgs<ExtArgs>
    markUp?: boolean | Transaction$markUpArgs<ExtArgs>
    spendPool?: boolean | Transaction$spendPoolArgs<ExtArgs>
    transactionMetadata?: boolean | Transaction$transactionMetadataArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    userSpendPoolUsage?: boolean | Transaction$userSpendPoolUsageArgs<ExtArgs>
    referralCode?: boolean | Transaction$referralCodeArgs<ExtArgs>
    referrerReward?: boolean | Transaction$referrerRewardArgs<ExtArgs>
  }
  export type TransactionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    apiKey?: boolean | Transaction$apiKeyArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    githubLink?: boolean | Transaction$githubLinkArgs<ExtArgs>
    markUp?: boolean | Transaction$markUpArgs<ExtArgs>
    spendPool?: boolean | Transaction$spendPoolArgs<ExtArgs>
    transactionMetadata?: boolean | Transaction$transactionMetadataArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    userSpendPoolUsage?: boolean | Transaction$userSpendPoolUsageArgs<ExtArgs>
    referralCode?: boolean | Transaction$referralCodeArgs<ExtArgs>
    referrerReward?: boolean | Transaction$referrerRewardArgs<ExtArgs>
  }

  export type $TransactionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Transaction"
    objects: {
      apiKey: Prisma.$ApiKeyPayload<ExtArgs> | null
      echoApp: Prisma.$EchoAppPayload<ExtArgs>
      githubLink: Prisma.$GithubLinkPayload<ExtArgs> | null
      markUp: Prisma.$MarkUpPayload<ExtArgs> | null
      spendPool: Prisma.$SpendPoolPayload<ExtArgs> | null
      transactionMetadata: Prisma.$TransactionMetadataPayload<ExtArgs> | null
      user: Prisma.$UserPayload<ExtArgs>
      userSpendPoolUsage: Prisma.$UserSpendPoolUsagePayload<ExtArgs> | null
      referralCode: Prisma.$ReferralCodePayload<ExtArgs> | null
      referrerReward: Prisma.$ReferralRewardPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      transactionMetadataId: string | null
      totalCost: Prisma.Decimal
      appProfit: Prisma.Decimal
      markUpProfit: Prisma.Decimal
      referralProfit: Prisma.Decimal
      rawTransactionCost: Prisma.Decimal
      status: string | null
      isArchived: boolean
      archivedAt: Date | null
      createdAt: Date
      userId: string
      echoAppId: string
      apiKeyId: string | null
      markUpId: string | null
      githubLinkId: string | null
      spendPoolId: string | null
      userSpendPoolUsageId: string | null
      referralCodeId: string | null
      referrerRewardId: string | null
    }, ExtArgs["result"]["transaction"]>
    composites: {}
  }

  type TransactionGetPayload<S extends boolean | null | undefined | TransactionDefaultArgs> = $Result.GetResult<Prisma.$TransactionPayload, S>

  type TransactionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TransactionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransactionCountAggregateInputType | true
    }

  export interface TransactionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Transaction'], meta: { name: 'Transaction' } }
    /**
     * Find zero or one Transaction that matches the filter.
     * @param {TransactionFindUniqueArgs} args - Arguments to find a Transaction
     * @example
     * // Get one Transaction
     * const transaction = await prisma.transaction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TransactionFindUniqueArgs>(args: SelectSubset<T, TransactionFindUniqueArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Transaction that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TransactionFindUniqueOrThrowArgs} args - Arguments to find a Transaction
     * @example
     * // Get one Transaction
     * const transaction = await prisma.transaction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TransactionFindUniqueOrThrowArgs>(args: SelectSubset<T, TransactionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transaction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionFindFirstArgs} args - Arguments to find a Transaction
     * @example
     * // Get one Transaction
     * const transaction = await prisma.transaction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TransactionFindFirstArgs>(args?: SelectSubset<T, TransactionFindFirstArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transaction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionFindFirstOrThrowArgs} args - Arguments to find a Transaction
     * @example
     * // Get one Transaction
     * const transaction = await prisma.transaction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TransactionFindFirstOrThrowArgs>(args?: SelectSubset<T, TransactionFindFirstOrThrowArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Transactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transactions
     * const transactions = await prisma.transaction.findMany()
     * 
     * // Get first 10 Transactions
     * const transactions = await prisma.transaction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transactionWithIdOnly = await prisma.transaction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TransactionFindManyArgs>(args?: SelectSubset<T, TransactionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Transaction.
     * @param {TransactionCreateArgs} args - Arguments to create a Transaction.
     * @example
     * // Create one Transaction
     * const Transaction = await prisma.transaction.create({
     *   data: {
     *     // ... data to create a Transaction
     *   }
     * })
     * 
     */
    create<T extends TransactionCreateArgs>(args: SelectSubset<T, TransactionCreateArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Transactions.
     * @param {TransactionCreateManyArgs} args - Arguments to create many Transactions.
     * @example
     * // Create many Transactions
     * const transaction = await prisma.transaction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TransactionCreateManyArgs>(args?: SelectSubset<T, TransactionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Transactions and returns the data saved in the database.
     * @param {TransactionCreateManyAndReturnArgs} args - Arguments to create many Transactions.
     * @example
     * // Create many Transactions
     * const transaction = await prisma.transaction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Transactions and only return the `id`
     * const transactionWithIdOnly = await prisma.transaction.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TransactionCreateManyAndReturnArgs>(args?: SelectSubset<T, TransactionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Transaction.
     * @param {TransactionDeleteArgs} args - Arguments to delete one Transaction.
     * @example
     * // Delete one Transaction
     * const Transaction = await prisma.transaction.delete({
     *   where: {
     *     // ... filter to delete one Transaction
     *   }
     * })
     * 
     */
    delete<T extends TransactionDeleteArgs>(args: SelectSubset<T, TransactionDeleteArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Transaction.
     * @param {TransactionUpdateArgs} args - Arguments to update one Transaction.
     * @example
     * // Update one Transaction
     * const transaction = await prisma.transaction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TransactionUpdateArgs>(args: SelectSubset<T, TransactionUpdateArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Transactions.
     * @param {TransactionDeleteManyArgs} args - Arguments to filter Transactions to delete.
     * @example
     * // Delete a few Transactions
     * const { count } = await prisma.transaction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TransactionDeleteManyArgs>(args?: SelectSubset<T, TransactionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transactions
     * const transaction = await prisma.transaction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TransactionUpdateManyArgs>(args: SelectSubset<T, TransactionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transactions and returns the data updated in the database.
     * @param {TransactionUpdateManyAndReturnArgs} args - Arguments to update many Transactions.
     * @example
     * // Update many Transactions
     * const transaction = await prisma.transaction.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Transactions and only return the `id`
     * const transactionWithIdOnly = await prisma.transaction.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TransactionUpdateManyAndReturnArgs>(args: SelectSubset<T, TransactionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Transaction.
     * @param {TransactionUpsertArgs} args - Arguments to update or create a Transaction.
     * @example
     * // Update or create a Transaction
     * const transaction = await prisma.transaction.upsert({
     *   create: {
     *     // ... data to create a Transaction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transaction we want to update
     *   }
     * })
     */
    upsert<T extends TransactionUpsertArgs>(args: SelectSubset<T, TransactionUpsertArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionCountArgs} args - Arguments to filter Transactions to count.
     * @example
     * // Count the number of Transactions
     * const count = await prisma.transaction.count({
     *   where: {
     *     // ... the filter for the Transactions we want to count
     *   }
     * })
    **/
    count<T extends TransactionCountArgs>(
      args?: Subset<T, TransactionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransactionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransactionAggregateArgs>(args: Subset<T, TransactionAggregateArgs>): Prisma.PrismaPromise<GetTransactionAggregateType<T>>

    /**
     * Group by Transaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TransactionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TransactionGroupByArgs['orderBy'] }
        : { orderBy?: TransactionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TransactionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransactionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Transaction model
   */
  readonly fields: TransactionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Transaction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TransactionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    apiKey<T extends Transaction$apiKeyArgs<ExtArgs> = {}>(args?: Subset<T, Transaction$apiKeyArgs<ExtArgs>>): Prisma__ApiKeyClient<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    echoApp<T extends EchoAppDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EchoAppDefaultArgs<ExtArgs>>): Prisma__EchoAppClient<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    githubLink<T extends Transaction$githubLinkArgs<ExtArgs> = {}>(args?: Subset<T, Transaction$githubLinkArgs<ExtArgs>>): Prisma__GithubLinkClient<$Result.GetResult<Prisma.$GithubLinkPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    markUp<T extends Transaction$markUpArgs<ExtArgs> = {}>(args?: Subset<T, Transaction$markUpArgs<ExtArgs>>): Prisma__MarkUpClient<$Result.GetResult<Prisma.$MarkUpPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    spendPool<T extends Transaction$spendPoolArgs<ExtArgs> = {}>(args?: Subset<T, Transaction$spendPoolArgs<ExtArgs>>): Prisma__SpendPoolClient<$Result.GetResult<Prisma.$SpendPoolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    transactionMetadata<T extends Transaction$transactionMetadataArgs<ExtArgs> = {}>(args?: Subset<T, Transaction$transactionMetadataArgs<ExtArgs>>): Prisma__TransactionMetadataClient<$Result.GetResult<Prisma.$TransactionMetadataPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userSpendPoolUsage<T extends Transaction$userSpendPoolUsageArgs<ExtArgs> = {}>(args?: Subset<T, Transaction$userSpendPoolUsageArgs<ExtArgs>>): Prisma__UserSpendPoolUsageClient<$Result.GetResult<Prisma.$UserSpendPoolUsagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    referralCode<T extends Transaction$referralCodeArgs<ExtArgs> = {}>(args?: Subset<T, Transaction$referralCodeArgs<ExtArgs>>): Prisma__ReferralCodeClient<$Result.GetResult<Prisma.$ReferralCodePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    referrerReward<T extends Transaction$referrerRewardArgs<ExtArgs> = {}>(args?: Subset<T, Transaction$referrerRewardArgs<ExtArgs>>): Prisma__ReferralRewardClient<$Result.GetResult<Prisma.$ReferralRewardPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Transaction model
   */
  interface TransactionFieldRefs {
    readonly id: FieldRef<"Transaction", 'String'>
    readonly transactionMetadataId: FieldRef<"Transaction", 'String'>
    readonly totalCost: FieldRef<"Transaction", 'Decimal'>
    readonly appProfit: FieldRef<"Transaction", 'Decimal'>
    readonly markUpProfit: FieldRef<"Transaction", 'Decimal'>
    readonly referralProfit: FieldRef<"Transaction", 'Decimal'>
    readonly rawTransactionCost: FieldRef<"Transaction", 'Decimal'>
    readonly status: FieldRef<"Transaction", 'String'>
    readonly isArchived: FieldRef<"Transaction", 'Boolean'>
    readonly archivedAt: FieldRef<"Transaction", 'DateTime'>
    readonly createdAt: FieldRef<"Transaction", 'DateTime'>
    readonly userId: FieldRef<"Transaction", 'String'>
    readonly echoAppId: FieldRef<"Transaction", 'String'>
    readonly apiKeyId: FieldRef<"Transaction", 'String'>
    readonly markUpId: FieldRef<"Transaction", 'String'>
    readonly githubLinkId: FieldRef<"Transaction", 'String'>
    readonly spendPoolId: FieldRef<"Transaction", 'String'>
    readonly userSpendPoolUsageId: FieldRef<"Transaction", 'String'>
    readonly referralCodeId: FieldRef<"Transaction", 'String'>
    readonly referrerRewardId: FieldRef<"Transaction", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Transaction findUnique
   */
  export type TransactionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * Filter, which Transaction to fetch.
     */
    where: TransactionWhereUniqueInput
  }

  /**
   * Transaction findUniqueOrThrow
   */
  export type TransactionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * Filter, which Transaction to fetch.
     */
    where: TransactionWhereUniqueInput
  }

  /**
   * Transaction findFirst
   */
  export type TransactionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * Filter, which Transaction to fetch.
     */
    where?: TransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transactions to fetch.
     */
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transactions.
     */
    cursor?: TransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transactions.
     */
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * Transaction findFirstOrThrow
   */
  export type TransactionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * Filter, which Transaction to fetch.
     */
    where?: TransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transactions to fetch.
     */
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transactions.
     */
    cursor?: TransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transactions.
     */
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * Transaction findMany
   */
  export type TransactionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * Filter, which Transactions to fetch.
     */
    where?: TransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transactions to fetch.
     */
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Transactions.
     */
    cursor?: TransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transactions.
     */
    skip?: number
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * Transaction create
   */
  export type TransactionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * The data needed to create a Transaction.
     */
    data: XOR<TransactionCreateInput, TransactionUncheckedCreateInput>
  }

  /**
   * Transaction createMany
   */
  export type TransactionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Transactions.
     */
    data: TransactionCreateManyInput | TransactionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Transaction createManyAndReturn
   */
  export type TransactionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * The data used to create many Transactions.
     */
    data: TransactionCreateManyInput | TransactionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transaction update
   */
  export type TransactionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * The data needed to update a Transaction.
     */
    data: XOR<TransactionUpdateInput, TransactionUncheckedUpdateInput>
    /**
     * Choose, which Transaction to update.
     */
    where: TransactionWhereUniqueInput
  }

  /**
   * Transaction updateMany
   */
  export type TransactionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Transactions.
     */
    data: XOR<TransactionUpdateManyMutationInput, TransactionUncheckedUpdateManyInput>
    /**
     * Filter which Transactions to update
     */
    where?: TransactionWhereInput
    /**
     * Limit how many Transactions to update.
     */
    limit?: number
  }

  /**
   * Transaction updateManyAndReturn
   */
  export type TransactionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * The data used to update Transactions.
     */
    data: XOR<TransactionUpdateManyMutationInput, TransactionUncheckedUpdateManyInput>
    /**
     * Filter which Transactions to update
     */
    where?: TransactionWhereInput
    /**
     * Limit how many Transactions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transaction upsert
   */
  export type TransactionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * The filter to search for the Transaction to update in case it exists.
     */
    where: TransactionWhereUniqueInput
    /**
     * In case the Transaction found by the `where` argument doesn't exist, create a new Transaction with this data.
     */
    create: XOR<TransactionCreateInput, TransactionUncheckedCreateInput>
    /**
     * In case the Transaction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TransactionUpdateInput, TransactionUncheckedUpdateInput>
  }

  /**
   * Transaction delete
   */
  export type TransactionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * Filter which Transaction to delete.
     */
    where: TransactionWhereUniqueInput
  }

  /**
   * Transaction deleteMany
   */
  export type TransactionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transactions to delete
     */
    where?: TransactionWhereInput
    /**
     * Limit how many Transactions to delete.
     */
    limit?: number
  }

  /**
   * Transaction.apiKey
   */
  export type Transaction$apiKeyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiKey
     */
    omit?: ApiKeyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    where?: ApiKeyWhereInput
  }

  /**
   * Transaction.githubLink
   */
  export type Transaction$githubLinkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GithubLink
     */
    select?: GithubLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GithubLink
     */
    omit?: GithubLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GithubLinkInclude<ExtArgs> | null
    where?: GithubLinkWhereInput
  }

  /**
   * Transaction.markUp
   */
  export type Transaction$markUpArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarkUp
     */
    select?: MarkUpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarkUp
     */
    omit?: MarkUpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarkUpInclude<ExtArgs> | null
    where?: MarkUpWhereInput
  }

  /**
   * Transaction.spendPool
   */
  export type Transaction$spendPoolArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpendPool
     */
    select?: SpendPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SpendPool
     */
    omit?: SpendPoolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpendPoolInclude<ExtArgs> | null
    where?: SpendPoolWhereInput
  }

  /**
   * Transaction.transactionMetadata
   */
  export type Transaction$transactionMetadataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionMetadata
     */
    select?: TransactionMetadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionMetadata
     */
    omit?: TransactionMetadataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionMetadataInclude<ExtArgs> | null
    where?: TransactionMetadataWhereInput
  }

  /**
   * Transaction.userSpendPoolUsage
   */
  export type Transaction$userSpendPoolUsageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSpendPoolUsage
     */
    select?: UserSpendPoolUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSpendPoolUsage
     */
    omit?: UserSpendPoolUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSpendPoolUsageInclude<ExtArgs> | null
    where?: UserSpendPoolUsageWhereInput
  }

  /**
   * Transaction.referralCode
   */
  export type Transaction$referralCodeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralCode
     */
    select?: ReferralCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralCode
     */
    omit?: ReferralCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralCodeInclude<ExtArgs> | null
    where?: ReferralCodeWhereInput
  }

  /**
   * Transaction.referrerReward
   */
  export type Transaction$referrerRewardArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralReward
     */
    select?: ReferralRewardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralReward
     */
    omit?: ReferralRewardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralRewardInclude<ExtArgs> | null
    where?: ReferralRewardWhereInput
  }

  /**
   * Transaction without action
   */
  export type TransactionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
  }


  /**
   * Model SpendPool
   */

  export type AggregateSpendPool = {
    _count: SpendPoolCountAggregateOutputType | null
    _avg: SpendPoolAvgAggregateOutputType | null
    _sum: SpendPoolSumAggregateOutputType | null
    _min: SpendPoolMinAggregateOutputType | null
    _max: SpendPoolMaxAggregateOutputType | null
  }

  export type SpendPoolAvgAggregateOutputType = {
    totalPaid: Decimal | null
    perUserSpendLimit: Decimal | null
    totalSpent: Decimal | null
  }

  export type SpendPoolSumAggregateOutputType = {
    totalPaid: Decimal | null
    perUserSpendLimit: Decimal | null
    totalSpent: Decimal | null
  }

  export type SpendPoolMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    totalPaid: Decimal | null
    perUserSpendLimit: Decimal | null
    totalSpent: Decimal | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    echoAppId: string | null
  }

  export type SpendPoolMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    totalPaid: Decimal | null
    perUserSpendLimit: Decimal | null
    totalSpent: Decimal | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    echoAppId: string | null
  }

  export type SpendPoolCountAggregateOutputType = {
    id: number
    name: number
    description: number
    totalPaid: number
    perUserSpendLimit: number
    totalSpent: number
    isArchived: number
    archivedAt: number
    createdAt: number
    updatedAt: number
    echoAppId: number
    _all: number
  }


  export type SpendPoolAvgAggregateInputType = {
    totalPaid?: true
    perUserSpendLimit?: true
    totalSpent?: true
  }

  export type SpendPoolSumAggregateInputType = {
    totalPaid?: true
    perUserSpendLimit?: true
    totalSpent?: true
  }

  export type SpendPoolMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    totalPaid?: true
    perUserSpendLimit?: true
    totalSpent?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    echoAppId?: true
  }

  export type SpendPoolMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    totalPaid?: true
    perUserSpendLimit?: true
    totalSpent?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    echoAppId?: true
  }

  export type SpendPoolCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    totalPaid?: true
    perUserSpendLimit?: true
    totalSpent?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    echoAppId?: true
    _all?: true
  }

  export type SpendPoolAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SpendPool to aggregate.
     */
    where?: SpendPoolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SpendPools to fetch.
     */
    orderBy?: SpendPoolOrderByWithRelationInput | SpendPoolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SpendPoolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SpendPools from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SpendPools.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SpendPools
    **/
    _count?: true | SpendPoolCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SpendPoolAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SpendPoolSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SpendPoolMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SpendPoolMaxAggregateInputType
  }

  export type GetSpendPoolAggregateType<T extends SpendPoolAggregateArgs> = {
        [P in keyof T & keyof AggregateSpendPool]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSpendPool[P]>
      : GetScalarType<T[P], AggregateSpendPool[P]>
  }




  export type SpendPoolGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SpendPoolWhereInput
    orderBy?: SpendPoolOrderByWithAggregationInput | SpendPoolOrderByWithAggregationInput[]
    by: SpendPoolScalarFieldEnum[] | SpendPoolScalarFieldEnum
    having?: SpendPoolScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SpendPoolCountAggregateInputType | true
    _avg?: SpendPoolAvgAggregateInputType
    _sum?: SpendPoolSumAggregateInputType
    _min?: SpendPoolMinAggregateInputType
    _max?: SpendPoolMaxAggregateInputType
  }

  export type SpendPoolGroupByOutputType = {
    id: string
    name: string
    description: string | null
    totalPaid: Decimal
    perUserSpendLimit: Decimal | null
    totalSpent: Decimal
    isArchived: boolean
    archivedAt: Date | null
    createdAt: Date
    updatedAt: Date
    echoAppId: string
    _count: SpendPoolCountAggregateOutputType | null
    _avg: SpendPoolAvgAggregateOutputType | null
    _sum: SpendPoolSumAggregateOutputType | null
    _min: SpendPoolMinAggregateOutputType | null
    _max: SpendPoolMaxAggregateOutputType | null
  }

  type GetSpendPoolGroupByPayload<T extends SpendPoolGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SpendPoolGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SpendPoolGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SpendPoolGroupByOutputType[P]>
            : GetScalarType<T[P], SpendPoolGroupByOutputType[P]>
        }
      >
    >


  export type SpendPoolSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    totalPaid?: boolean
    perUserSpendLimit?: boolean
    totalSpent?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    echoAppId?: boolean
    payments?: boolean | SpendPool$paymentsArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    Transactions?: boolean | SpendPool$TransactionsArgs<ExtArgs>
    userUsage?: boolean | SpendPool$userUsageArgs<ExtArgs>
    _count?: boolean | SpendPoolCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["spendPool"]>

  export type SpendPoolSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    totalPaid?: boolean
    perUserSpendLimit?: boolean
    totalSpent?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    echoAppId?: boolean
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["spendPool"]>

  export type SpendPoolSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    totalPaid?: boolean
    perUserSpendLimit?: boolean
    totalSpent?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    echoAppId?: boolean
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["spendPool"]>

  export type SpendPoolSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    totalPaid?: boolean
    perUserSpendLimit?: boolean
    totalSpent?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    echoAppId?: boolean
  }

  export type SpendPoolOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "totalPaid" | "perUserSpendLimit" | "totalSpent" | "isArchived" | "archivedAt" | "createdAt" | "updatedAt" | "echoAppId", ExtArgs["result"]["spendPool"]>
  export type SpendPoolInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    payments?: boolean | SpendPool$paymentsArgs<ExtArgs>
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    Transactions?: boolean | SpendPool$TransactionsArgs<ExtArgs>
    userUsage?: boolean | SpendPool$userUsageArgs<ExtArgs>
    _count?: boolean | SpendPoolCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SpendPoolIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }
  export type SpendPoolIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }

  export type $SpendPoolPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SpendPool"
    objects: {
      payments: Prisma.$PaymentPayload<ExtArgs>[]
      echoApp: Prisma.$EchoAppPayload<ExtArgs>
      Transactions: Prisma.$TransactionPayload<ExtArgs>[]
      userUsage: Prisma.$UserSpendPoolUsagePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      totalPaid: Prisma.Decimal
      perUserSpendLimit: Prisma.Decimal | null
      totalSpent: Prisma.Decimal
      isArchived: boolean
      archivedAt: Date | null
      createdAt: Date
      updatedAt: Date
      echoAppId: string
    }, ExtArgs["result"]["spendPool"]>
    composites: {}
  }

  type SpendPoolGetPayload<S extends boolean | null | undefined | SpendPoolDefaultArgs> = $Result.GetResult<Prisma.$SpendPoolPayload, S>

  type SpendPoolCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SpendPoolFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SpendPoolCountAggregateInputType | true
    }

  export interface SpendPoolDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SpendPool'], meta: { name: 'SpendPool' } }
    /**
     * Find zero or one SpendPool that matches the filter.
     * @param {SpendPoolFindUniqueArgs} args - Arguments to find a SpendPool
     * @example
     * // Get one SpendPool
     * const spendPool = await prisma.spendPool.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SpendPoolFindUniqueArgs>(args: SelectSubset<T, SpendPoolFindUniqueArgs<ExtArgs>>): Prisma__SpendPoolClient<$Result.GetResult<Prisma.$SpendPoolPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SpendPool that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SpendPoolFindUniqueOrThrowArgs} args - Arguments to find a SpendPool
     * @example
     * // Get one SpendPool
     * const spendPool = await prisma.spendPool.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SpendPoolFindUniqueOrThrowArgs>(args: SelectSubset<T, SpendPoolFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SpendPoolClient<$Result.GetResult<Prisma.$SpendPoolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SpendPool that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpendPoolFindFirstArgs} args - Arguments to find a SpendPool
     * @example
     * // Get one SpendPool
     * const spendPool = await prisma.spendPool.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SpendPoolFindFirstArgs>(args?: SelectSubset<T, SpendPoolFindFirstArgs<ExtArgs>>): Prisma__SpendPoolClient<$Result.GetResult<Prisma.$SpendPoolPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SpendPool that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpendPoolFindFirstOrThrowArgs} args - Arguments to find a SpendPool
     * @example
     * // Get one SpendPool
     * const spendPool = await prisma.spendPool.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SpendPoolFindFirstOrThrowArgs>(args?: SelectSubset<T, SpendPoolFindFirstOrThrowArgs<ExtArgs>>): Prisma__SpendPoolClient<$Result.GetResult<Prisma.$SpendPoolPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SpendPools that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpendPoolFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SpendPools
     * const spendPools = await prisma.spendPool.findMany()
     * 
     * // Get first 10 SpendPools
     * const spendPools = await prisma.spendPool.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const spendPoolWithIdOnly = await prisma.spendPool.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SpendPoolFindManyArgs>(args?: SelectSubset<T, SpendPoolFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SpendPoolPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SpendPool.
     * @param {SpendPoolCreateArgs} args - Arguments to create a SpendPool.
     * @example
     * // Create one SpendPool
     * const SpendPool = await prisma.spendPool.create({
     *   data: {
     *     // ... data to create a SpendPool
     *   }
     * })
     * 
     */
    create<T extends SpendPoolCreateArgs>(args: SelectSubset<T, SpendPoolCreateArgs<ExtArgs>>): Prisma__SpendPoolClient<$Result.GetResult<Prisma.$SpendPoolPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SpendPools.
     * @param {SpendPoolCreateManyArgs} args - Arguments to create many SpendPools.
     * @example
     * // Create many SpendPools
     * const spendPool = await prisma.spendPool.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SpendPoolCreateManyArgs>(args?: SelectSubset<T, SpendPoolCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SpendPools and returns the data saved in the database.
     * @param {SpendPoolCreateManyAndReturnArgs} args - Arguments to create many SpendPools.
     * @example
     * // Create many SpendPools
     * const spendPool = await prisma.spendPool.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SpendPools and only return the `id`
     * const spendPoolWithIdOnly = await prisma.spendPool.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SpendPoolCreateManyAndReturnArgs>(args?: SelectSubset<T, SpendPoolCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SpendPoolPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SpendPool.
     * @param {SpendPoolDeleteArgs} args - Arguments to delete one SpendPool.
     * @example
     * // Delete one SpendPool
     * const SpendPool = await prisma.spendPool.delete({
     *   where: {
     *     // ... filter to delete one SpendPool
     *   }
     * })
     * 
     */
    delete<T extends SpendPoolDeleteArgs>(args: SelectSubset<T, SpendPoolDeleteArgs<ExtArgs>>): Prisma__SpendPoolClient<$Result.GetResult<Prisma.$SpendPoolPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SpendPool.
     * @param {SpendPoolUpdateArgs} args - Arguments to update one SpendPool.
     * @example
     * // Update one SpendPool
     * const spendPool = await prisma.spendPool.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SpendPoolUpdateArgs>(args: SelectSubset<T, SpendPoolUpdateArgs<ExtArgs>>): Prisma__SpendPoolClient<$Result.GetResult<Prisma.$SpendPoolPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SpendPools.
     * @param {SpendPoolDeleteManyArgs} args - Arguments to filter SpendPools to delete.
     * @example
     * // Delete a few SpendPools
     * const { count } = await prisma.spendPool.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SpendPoolDeleteManyArgs>(args?: SelectSubset<T, SpendPoolDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SpendPools.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpendPoolUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SpendPools
     * const spendPool = await prisma.spendPool.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SpendPoolUpdateManyArgs>(args: SelectSubset<T, SpendPoolUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SpendPools and returns the data updated in the database.
     * @param {SpendPoolUpdateManyAndReturnArgs} args - Arguments to update many SpendPools.
     * @example
     * // Update many SpendPools
     * const spendPool = await prisma.spendPool.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SpendPools and only return the `id`
     * const spendPoolWithIdOnly = await prisma.spendPool.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SpendPoolUpdateManyAndReturnArgs>(args: SelectSubset<T, SpendPoolUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SpendPoolPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SpendPool.
     * @param {SpendPoolUpsertArgs} args - Arguments to update or create a SpendPool.
     * @example
     * // Update or create a SpendPool
     * const spendPool = await prisma.spendPool.upsert({
     *   create: {
     *     // ... data to create a SpendPool
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SpendPool we want to update
     *   }
     * })
     */
    upsert<T extends SpendPoolUpsertArgs>(args: SelectSubset<T, SpendPoolUpsertArgs<ExtArgs>>): Prisma__SpendPoolClient<$Result.GetResult<Prisma.$SpendPoolPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SpendPools.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpendPoolCountArgs} args - Arguments to filter SpendPools to count.
     * @example
     * // Count the number of SpendPools
     * const count = await prisma.spendPool.count({
     *   where: {
     *     // ... the filter for the SpendPools we want to count
     *   }
     * })
    **/
    count<T extends SpendPoolCountArgs>(
      args?: Subset<T, SpendPoolCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SpendPoolCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SpendPool.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpendPoolAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SpendPoolAggregateArgs>(args: Subset<T, SpendPoolAggregateArgs>): Prisma.PrismaPromise<GetSpendPoolAggregateType<T>>

    /**
     * Group by SpendPool.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpendPoolGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SpendPoolGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SpendPoolGroupByArgs['orderBy'] }
        : { orderBy?: SpendPoolGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SpendPoolGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSpendPoolGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SpendPool model
   */
  readonly fields: SpendPoolFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SpendPool.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SpendPoolClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    payments<T extends SpendPool$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, SpendPool$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    echoApp<T extends EchoAppDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EchoAppDefaultArgs<ExtArgs>>): Prisma__EchoAppClient<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Transactions<T extends SpendPool$TransactionsArgs<ExtArgs> = {}>(args?: Subset<T, SpendPool$TransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userUsage<T extends SpendPool$userUsageArgs<ExtArgs> = {}>(args?: Subset<T, SpendPool$userUsageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSpendPoolUsagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SpendPool model
   */
  interface SpendPoolFieldRefs {
    readonly id: FieldRef<"SpendPool", 'String'>
    readonly name: FieldRef<"SpendPool", 'String'>
    readonly description: FieldRef<"SpendPool", 'String'>
    readonly totalPaid: FieldRef<"SpendPool", 'Decimal'>
    readonly perUserSpendLimit: FieldRef<"SpendPool", 'Decimal'>
    readonly totalSpent: FieldRef<"SpendPool", 'Decimal'>
    readonly isArchived: FieldRef<"SpendPool", 'Boolean'>
    readonly archivedAt: FieldRef<"SpendPool", 'DateTime'>
    readonly createdAt: FieldRef<"SpendPool", 'DateTime'>
    readonly updatedAt: FieldRef<"SpendPool", 'DateTime'>
    readonly echoAppId: FieldRef<"SpendPool", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SpendPool findUnique
   */
  export type SpendPoolFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpendPool
     */
    select?: SpendPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SpendPool
     */
    omit?: SpendPoolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpendPoolInclude<ExtArgs> | null
    /**
     * Filter, which SpendPool to fetch.
     */
    where: SpendPoolWhereUniqueInput
  }

  /**
   * SpendPool findUniqueOrThrow
   */
  export type SpendPoolFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpendPool
     */
    select?: SpendPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SpendPool
     */
    omit?: SpendPoolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpendPoolInclude<ExtArgs> | null
    /**
     * Filter, which SpendPool to fetch.
     */
    where: SpendPoolWhereUniqueInput
  }

  /**
   * SpendPool findFirst
   */
  export type SpendPoolFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpendPool
     */
    select?: SpendPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SpendPool
     */
    omit?: SpendPoolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpendPoolInclude<ExtArgs> | null
    /**
     * Filter, which SpendPool to fetch.
     */
    where?: SpendPoolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SpendPools to fetch.
     */
    orderBy?: SpendPoolOrderByWithRelationInput | SpendPoolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SpendPools.
     */
    cursor?: SpendPoolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SpendPools from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SpendPools.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SpendPools.
     */
    distinct?: SpendPoolScalarFieldEnum | SpendPoolScalarFieldEnum[]
  }

  /**
   * SpendPool findFirstOrThrow
   */
  export type SpendPoolFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpendPool
     */
    select?: SpendPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SpendPool
     */
    omit?: SpendPoolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpendPoolInclude<ExtArgs> | null
    /**
     * Filter, which SpendPool to fetch.
     */
    where?: SpendPoolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SpendPools to fetch.
     */
    orderBy?: SpendPoolOrderByWithRelationInput | SpendPoolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SpendPools.
     */
    cursor?: SpendPoolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SpendPools from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SpendPools.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SpendPools.
     */
    distinct?: SpendPoolScalarFieldEnum | SpendPoolScalarFieldEnum[]
  }

  /**
   * SpendPool findMany
   */
  export type SpendPoolFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpendPool
     */
    select?: SpendPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SpendPool
     */
    omit?: SpendPoolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpendPoolInclude<ExtArgs> | null
    /**
     * Filter, which SpendPools to fetch.
     */
    where?: SpendPoolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SpendPools to fetch.
     */
    orderBy?: SpendPoolOrderByWithRelationInput | SpendPoolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SpendPools.
     */
    cursor?: SpendPoolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SpendPools from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SpendPools.
     */
    skip?: number
    distinct?: SpendPoolScalarFieldEnum | SpendPoolScalarFieldEnum[]
  }

  /**
   * SpendPool create
   */
  export type SpendPoolCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpendPool
     */
    select?: SpendPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SpendPool
     */
    omit?: SpendPoolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpendPoolInclude<ExtArgs> | null
    /**
     * The data needed to create a SpendPool.
     */
    data: XOR<SpendPoolCreateInput, SpendPoolUncheckedCreateInput>
  }

  /**
   * SpendPool createMany
   */
  export type SpendPoolCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SpendPools.
     */
    data: SpendPoolCreateManyInput | SpendPoolCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SpendPool createManyAndReturn
   */
  export type SpendPoolCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpendPool
     */
    select?: SpendPoolSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SpendPool
     */
    omit?: SpendPoolOmit<ExtArgs> | null
    /**
     * The data used to create many SpendPools.
     */
    data: SpendPoolCreateManyInput | SpendPoolCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpendPoolIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SpendPool update
   */
  export type SpendPoolUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpendPool
     */
    select?: SpendPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SpendPool
     */
    omit?: SpendPoolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpendPoolInclude<ExtArgs> | null
    /**
     * The data needed to update a SpendPool.
     */
    data: XOR<SpendPoolUpdateInput, SpendPoolUncheckedUpdateInput>
    /**
     * Choose, which SpendPool to update.
     */
    where: SpendPoolWhereUniqueInput
  }

  /**
   * SpendPool updateMany
   */
  export type SpendPoolUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SpendPools.
     */
    data: XOR<SpendPoolUpdateManyMutationInput, SpendPoolUncheckedUpdateManyInput>
    /**
     * Filter which SpendPools to update
     */
    where?: SpendPoolWhereInput
    /**
     * Limit how many SpendPools to update.
     */
    limit?: number
  }

  /**
   * SpendPool updateManyAndReturn
   */
  export type SpendPoolUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpendPool
     */
    select?: SpendPoolSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SpendPool
     */
    omit?: SpendPoolOmit<ExtArgs> | null
    /**
     * The data used to update SpendPools.
     */
    data: XOR<SpendPoolUpdateManyMutationInput, SpendPoolUncheckedUpdateManyInput>
    /**
     * Filter which SpendPools to update
     */
    where?: SpendPoolWhereInput
    /**
     * Limit how many SpendPools to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpendPoolIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SpendPool upsert
   */
  export type SpendPoolUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpendPool
     */
    select?: SpendPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SpendPool
     */
    omit?: SpendPoolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpendPoolInclude<ExtArgs> | null
    /**
     * The filter to search for the SpendPool to update in case it exists.
     */
    where: SpendPoolWhereUniqueInput
    /**
     * In case the SpendPool found by the `where` argument doesn't exist, create a new SpendPool with this data.
     */
    create: XOR<SpendPoolCreateInput, SpendPoolUncheckedCreateInput>
    /**
     * In case the SpendPool was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SpendPoolUpdateInput, SpendPoolUncheckedUpdateInput>
  }

  /**
   * SpendPool delete
   */
  export type SpendPoolDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpendPool
     */
    select?: SpendPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SpendPool
     */
    omit?: SpendPoolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpendPoolInclude<ExtArgs> | null
    /**
     * Filter which SpendPool to delete.
     */
    where: SpendPoolWhereUniqueInput
  }

  /**
   * SpendPool deleteMany
   */
  export type SpendPoolDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SpendPools to delete
     */
    where?: SpendPoolWhereInput
    /**
     * Limit how many SpendPools to delete.
     */
    limit?: number
  }

  /**
   * SpendPool.payments
   */
  export type SpendPool$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    cursor?: PaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * SpendPool.Transactions
   */
  export type SpendPool$TransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    where?: TransactionWhereInput
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    cursor?: TransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * SpendPool.userUsage
   */
  export type SpendPool$userUsageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSpendPoolUsage
     */
    select?: UserSpendPoolUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSpendPoolUsage
     */
    omit?: UserSpendPoolUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSpendPoolUsageInclude<ExtArgs> | null
    where?: UserSpendPoolUsageWhereInput
    orderBy?: UserSpendPoolUsageOrderByWithRelationInput | UserSpendPoolUsageOrderByWithRelationInput[]
    cursor?: UserSpendPoolUsageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserSpendPoolUsageScalarFieldEnum | UserSpendPoolUsageScalarFieldEnum[]
  }

  /**
   * SpendPool without action
   */
  export type SpendPoolDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpendPool
     */
    select?: SpendPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SpendPool
     */
    omit?: SpendPoolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpendPoolInclude<ExtArgs> | null
  }


  /**
   * Model UserSpendPoolUsage
   */

  export type AggregateUserSpendPoolUsage = {
    _count: UserSpendPoolUsageCountAggregateOutputType | null
    _avg: UserSpendPoolUsageAvgAggregateOutputType | null
    _sum: UserSpendPoolUsageSumAggregateOutputType | null
    _min: UserSpendPoolUsageMinAggregateOutputType | null
    _max: UserSpendPoolUsageMaxAggregateOutputType | null
  }

  export type UserSpendPoolUsageAvgAggregateOutputType = {
    totalSpent: Decimal | null
  }

  export type UserSpendPoolUsageSumAggregateOutputType = {
    totalSpent: Decimal | null
  }

  export type UserSpendPoolUsageMinAggregateOutputType = {
    id: string | null
    userId: string | null
    spendPoolId: string | null
    totalSpent: Decimal | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserSpendPoolUsageMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    spendPoolId: string | null
    totalSpent: Decimal | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserSpendPoolUsageCountAggregateOutputType = {
    id: number
    userId: number
    spendPoolId: number
    totalSpent: number
    isArchived: number
    archivedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserSpendPoolUsageAvgAggregateInputType = {
    totalSpent?: true
  }

  export type UserSpendPoolUsageSumAggregateInputType = {
    totalSpent?: true
  }

  export type UserSpendPoolUsageMinAggregateInputType = {
    id?: true
    userId?: true
    spendPoolId?: true
    totalSpent?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserSpendPoolUsageMaxAggregateInputType = {
    id?: true
    userId?: true
    spendPoolId?: true
    totalSpent?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserSpendPoolUsageCountAggregateInputType = {
    id?: true
    userId?: true
    spendPoolId?: true
    totalSpent?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserSpendPoolUsageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSpendPoolUsage to aggregate.
     */
    where?: UserSpendPoolUsageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSpendPoolUsages to fetch.
     */
    orderBy?: UserSpendPoolUsageOrderByWithRelationInput | UserSpendPoolUsageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserSpendPoolUsageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSpendPoolUsages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSpendPoolUsages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserSpendPoolUsages
    **/
    _count?: true | UserSpendPoolUsageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserSpendPoolUsageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSpendPoolUsageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserSpendPoolUsageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserSpendPoolUsageMaxAggregateInputType
  }

  export type GetUserSpendPoolUsageAggregateType<T extends UserSpendPoolUsageAggregateArgs> = {
        [P in keyof T & keyof AggregateUserSpendPoolUsage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserSpendPoolUsage[P]>
      : GetScalarType<T[P], AggregateUserSpendPoolUsage[P]>
  }




  export type UserSpendPoolUsageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSpendPoolUsageWhereInput
    orderBy?: UserSpendPoolUsageOrderByWithAggregationInput | UserSpendPoolUsageOrderByWithAggregationInput[]
    by: UserSpendPoolUsageScalarFieldEnum[] | UserSpendPoolUsageScalarFieldEnum
    having?: UserSpendPoolUsageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserSpendPoolUsageCountAggregateInputType | true
    _avg?: UserSpendPoolUsageAvgAggregateInputType
    _sum?: UserSpendPoolUsageSumAggregateInputType
    _min?: UserSpendPoolUsageMinAggregateInputType
    _max?: UserSpendPoolUsageMaxAggregateInputType
  }

  export type UserSpendPoolUsageGroupByOutputType = {
    id: string
    userId: string
    spendPoolId: string
    totalSpent: Decimal
    isArchived: boolean
    archivedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: UserSpendPoolUsageCountAggregateOutputType | null
    _avg: UserSpendPoolUsageAvgAggregateOutputType | null
    _sum: UserSpendPoolUsageSumAggregateOutputType | null
    _min: UserSpendPoolUsageMinAggregateOutputType | null
    _max: UserSpendPoolUsageMaxAggregateOutputType | null
  }

  type GetUserSpendPoolUsageGroupByPayload<T extends UserSpendPoolUsageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserSpendPoolUsageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserSpendPoolUsageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserSpendPoolUsageGroupByOutputType[P]>
            : GetScalarType<T[P], UserSpendPoolUsageGroupByOutputType[P]>
        }
      >
    >


  export type UserSpendPoolUsageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    spendPoolId?: boolean
    totalSpent?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Transactions?: boolean | UserSpendPoolUsage$TransactionsArgs<ExtArgs>
    spendPool?: boolean | SpendPoolDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | UserSpendPoolUsageCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSpendPoolUsage"]>

  export type UserSpendPoolUsageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    spendPoolId?: boolean
    totalSpent?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    spendPool?: boolean | SpendPoolDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSpendPoolUsage"]>

  export type UserSpendPoolUsageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    spendPoolId?: boolean
    totalSpent?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    spendPool?: boolean | SpendPoolDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSpendPoolUsage"]>

  export type UserSpendPoolUsageSelectScalar = {
    id?: boolean
    userId?: boolean
    spendPoolId?: boolean
    totalSpent?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserSpendPoolUsageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "spendPoolId" | "totalSpent" | "isArchived" | "archivedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["userSpendPoolUsage"]>
  export type UserSpendPoolUsageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Transactions?: boolean | UserSpendPoolUsage$TransactionsArgs<ExtArgs>
    spendPool?: boolean | SpendPoolDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | UserSpendPoolUsageCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserSpendPoolUsageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    spendPool?: boolean | SpendPoolDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserSpendPoolUsageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    spendPool?: boolean | SpendPoolDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserSpendPoolUsagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserSpendPoolUsage"
    objects: {
      Transactions: Prisma.$TransactionPayload<ExtArgs>[]
      spendPool: Prisma.$SpendPoolPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      spendPoolId: string
      totalSpent: Prisma.Decimal
      isArchived: boolean
      archivedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["userSpendPoolUsage"]>
    composites: {}
  }

  type UserSpendPoolUsageGetPayload<S extends boolean | null | undefined | UserSpendPoolUsageDefaultArgs> = $Result.GetResult<Prisma.$UserSpendPoolUsagePayload, S>

  type UserSpendPoolUsageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserSpendPoolUsageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserSpendPoolUsageCountAggregateInputType | true
    }

  export interface UserSpendPoolUsageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserSpendPoolUsage'], meta: { name: 'UserSpendPoolUsage' } }
    /**
     * Find zero or one UserSpendPoolUsage that matches the filter.
     * @param {UserSpendPoolUsageFindUniqueArgs} args - Arguments to find a UserSpendPoolUsage
     * @example
     * // Get one UserSpendPoolUsage
     * const userSpendPoolUsage = await prisma.userSpendPoolUsage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserSpendPoolUsageFindUniqueArgs>(args: SelectSubset<T, UserSpendPoolUsageFindUniqueArgs<ExtArgs>>): Prisma__UserSpendPoolUsageClient<$Result.GetResult<Prisma.$UserSpendPoolUsagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserSpendPoolUsage that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserSpendPoolUsageFindUniqueOrThrowArgs} args - Arguments to find a UserSpendPoolUsage
     * @example
     * // Get one UserSpendPoolUsage
     * const userSpendPoolUsage = await prisma.userSpendPoolUsage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserSpendPoolUsageFindUniqueOrThrowArgs>(args: SelectSubset<T, UserSpendPoolUsageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserSpendPoolUsageClient<$Result.GetResult<Prisma.$UserSpendPoolUsagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserSpendPoolUsage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSpendPoolUsageFindFirstArgs} args - Arguments to find a UserSpendPoolUsage
     * @example
     * // Get one UserSpendPoolUsage
     * const userSpendPoolUsage = await prisma.userSpendPoolUsage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserSpendPoolUsageFindFirstArgs>(args?: SelectSubset<T, UserSpendPoolUsageFindFirstArgs<ExtArgs>>): Prisma__UserSpendPoolUsageClient<$Result.GetResult<Prisma.$UserSpendPoolUsagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserSpendPoolUsage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSpendPoolUsageFindFirstOrThrowArgs} args - Arguments to find a UserSpendPoolUsage
     * @example
     * // Get one UserSpendPoolUsage
     * const userSpendPoolUsage = await prisma.userSpendPoolUsage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserSpendPoolUsageFindFirstOrThrowArgs>(args?: SelectSubset<T, UserSpendPoolUsageFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserSpendPoolUsageClient<$Result.GetResult<Prisma.$UserSpendPoolUsagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserSpendPoolUsages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSpendPoolUsageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserSpendPoolUsages
     * const userSpendPoolUsages = await prisma.userSpendPoolUsage.findMany()
     * 
     * // Get first 10 UserSpendPoolUsages
     * const userSpendPoolUsages = await prisma.userSpendPoolUsage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userSpendPoolUsageWithIdOnly = await prisma.userSpendPoolUsage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserSpendPoolUsageFindManyArgs>(args?: SelectSubset<T, UserSpendPoolUsageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSpendPoolUsagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserSpendPoolUsage.
     * @param {UserSpendPoolUsageCreateArgs} args - Arguments to create a UserSpendPoolUsage.
     * @example
     * // Create one UserSpendPoolUsage
     * const UserSpendPoolUsage = await prisma.userSpendPoolUsage.create({
     *   data: {
     *     // ... data to create a UserSpendPoolUsage
     *   }
     * })
     * 
     */
    create<T extends UserSpendPoolUsageCreateArgs>(args: SelectSubset<T, UserSpendPoolUsageCreateArgs<ExtArgs>>): Prisma__UserSpendPoolUsageClient<$Result.GetResult<Prisma.$UserSpendPoolUsagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserSpendPoolUsages.
     * @param {UserSpendPoolUsageCreateManyArgs} args - Arguments to create many UserSpendPoolUsages.
     * @example
     * // Create many UserSpendPoolUsages
     * const userSpendPoolUsage = await prisma.userSpendPoolUsage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserSpendPoolUsageCreateManyArgs>(args?: SelectSubset<T, UserSpendPoolUsageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserSpendPoolUsages and returns the data saved in the database.
     * @param {UserSpendPoolUsageCreateManyAndReturnArgs} args - Arguments to create many UserSpendPoolUsages.
     * @example
     * // Create many UserSpendPoolUsages
     * const userSpendPoolUsage = await prisma.userSpendPoolUsage.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserSpendPoolUsages and only return the `id`
     * const userSpendPoolUsageWithIdOnly = await prisma.userSpendPoolUsage.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserSpendPoolUsageCreateManyAndReturnArgs>(args?: SelectSubset<T, UserSpendPoolUsageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSpendPoolUsagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UserSpendPoolUsage.
     * @param {UserSpendPoolUsageDeleteArgs} args - Arguments to delete one UserSpendPoolUsage.
     * @example
     * // Delete one UserSpendPoolUsage
     * const UserSpendPoolUsage = await prisma.userSpendPoolUsage.delete({
     *   where: {
     *     // ... filter to delete one UserSpendPoolUsage
     *   }
     * })
     * 
     */
    delete<T extends UserSpendPoolUsageDeleteArgs>(args: SelectSubset<T, UserSpendPoolUsageDeleteArgs<ExtArgs>>): Prisma__UserSpendPoolUsageClient<$Result.GetResult<Prisma.$UserSpendPoolUsagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserSpendPoolUsage.
     * @param {UserSpendPoolUsageUpdateArgs} args - Arguments to update one UserSpendPoolUsage.
     * @example
     * // Update one UserSpendPoolUsage
     * const userSpendPoolUsage = await prisma.userSpendPoolUsage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserSpendPoolUsageUpdateArgs>(args: SelectSubset<T, UserSpendPoolUsageUpdateArgs<ExtArgs>>): Prisma__UserSpendPoolUsageClient<$Result.GetResult<Prisma.$UserSpendPoolUsagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserSpendPoolUsages.
     * @param {UserSpendPoolUsageDeleteManyArgs} args - Arguments to filter UserSpendPoolUsages to delete.
     * @example
     * // Delete a few UserSpendPoolUsages
     * const { count } = await prisma.userSpendPoolUsage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserSpendPoolUsageDeleteManyArgs>(args?: SelectSubset<T, UserSpendPoolUsageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserSpendPoolUsages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSpendPoolUsageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserSpendPoolUsages
     * const userSpendPoolUsage = await prisma.userSpendPoolUsage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserSpendPoolUsageUpdateManyArgs>(args: SelectSubset<T, UserSpendPoolUsageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserSpendPoolUsages and returns the data updated in the database.
     * @param {UserSpendPoolUsageUpdateManyAndReturnArgs} args - Arguments to update many UserSpendPoolUsages.
     * @example
     * // Update many UserSpendPoolUsages
     * const userSpendPoolUsage = await prisma.userSpendPoolUsage.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UserSpendPoolUsages and only return the `id`
     * const userSpendPoolUsageWithIdOnly = await prisma.userSpendPoolUsage.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserSpendPoolUsageUpdateManyAndReturnArgs>(args: SelectSubset<T, UserSpendPoolUsageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSpendPoolUsagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UserSpendPoolUsage.
     * @param {UserSpendPoolUsageUpsertArgs} args - Arguments to update or create a UserSpendPoolUsage.
     * @example
     * // Update or create a UserSpendPoolUsage
     * const userSpendPoolUsage = await prisma.userSpendPoolUsage.upsert({
     *   create: {
     *     // ... data to create a UserSpendPoolUsage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserSpendPoolUsage we want to update
     *   }
     * })
     */
    upsert<T extends UserSpendPoolUsageUpsertArgs>(args: SelectSubset<T, UserSpendPoolUsageUpsertArgs<ExtArgs>>): Prisma__UserSpendPoolUsageClient<$Result.GetResult<Prisma.$UserSpendPoolUsagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserSpendPoolUsages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSpendPoolUsageCountArgs} args - Arguments to filter UserSpendPoolUsages to count.
     * @example
     * // Count the number of UserSpendPoolUsages
     * const count = await prisma.userSpendPoolUsage.count({
     *   where: {
     *     // ... the filter for the UserSpendPoolUsages we want to count
     *   }
     * })
    **/
    count<T extends UserSpendPoolUsageCountArgs>(
      args?: Subset<T, UserSpendPoolUsageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserSpendPoolUsageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserSpendPoolUsage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSpendPoolUsageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserSpendPoolUsageAggregateArgs>(args: Subset<T, UserSpendPoolUsageAggregateArgs>): Prisma.PrismaPromise<GetUserSpendPoolUsageAggregateType<T>>

    /**
     * Group by UserSpendPoolUsage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSpendPoolUsageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserSpendPoolUsageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserSpendPoolUsageGroupByArgs['orderBy'] }
        : { orderBy?: UserSpendPoolUsageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserSpendPoolUsageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserSpendPoolUsageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserSpendPoolUsage model
   */
  readonly fields: UserSpendPoolUsageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserSpendPoolUsage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserSpendPoolUsageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Transactions<T extends UserSpendPoolUsage$TransactionsArgs<ExtArgs> = {}>(args?: Subset<T, UserSpendPoolUsage$TransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    spendPool<T extends SpendPoolDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SpendPoolDefaultArgs<ExtArgs>>): Prisma__SpendPoolClient<$Result.GetResult<Prisma.$SpendPoolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserSpendPoolUsage model
   */
  interface UserSpendPoolUsageFieldRefs {
    readonly id: FieldRef<"UserSpendPoolUsage", 'String'>
    readonly userId: FieldRef<"UserSpendPoolUsage", 'String'>
    readonly spendPoolId: FieldRef<"UserSpendPoolUsage", 'String'>
    readonly totalSpent: FieldRef<"UserSpendPoolUsage", 'Decimal'>
    readonly isArchived: FieldRef<"UserSpendPoolUsage", 'Boolean'>
    readonly archivedAt: FieldRef<"UserSpendPoolUsage", 'DateTime'>
    readonly createdAt: FieldRef<"UserSpendPoolUsage", 'DateTime'>
    readonly updatedAt: FieldRef<"UserSpendPoolUsage", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserSpendPoolUsage findUnique
   */
  export type UserSpendPoolUsageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSpendPoolUsage
     */
    select?: UserSpendPoolUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSpendPoolUsage
     */
    omit?: UserSpendPoolUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSpendPoolUsageInclude<ExtArgs> | null
    /**
     * Filter, which UserSpendPoolUsage to fetch.
     */
    where: UserSpendPoolUsageWhereUniqueInput
  }

  /**
   * UserSpendPoolUsage findUniqueOrThrow
   */
  export type UserSpendPoolUsageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSpendPoolUsage
     */
    select?: UserSpendPoolUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSpendPoolUsage
     */
    omit?: UserSpendPoolUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSpendPoolUsageInclude<ExtArgs> | null
    /**
     * Filter, which UserSpendPoolUsage to fetch.
     */
    where: UserSpendPoolUsageWhereUniqueInput
  }

  /**
   * UserSpendPoolUsage findFirst
   */
  export type UserSpendPoolUsageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSpendPoolUsage
     */
    select?: UserSpendPoolUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSpendPoolUsage
     */
    omit?: UserSpendPoolUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSpendPoolUsageInclude<ExtArgs> | null
    /**
     * Filter, which UserSpendPoolUsage to fetch.
     */
    where?: UserSpendPoolUsageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSpendPoolUsages to fetch.
     */
    orderBy?: UserSpendPoolUsageOrderByWithRelationInput | UserSpendPoolUsageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSpendPoolUsages.
     */
    cursor?: UserSpendPoolUsageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSpendPoolUsages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSpendPoolUsages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSpendPoolUsages.
     */
    distinct?: UserSpendPoolUsageScalarFieldEnum | UserSpendPoolUsageScalarFieldEnum[]
  }

  /**
   * UserSpendPoolUsage findFirstOrThrow
   */
  export type UserSpendPoolUsageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSpendPoolUsage
     */
    select?: UserSpendPoolUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSpendPoolUsage
     */
    omit?: UserSpendPoolUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSpendPoolUsageInclude<ExtArgs> | null
    /**
     * Filter, which UserSpendPoolUsage to fetch.
     */
    where?: UserSpendPoolUsageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSpendPoolUsages to fetch.
     */
    orderBy?: UserSpendPoolUsageOrderByWithRelationInput | UserSpendPoolUsageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSpendPoolUsages.
     */
    cursor?: UserSpendPoolUsageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSpendPoolUsages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSpendPoolUsages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSpendPoolUsages.
     */
    distinct?: UserSpendPoolUsageScalarFieldEnum | UserSpendPoolUsageScalarFieldEnum[]
  }

  /**
   * UserSpendPoolUsage findMany
   */
  export type UserSpendPoolUsageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSpendPoolUsage
     */
    select?: UserSpendPoolUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSpendPoolUsage
     */
    omit?: UserSpendPoolUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSpendPoolUsageInclude<ExtArgs> | null
    /**
     * Filter, which UserSpendPoolUsages to fetch.
     */
    where?: UserSpendPoolUsageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSpendPoolUsages to fetch.
     */
    orderBy?: UserSpendPoolUsageOrderByWithRelationInput | UserSpendPoolUsageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserSpendPoolUsages.
     */
    cursor?: UserSpendPoolUsageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSpendPoolUsages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSpendPoolUsages.
     */
    skip?: number
    distinct?: UserSpendPoolUsageScalarFieldEnum | UserSpendPoolUsageScalarFieldEnum[]
  }

  /**
   * UserSpendPoolUsage create
   */
  export type UserSpendPoolUsageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSpendPoolUsage
     */
    select?: UserSpendPoolUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSpendPoolUsage
     */
    omit?: UserSpendPoolUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSpendPoolUsageInclude<ExtArgs> | null
    /**
     * The data needed to create a UserSpendPoolUsage.
     */
    data: XOR<UserSpendPoolUsageCreateInput, UserSpendPoolUsageUncheckedCreateInput>
  }

  /**
   * UserSpendPoolUsage createMany
   */
  export type UserSpendPoolUsageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserSpendPoolUsages.
     */
    data: UserSpendPoolUsageCreateManyInput | UserSpendPoolUsageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserSpendPoolUsage createManyAndReturn
   */
  export type UserSpendPoolUsageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSpendPoolUsage
     */
    select?: UserSpendPoolUsageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserSpendPoolUsage
     */
    omit?: UserSpendPoolUsageOmit<ExtArgs> | null
    /**
     * The data used to create many UserSpendPoolUsages.
     */
    data: UserSpendPoolUsageCreateManyInput | UserSpendPoolUsageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSpendPoolUsageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserSpendPoolUsage update
   */
  export type UserSpendPoolUsageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSpendPoolUsage
     */
    select?: UserSpendPoolUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSpendPoolUsage
     */
    omit?: UserSpendPoolUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSpendPoolUsageInclude<ExtArgs> | null
    /**
     * The data needed to update a UserSpendPoolUsage.
     */
    data: XOR<UserSpendPoolUsageUpdateInput, UserSpendPoolUsageUncheckedUpdateInput>
    /**
     * Choose, which UserSpendPoolUsage to update.
     */
    where: UserSpendPoolUsageWhereUniqueInput
  }

  /**
   * UserSpendPoolUsage updateMany
   */
  export type UserSpendPoolUsageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserSpendPoolUsages.
     */
    data: XOR<UserSpendPoolUsageUpdateManyMutationInput, UserSpendPoolUsageUncheckedUpdateManyInput>
    /**
     * Filter which UserSpendPoolUsages to update
     */
    where?: UserSpendPoolUsageWhereInput
    /**
     * Limit how many UserSpendPoolUsages to update.
     */
    limit?: number
  }

  /**
   * UserSpendPoolUsage updateManyAndReturn
   */
  export type UserSpendPoolUsageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSpendPoolUsage
     */
    select?: UserSpendPoolUsageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserSpendPoolUsage
     */
    omit?: UserSpendPoolUsageOmit<ExtArgs> | null
    /**
     * The data used to update UserSpendPoolUsages.
     */
    data: XOR<UserSpendPoolUsageUpdateManyMutationInput, UserSpendPoolUsageUncheckedUpdateManyInput>
    /**
     * Filter which UserSpendPoolUsages to update
     */
    where?: UserSpendPoolUsageWhereInput
    /**
     * Limit how many UserSpendPoolUsages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSpendPoolUsageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserSpendPoolUsage upsert
   */
  export type UserSpendPoolUsageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSpendPoolUsage
     */
    select?: UserSpendPoolUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSpendPoolUsage
     */
    omit?: UserSpendPoolUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSpendPoolUsageInclude<ExtArgs> | null
    /**
     * The filter to search for the UserSpendPoolUsage to update in case it exists.
     */
    where: UserSpendPoolUsageWhereUniqueInput
    /**
     * In case the UserSpendPoolUsage found by the `where` argument doesn't exist, create a new UserSpendPoolUsage with this data.
     */
    create: XOR<UserSpendPoolUsageCreateInput, UserSpendPoolUsageUncheckedCreateInput>
    /**
     * In case the UserSpendPoolUsage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserSpendPoolUsageUpdateInput, UserSpendPoolUsageUncheckedUpdateInput>
  }

  /**
   * UserSpendPoolUsage delete
   */
  export type UserSpendPoolUsageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSpendPoolUsage
     */
    select?: UserSpendPoolUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSpendPoolUsage
     */
    omit?: UserSpendPoolUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSpendPoolUsageInclude<ExtArgs> | null
    /**
     * Filter which UserSpendPoolUsage to delete.
     */
    where: UserSpendPoolUsageWhereUniqueInput
  }

  /**
   * UserSpendPoolUsage deleteMany
   */
  export type UserSpendPoolUsageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSpendPoolUsages to delete
     */
    where?: UserSpendPoolUsageWhereInput
    /**
     * Limit how many UserSpendPoolUsages to delete.
     */
    limit?: number
  }

  /**
   * UserSpendPoolUsage.Transactions
   */
  export type UserSpendPoolUsage$TransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    where?: TransactionWhereInput
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    cursor?: TransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * UserSpendPoolUsage without action
   */
  export type UserSpendPoolUsageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSpendPoolUsage
     */
    select?: UserSpendPoolUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSpendPoolUsage
     */
    omit?: UserSpendPoolUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSpendPoolUsageInclude<ExtArgs> | null
  }


  /**
   * Model TransactionMetadata
   */

  export type AggregateTransactionMetadata = {
    _count: TransactionMetadataCountAggregateOutputType | null
    _avg: TransactionMetadataAvgAggregateOutputType | null
    _sum: TransactionMetadataSumAggregateOutputType | null
    _min: TransactionMetadataMinAggregateOutputType | null
    _max: TransactionMetadataMaxAggregateOutputType | null
  }

  export type TransactionMetadataAvgAggregateOutputType = {
    inputTokens: number | null
    outputTokens: number | null
    totalTokens: number | null
    toolCost: Decimal | null
  }

  export type TransactionMetadataSumAggregateOutputType = {
    inputTokens: number | null
    outputTokens: number | null
    totalTokens: number | null
    toolCost: Decimal | null
  }

  export type TransactionMetadataMinAggregateOutputType = {
    id: string | null
    providerId: string | null
    provider: string | null
    model: string | null
    inputTokens: number | null
    outputTokens: number | null
    totalTokens: number | null
    toolCost: Decimal | null
    prompt: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TransactionMetadataMaxAggregateOutputType = {
    id: string | null
    providerId: string | null
    provider: string | null
    model: string | null
    inputTokens: number | null
    outputTokens: number | null
    totalTokens: number | null
    toolCost: Decimal | null
    prompt: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TransactionMetadataCountAggregateOutputType = {
    id: number
    providerId: number
    provider: number
    model: number
    inputTokens: number
    outputTokens: number
    totalTokens: number
    toolCost: number
    prompt: number
    isArchived: number
    archivedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type TransactionMetadataAvgAggregateInputType = {
    inputTokens?: true
    outputTokens?: true
    totalTokens?: true
    toolCost?: true
  }

  export type TransactionMetadataSumAggregateInputType = {
    inputTokens?: true
    outputTokens?: true
    totalTokens?: true
    toolCost?: true
  }

  export type TransactionMetadataMinAggregateInputType = {
    id?: true
    providerId?: true
    provider?: true
    model?: true
    inputTokens?: true
    outputTokens?: true
    totalTokens?: true
    toolCost?: true
    prompt?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TransactionMetadataMaxAggregateInputType = {
    id?: true
    providerId?: true
    provider?: true
    model?: true
    inputTokens?: true
    outputTokens?: true
    totalTokens?: true
    toolCost?: true
    prompt?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TransactionMetadataCountAggregateInputType = {
    id?: true
    providerId?: true
    provider?: true
    model?: true
    inputTokens?: true
    outputTokens?: true
    totalTokens?: true
    toolCost?: true
    prompt?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type TransactionMetadataAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TransactionMetadata to aggregate.
     */
    where?: TransactionMetadataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransactionMetadata to fetch.
     */
    orderBy?: TransactionMetadataOrderByWithRelationInput | TransactionMetadataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TransactionMetadataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransactionMetadata from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransactionMetadata.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TransactionMetadata
    **/
    _count?: true | TransactionMetadataCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransactionMetadataAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransactionMetadataSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransactionMetadataMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransactionMetadataMaxAggregateInputType
  }

  export type GetTransactionMetadataAggregateType<T extends TransactionMetadataAggregateArgs> = {
        [P in keyof T & keyof AggregateTransactionMetadata]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransactionMetadata[P]>
      : GetScalarType<T[P], AggregateTransactionMetadata[P]>
  }




  export type TransactionMetadataGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionMetadataWhereInput
    orderBy?: TransactionMetadataOrderByWithAggregationInput | TransactionMetadataOrderByWithAggregationInput[]
    by: TransactionMetadataScalarFieldEnum[] | TransactionMetadataScalarFieldEnum
    having?: TransactionMetadataScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransactionMetadataCountAggregateInputType | true
    _avg?: TransactionMetadataAvgAggregateInputType
    _sum?: TransactionMetadataSumAggregateInputType
    _min?: TransactionMetadataMinAggregateInputType
    _max?: TransactionMetadataMaxAggregateInputType
  }

  export type TransactionMetadataGroupByOutputType = {
    id: string
    providerId: string
    provider: string
    model: string
    inputTokens: number
    outputTokens: number
    totalTokens: number
    toolCost: Decimal
    prompt: string | null
    isArchived: boolean
    archivedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: TransactionMetadataCountAggregateOutputType | null
    _avg: TransactionMetadataAvgAggregateOutputType | null
    _sum: TransactionMetadataSumAggregateOutputType | null
    _min: TransactionMetadataMinAggregateOutputType | null
    _max: TransactionMetadataMaxAggregateOutputType | null
  }

  type GetTransactionMetadataGroupByPayload<T extends TransactionMetadataGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransactionMetadataGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransactionMetadataGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransactionMetadataGroupByOutputType[P]>
            : GetScalarType<T[P], TransactionMetadataGroupByOutputType[P]>
        }
      >
    >


  export type TransactionMetadataSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    providerId?: boolean
    provider?: boolean
    model?: boolean
    inputTokens?: boolean
    outputTokens?: boolean
    totalTokens?: boolean
    toolCost?: boolean
    prompt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    transactions?: boolean | TransactionMetadata$transactionsArgs<ExtArgs>
    _count?: boolean | TransactionMetadataCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transactionMetadata"]>

  export type TransactionMetadataSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    providerId?: boolean
    provider?: boolean
    model?: boolean
    inputTokens?: boolean
    outputTokens?: boolean
    totalTokens?: boolean
    toolCost?: boolean
    prompt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["transactionMetadata"]>

  export type TransactionMetadataSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    providerId?: boolean
    provider?: boolean
    model?: boolean
    inputTokens?: boolean
    outputTokens?: boolean
    totalTokens?: boolean
    toolCost?: boolean
    prompt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["transactionMetadata"]>

  export type TransactionMetadataSelectScalar = {
    id?: boolean
    providerId?: boolean
    provider?: boolean
    model?: boolean
    inputTokens?: boolean
    outputTokens?: boolean
    totalTokens?: boolean
    toolCost?: boolean
    prompt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type TransactionMetadataOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "providerId" | "provider" | "model" | "inputTokens" | "outputTokens" | "totalTokens" | "toolCost" | "prompt" | "isArchived" | "archivedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["transactionMetadata"]>
  export type TransactionMetadataInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transactions?: boolean | TransactionMetadata$transactionsArgs<ExtArgs>
    _count?: boolean | TransactionMetadataCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TransactionMetadataIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type TransactionMetadataIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $TransactionMetadataPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TransactionMetadata"
    objects: {
      transactions: Prisma.$TransactionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      providerId: string
      provider: string
      model: string
      inputTokens: number
      outputTokens: number
      totalTokens: number
      toolCost: Prisma.Decimal
      prompt: string | null
      isArchived: boolean
      archivedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["transactionMetadata"]>
    composites: {}
  }

  type TransactionMetadataGetPayload<S extends boolean | null | undefined | TransactionMetadataDefaultArgs> = $Result.GetResult<Prisma.$TransactionMetadataPayload, S>

  type TransactionMetadataCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TransactionMetadataFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransactionMetadataCountAggregateInputType | true
    }

  export interface TransactionMetadataDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TransactionMetadata'], meta: { name: 'TransactionMetadata' } }
    /**
     * Find zero or one TransactionMetadata that matches the filter.
     * @param {TransactionMetadataFindUniqueArgs} args - Arguments to find a TransactionMetadata
     * @example
     * // Get one TransactionMetadata
     * const transactionMetadata = await prisma.transactionMetadata.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TransactionMetadataFindUniqueArgs>(args: SelectSubset<T, TransactionMetadataFindUniqueArgs<ExtArgs>>): Prisma__TransactionMetadataClient<$Result.GetResult<Prisma.$TransactionMetadataPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TransactionMetadata that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TransactionMetadataFindUniqueOrThrowArgs} args - Arguments to find a TransactionMetadata
     * @example
     * // Get one TransactionMetadata
     * const transactionMetadata = await prisma.transactionMetadata.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TransactionMetadataFindUniqueOrThrowArgs>(args: SelectSubset<T, TransactionMetadataFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TransactionMetadataClient<$Result.GetResult<Prisma.$TransactionMetadataPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TransactionMetadata that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionMetadataFindFirstArgs} args - Arguments to find a TransactionMetadata
     * @example
     * // Get one TransactionMetadata
     * const transactionMetadata = await prisma.transactionMetadata.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TransactionMetadataFindFirstArgs>(args?: SelectSubset<T, TransactionMetadataFindFirstArgs<ExtArgs>>): Prisma__TransactionMetadataClient<$Result.GetResult<Prisma.$TransactionMetadataPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TransactionMetadata that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionMetadataFindFirstOrThrowArgs} args - Arguments to find a TransactionMetadata
     * @example
     * // Get one TransactionMetadata
     * const transactionMetadata = await prisma.transactionMetadata.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TransactionMetadataFindFirstOrThrowArgs>(args?: SelectSubset<T, TransactionMetadataFindFirstOrThrowArgs<ExtArgs>>): Prisma__TransactionMetadataClient<$Result.GetResult<Prisma.$TransactionMetadataPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TransactionMetadata that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionMetadataFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TransactionMetadata
     * const transactionMetadata = await prisma.transactionMetadata.findMany()
     * 
     * // Get first 10 TransactionMetadata
     * const transactionMetadata = await prisma.transactionMetadata.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transactionMetadataWithIdOnly = await prisma.transactionMetadata.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TransactionMetadataFindManyArgs>(args?: SelectSubset<T, TransactionMetadataFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionMetadataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TransactionMetadata.
     * @param {TransactionMetadataCreateArgs} args - Arguments to create a TransactionMetadata.
     * @example
     * // Create one TransactionMetadata
     * const TransactionMetadata = await prisma.transactionMetadata.create({
     *   data: {
     *     // ... data to create a TransactionMetadata
     *   }
     * })
     * 
     */
    create<T extends TransactionMetadataCreateArgs>(args: SelectSubset<T, TransactionMetadataCreateArgs<ExtArgs>>): Prisma__TransactionMetadataClient<$Result.GetResult<Prisma.$TransactionMetadataPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TransactionMetadata.
     * @param {TransactionMetadataCreateManyArgs} args - Arguments to create many TransactionMetadata.
     * @example
     * // Create many TransactionMetadata
     * const transactionMetadata = await prisma.transactionMetadata.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TransactionMetadataCreateManyArgs>(args?: SelectSubset<T, TransactionMetadataCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TransactionMetadata and returns the data saved in the database.
     * @param {TransactionMetadataCreateManyAndReturnArgs} args - Arguments to create many TransactionMetadata.
     * @example
     * // Create many TransactionMetadata
     * const transactionMetadata = await prisma.transactionMetadata.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TransactionMetadata and only return the `id`
     * const transactionMetadataWithIdOnly = await prisma.transactionMetadata.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TransactionMetadataCreateManyAndReturnArgs>(args?: SelectSubset<T, TransactionMetadataCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionMetadataPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a TransactionMetadata.
     * @param {TransactionMetadataDeleteArgs} args - Arguments to delete one TransactionMetadata.
     * @example
     * // Delete one TransactionMetadata
     * const TransactionMetadata = await prisma.transactionMetadata.delete({
     *   where: {
     *     // ... filter to delete one TransactionMetadata
     *   }
     * })
     * 
     */
    delete<T extends TransactionMetadataDeleteArgs>(args: SelectSubset<T, TransactionMetadataDeleteArgs<ExtArgs>>): Prisma__TransactionMetadataClient<$Result.GetResult<Prisma.$TransactionMetadataPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TransactionMetadata.
     * @param {TransactionMetadataUpdateArgs} args - Arguments to update one TransactionMetadata.
     * @example
     * // Update one TransactionMetadata
     * const transactionMetadata = await prisma.transactionMetadata.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TransactionMetadataUpdateArgs>(args: SelectSubset<T, TransactionMetadataUpdateArgs<ExtArgs>>): Prisma__TransactionMetadataClient<$Result.GetResult<Prisma.$TransactionMetadataPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TransactionMetadata.
     * @param {TransactionMetadataDeleteManyArgs} args - Arguments to filter TransactionMetadata to delete.
     * @example
     * // Delete a few TransactionMetadata
     * const { count } = await prisma.transactionMetadata.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TransactionMetadataDeleteManyArgs>(args?: SelectSubset<T, TransactionMetadataDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TransactionMetadata.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionMetadataUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TransactionMetadata
     * const transactionMetadata = await prisma.transactionMetadata.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TransactionMetadataUpdateManyArgs>(args: SelectSubset<T, TransactionMetadataUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TransactionMetadata and returns the data updated in the database.
     * @param {TransactionMetadataUpdateManyAndReturnArgs} args - Arguments to update many TransactionMetadata.
     * @example
     * // Update many TransactionMetadata
     * const transactionMetadata = await prisma.transactionMetadata.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more TransactionMetadata and only return the `id`
     * const transactionMetadataWithIdOnly = await prisma.transactionMetadata.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TransactionMetadataUpdateManyAndReturnArgs>(args: SelectSubset<T, TransactionMetadataUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionMetadataPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one TransactionMetadata.
     * @param {TransactionMetadataUpsertArgs} args - Arguments to update or create a TransactionMetadata.
     * @example
     * // Update or create a TransactionMetadata
     * const transactionMetadata = await prisma.transactionMetadata.upsert({
     *   create: {
     *     // ... data to create a TransactionMetadata
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TransactionMetadata we want to update
     *   }
     * })
     */
    upsert<T extends TransactionMetadataUpsertArgs>(args: SelectSubset<T, TransactionMetadataUpsertArgs<ExtArgs>>): Prisma__TransactionMetadataClient<$Result.GetResult<Prisma.$TransactionMetadataPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TransactionMetadata.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionMetadataCountArgs} args - Arguments to filter TransactionMetadata to count.
     * @example
     * // Count the number of TransactionMetadata
     * const count = await prisma.transactionMetadata.count({
     *   where: {
     *     // ... the filter for the TransactionMetadata we want to count
     *   }
     * })
    **/
    count<T extends TransactionMetadataCountArgs>(
      args?: Subset<T, TransactionMetadataCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransactionMetadataCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TransactionMetadata.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionMetadataAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransactionMetadataAggregateArgs>(args: Subset<T, TransactionMetadataAggregateArgs>): Prisma.PrismaPromise<GetTransactionMetadataAggregateType<T>>

    /**
     * Group by TransactionMetadata.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionMetadataGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TransactionMetadataGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TransactionMetadataGroupByArgs['orderBy'] }
        : { orderBy?: TransactionMetadataGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TransactionMetadataGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransactionMetadataGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TransactionMetadata model
   */
  readonly fields: TransactionMetadataFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TransactionMetadata.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TransactionMetadataClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    transactions<T extends TransactionMetadata$transactionsArgs<ExtArgs> = {}>(args?: Subset<T, TransactionMetadata$transactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TransactionMetadata model
   */
  interface TransactionMetadataFieldRefs {
    readonly id: FieldRef<"TransactionMetadata", 'String'>
    readonly providerId: FieldRef<"TransactionMetadata", 'String'>
    readonly provider: FieldRef<"TransactionMetadata", 'String'>
    readonly model: FieldRef<"TransactionMetadata", 'String'>
    readonly inputTokens: FieldRef<"TransactionMetadata", 'Int'>
    readonly outputTokens: FieldRef<"TransactionMetadata", 'Int'>
    readonly totalTokens: FieldRef<"TransactionMetadata", 'Int'>
    readonly toolCost: FieldRef<"TransactionMetadata", 'Decimal'>
    readonly prompt: FieldRef<"TransactionMetadata", 'String'>
    readonly isArchived: FieldRef<"TransactionMetadata", 'Boolean'>
    readonly archivedAt: FieldRef<"TransactionMetadata", 'DateTime'>
    readonly createdAt: FieldRef<"TransactionMetadata", 'DateTime'>
    readonly updatedAt: FieldRef<"TransactionMetadata", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TransactionMetadata findUnique
   */
  export type TransactionMetadataFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionMetadata
     */
    select?: TransactionMetadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionMetadata
     */
    omit?: TransactionMetadataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionMetadataInclude<ExtArgs> | null
    /**
     * Filter, which TransactionMetadata to fetch.
     */
    where: TransactionMetadataWhereUniqueInput
  }

  /**
   * TransactionMetadata findUniqueOrThrow
   */
  export type TransactionMetadataFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionMetadata
     */
    select?: TransactionMetadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionMetadata
     */
    omit?: TransactionMetadataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionMetadataInclude<ExtArgs> | null
    /**
     * Filter, which TransactionMetadata to fetch.
     */
    where: TransactionMetadataWhereUniqueInput
  }

  /**
   * TransactionMetadata findFirst
   */
  export type TransactionMetadataFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionMetadata
     */
    select?: TransactionMetadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionMetadata
     */
    omit?: TransactionMetadataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionMetadataInclude<ExtArgs> | null
    /**
     * Filter, which TransactionMetadata to fetch.
     */
    where?: TransactionMetadataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransactionMetadata to fetch.
     */
    orderBy?: TransactionMetadataOrderByWithRelationInput | TransactionMetadataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TransactionMetadata.
     */
    cursor?: TransactionMetadataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransactionMetadata from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransactionMetadata.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TransactionMetadata.
     */
    distinct?: TransactionMetadataScalarFieldEnum | TransactionMetadataScalarFieldEnum[]
  }

  /**
   * TransactionMetadata findFirstOrThrow
   */
  export type TransactionMetadataFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionMetadata
     */
    select?: TransactionMetadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionMetadata
     */
    omit?: TransactionMetadataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionMetadataInclude<ExtArgs> | null
    /**
     * Filter, which TransactionMetadata to fetch.
     */
    where?: TransactionMetadataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransactionMetadata to fetch.
     */
    orderBy?: TransactionMetadataOrderByWithRelationInput | TransactionMetadataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TransactionMetadata.
     */
    cursor?: TransactionMetadataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransactionMetadata from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransactionMetadata.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TransactionMetadata.
     */
    distinct?: TransactionMetadataScalarFieldEnum | TransactionMetadataScalarFieldEnum[]
  }

  /**
   * TransactionMetadata findMany
   */
  export type TransactionMetadataFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionMetadata
     */
    select?: TransactionMetadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionMetadata
     */
    omit?: TransactionMetadataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionMetadataInclude<ExtArgs> | null
    /**
     * Filter, which TransactionMetadata to fetch.
     */
    where?: TransactionMetadataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransactionMetadata to fetch.
     */
    orderBy?: TransactionMetadataOrderByWithRelationInput | TransactionMetadataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TransactionMetadata.
     */
    cursor?: TransactionMetadataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransactionMetadata from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransactionMetadata.
     */
    skip?: number
    distinct?: TransactionMetadataScalarFieldEnum | TransactionMetadataScalarFieldEnum[]
  }

  /**
   * TransactionMetadata create
   */
  export type TransactionMetadataCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionMetadata
     */
    select?: TransactionMetadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionMetadata
     */
    omit?: TransactionMetadataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionMetadataInclude<ExtArgs> | null
    /**
     * The data needed to create a TransactionMetadata.
     */
    data: XOR<TransactionMetadataCreateInput, TransactionMetadataUncheckedCreateInput>
  }

  /**
   * TransactionMetadata createMany
   */
  export type TransactionMetadataCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TransactionMetadata.
     */
    data: TransactionMetadataCreateManyInput | TransactionMetadataCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TransactionMetadata createManyAndReturn
   */
  export type TransactionMetadataCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionMetadata
     */
    select?: TransactionMetadataSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionMetadata
     */
    omit?: TransactionMetadataOmit<ExtArgs> | null
    /**
     * The data used to create many TransactionMetadata.
     */
    data: TransactionMetadataCreateManyInput | TransactionMetadataCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TransactionMetadata update
   */
  export type TransactionMetadataUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionMetadata
     */
    select?: TransactionMetadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionMetadata
     */
    omit?: TransactionMetadataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionMetadataInclude<ExtArgs> | null
    /**
     * The data needed to update a TransactionMetadata.
     */
    data: XOR<TransactionMetadataUpdateInput, TransactionMetadataUncheckedUpdateInput>
    /**
     * Choose, which TransactionMetadata to update.
     */
    where: TransactionMetadataWhereUniqueInput
  }

  /**
   * TransactionMetadata updateMany
   */
  export type TransactionMetadataUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TransactionMetadata.
     */
    data: XOR<TransactionMetadataUpdateManyMutationInput, TransactionMetadataUncheckedUpdateManyInput>
    /**
     * Filter which TransactionMetadata to update
     */
    where?: TransactionMetadataWhereInput
    /**
     * Limit how many TransactionMetadata to update.
     */
    limit?: number
  }

  /**
   * TransactionMetadata updateManyAndReturn
   */
  export type TransactionMetadataUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionMetadata
     */
    select?: TransactionMetadataSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionMetadata
     */
    omit?: TransactionMetadataOmit<ExtArgs> | null
    /**
     * The data used to update TransactionMetadata.
     */
    data: XOR<TransactionMetadataUpdateManyMutationInput, TransactionMetadataUncheckedUpdateManyInput>
    /**
     * Filter which TransactionMetadata to update
     */
    where?: TransactionMetadataWhereInput
    /**
     * Limit how many TransactionMetadata to update.
     */
    limit?: number
  }

  /**
   * TransactionMetadata upsert
   */
  export type TransactionMetadataUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionMetadata
     */
    select?: TransactionMetadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionMetadata
     */
    omit?: TransactionMetadataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionMetadataInclude<ExtArgs> | null
    /**
     * The filter to search for the TransactionMetadata to update in case it exists.
     */
    where: TransactionMetadataWhereUniqueInput
    /**
     * In case the TransactionMetadata found by the `where` argument doesn't exist, create a new TransactionMetadata with this data.
     */
    create: XOR<TransactionMetadataCreateInput, TransactionMetadataUncheckedCreateInput>
    /**
     * In case the TransactionMetadata was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TransactionMetadataUpdateInput, TransactionMetadataUncheckedUpdateInput>
  }

  /**
   * TransactionMetadata delete
   */
  export type TransactionMetadataDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionMetadata
     */
    select?: TransactionMetadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionMetadata
     */
    omit?: TransactionMetadataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionMetadataInclude<ExtArgs> | null
    /**
     * Filter which TransactionMetadata to delete.
     */
    where: TransactionMetadataWhereUniqueInput
  }

  /**
   * TransactionMetadata deleteMany
   */
  export type TransactionMetadataDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TransactionMetadata to delete
     */
    where?: TransactionMetadataWhereInput
    /**
     * Limit how many TransactionMetadata to delete.
     */
    limit?: number
  }

  /**
   * TransactionMetadata.transactions
   */
  export type TransactionMetadata$transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    where?: TransactionWhereInput
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    cursor?: TransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * TransactionMetadata without action
   */
  export type TransactionMetadataDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionMetadata
     */
    select?: TransactionMetadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionMetadata
     */
    omit?: TransactionMetadataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionMetadataInclude<ExtArgs> | null
  }


  /**
   * Model ReferralCode
   */

  export type AggregateReferralCode = {
    _count: ReferralCodeCountAggregateOutputType | null
    _avg: ReferralCodeAvgAggregateOutputType | null
    _sum: ReferralCodeSumAggregateOutputType | null
    _min: ReferralCodeMinAggregateOutputType | null
    _max: ReferralCodeMaxAggregateOutputType | null
  }

  export type ReferralCodeAvgAggregateOutputType = {
    grantAmount: Decimal | null
  }

  export type ReferralCodeSumAggregateOutputType = {
    grantAmount: Decimal | null
  }

  export type ReferralCodeMinAggregateOutputType = {
    id: string | null
    code: string | null
    userId: string | null
    echoAppId: string | null
    grantType: string | null
    grantAmount: Decimal | null
    reusable: boolean | null
    expiresAt: Date | null
    isUsed: boolean | null
    isArchived: boolean | null
    archivedAt: Date | null
    usedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReferralCodeMaxAggregateOutputType = {
    id: string | null
    code: string | null
    userId: string | null
    echoAppId: string | null
    grantType: string | null
    grantAmount: Decimal | null
    reusable: boolean | null
    expiresAt: Date | null
    isUsed: boolean | null
    isArchived: boolean | null
    archivedAt: Date | null
    usedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReferralCodeCountAggregateOutputType = {
    id: number
    code: number
    userId: number
    echoAppId: number
    grantType: number
    grantAmount: number
    reusable: number
    expiresAt: number
    isUsed: number
    isArchived: number
    archivedAt: number
    usedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ReferralCodeAvgAggregateInputType = {
    grantAmount?: true
  }

  export type ReferralCodeSumAggregateInputType = {
    grantAmount?: true
  }

  export type ReferralCodeMinAggregateInputType = {
    id?: true
    code?: true
    userId?: true
    echoAppId?: true
    grantType?: true
    grantAmount?: true
    reusable?: true
    expiresAt?: true
    isUsed?: true
    isArchived?: true
    archivedAt?: true
    usedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReferralCodeMaxAggregateInputType = {
    id?: true
    code?: true
    userId?: true
    echoAppId?: true
    grantType?: true
    grantAmount?: true
    reusable?: true
    expiresAt?: true
    isUsed?: true
    isArchived?: true
    archivedAt?: true
    usedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReferralCodeCountAggregateInputType = {
    id?: true
    code?: true
    userId?: true
    echoAppId?: true
    grantType?: true
    grantAmount?: true
    reusable?: true
    expiresAt?: true
    isUsed?: true
    isArchived?: true
    archivedAt?: true
    usedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ReferralCodeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReferralCode to aggregate.
     */
    where?: ReferralCodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReferralCodes to fetch.
     */
    orderBy?: ReferralCodeOrderByWithRelationInput | ReferralCodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReferralCodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReferralCodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReferralCodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReferralCodes
    **/
    _count?: true | ReferralCodeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReferralCodeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReferralCodeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReferralCodeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReferralCodeMaxAggregateInputType
  }

  export type GetReferralCodeAggregateType<T extends ReferralCodeAggregateArgs> = {
        [P in keyof T & keyof AggregateReferralCode]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReferralCode[P]>
      : GetScalarType<T[P], AggregateReferralCode[P]>
  }




  export type ReferralCodeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReferralCodeWhereInput
    orderBy?: ReferralCodeOrderByWithAggregationInput | ReferralCodeOrderByWithAggregationInput[]
    by: ReferralCodeScalarFieldEnum[] | ReferralCodeScalarFieldEnum
    having?: ReferralCodeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReferralCodeCountAggregateInputType | true
    _avg?: ReferralCodeAvgAggregateInputType
    _sum?: ReferralCodeSumAggregateInputType
    _min?: ReferralCodeMinAggregateInputType
    _max?: ReferralCodeMaxAggregateInputType
  }

  export type ReferralCodeGroupByOutputType = {
    id: string
    code: string
    userId: string | null
    echoAppId: string | null
    grantType: string
    grantAmount: Decimal | null
    reusable: boolean
    expiresAt: Date
    isUsed: boolean
    isArchived: boolean
    archivedAt: Date | null
    usedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: ReferralCodeCountAggregateOutputType | null
    _avg: ReferralCodeAvgAggregateOutputType | null
    _sum: ReferralCodeSumAggregateOutputType | null
    _min: ReferralCodeMinAggregateOutputType | null
    _max: ReferralCodeMaxAggregateOutputType | null
  }

  type GetReferralCodeGroupByPayload<T extends ReferralCodeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReferralCodeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReferralCodeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReferralCodeGroupByOutputType[P]>
            : GetScalarType<T[P], ReferralCodeGroupByOutputType[P]>
        }
      >
    >


  export type ReferralCodeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    userId?: boolean
    echoAppId?: boolean
    grantType?: boolean
    grantAmount?: boolean
    reusable?: boolean
    expiresAt?: boolean
    isUsed?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    usedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    appMemberships?: boolean | ReferralCode$appMembershipsArgs<ExtArgs>
    user?: boolean | ReferralCode$userArgs<ExtArgs>
    echoApp?: boolean | ReferralCode$echoAppArgs<ExtArgs>
    Transaction?: boolean | ReferralCode$TransactionArgs<ExtArgs>
    _count?: boolean | ReferralCodeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["referralCode"]>

  export type ReferralCodeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    userId?: boolean
    echoAppId?: boolean
    grantType?: boolean
    grantAmount?: boolean
    reusable?: boolean
    expiresAt?: boolean
    isUsed?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    usedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | ReferralCode$userArgs<ExtArgs>
    echoApp?: boolean | ReferralCode$echoAppArgs<ExtArgs>
  }, ExtArgs["result"]["referralCode"]>

  export type ReferralCodeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    userId?: boolean
    echoAppId?: boolean
    grantType?: boolean
    grantAmount?: boolean
    reusable?: boolean
    expiresAt?: boolean
    isUsed?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    usedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | ReferralCode$userArgs<ExtArgs>
    echoApp?: boolean | ReferralCode$echoAppArgs<ExtArgs>
  }, ExtArgs["result"]["referralCode"]>

  export type ReferralCodeSelectScalar = {
    id?: boolean
    code?: boolean
    userId?: boolean
    echoAppId?: boolean
    grantType?: boolean
    grantAmount?: boolean
    reusable?: boolean
    expiresAt?: boolean
    isUsed?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    usedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ReferralCodeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "code" | "userId" | "echoAppId" | "grantType" | "grantAmount" | "reusable" | "expiresAt" | "isUsed" | "isArchived" | "archivedAt" | "usedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["referralCode"]>
  export type ReferralCodeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    appMemberships?: boolean | ReferralCode$appMembershipsArgs<ExtArgs>
    user?: boolean | ReferralCode$userArgs<ExtArgs>
    echoApp?: boolean | ReferralCode$echoAppArgs<ExtArgs>
    Transaction?: boolean | ReferralCode$TransactionArgs<ExtArgs>
    _count?: boolean | ReferralCodeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ReferralCodeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | ReferralCode$userArgs<ExtArgs>
    echoApp?: boolean | ReferralCode$echoAppArgs<ExtArgs>
  }
  export type ReferralCodeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | ReferralCode$userArgs<ExtArgs>
    echoApp?: boolean | ReferralCode$echoAppArgs<ExtArgs>
  }

  export type $ReferralCodePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReferralCode"
    objects: {
      appMemberships: Prisma.$AppMembershipPayload<ExtArgs>[]
      user: Prisma.$UserPayload<ExtArgs> | null
      echoApp: Prisma.$EchoAppPayload<ExtArgs> | null
      Transaction: Prisma.$TransactionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      code: string
      userId: string | null
      echoAppId: string | null
      grantType: string
      grantAmount: Prisma.Decimal | null
      reusable: boolean
      expiresAt: Date
      isUsed: boolean
      isArchived: boolean
      archivedAt: Date | null
      usedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["referralCode"]>
    composites: {}
  }

  type ReferralCodeGetPayload<S extends boolean | null | undefined | ReferralCodeDefaultArgs> = $Result.GetResult<Prisma.$ReferralCodePayload, S>

  type ReferralCodeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReferralCodeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReferralCodeCountAggregateInputType | true
    }

  export interface ReferralCodeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReferralCode'], meta: { name: 'ReferralCode' } }
    /**
     * Find zero or one ReferralCode that matches the filter.
     * @param {ReferralCodeFindUniqueArgs} args - Arguments to find a ReferralCode
     * @example
     * // Get one ReferralCode
     * const referralCode = await prisma.referralCode.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReferralCodeFindUniqueArgs>(args: SelectSubset<T, ReferralCodeFindUniqueArgs<ExtArgs>>): Prisma__ReferralCodeClient<$Result.GetResult<Prisma.$ReferralCodePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReferralCode that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReferralCodeFindUniqueOrThrowArgs} args - Arguments to find a ReferralCode
     * @example
     * // Get one ReferralCode
     * const referralCode = await prisma.referralCode.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReferralCodeFindUniqueOrThrowArgs>(args: SelectSubset<T, ReferralCodeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReferralCodeClient<$Result.GetResult<Prisma.$ReferralCodePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReferralCode that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralCodeFindFirstArgs} args - Arguments to find a ReferralCode
     * @example
     * // Get one ReferralCode
     * const referralCode = await prisma.referralCode.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReferralCodeFindFirstArgs>(args?: SelectSubset<T, ReferralCodeFindFirstArgs<ExtArgs>>): Prisma__ReferralCodeClient<$Result.GetResult<Prisma.$ReferralCodePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReferralCode that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralCodeFindFirstOrThrowArgs} args - Arguments to find a ReferralCode
     * @example
     * // Get one ReferralCode
     * const referralCode = await prisma.referralCode.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReferralCodeFindFirstOrThrowArgs>(args?: SelectSubset<T, ReferralCodeFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReferralCodeClient<$Result.GetResult<Prisma.$ReferralCodePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReferralCodes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralCodeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReferralCodes
     * const referralCodes = await prisma.referralCode.findMany()
     * 
     * // Get first 10 ReferralCodes
     * const referralCodes = await prisma.referralCode.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const referralCodeWithIdOnly = await prisma.referralCode.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReferralCodeFindManyArgs>(args?: SelectSubset<T, ReferralCodeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReferralCodePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReferralCode.
     * @param {ReferralCodeCreateArgs} args - Arguments to create a ReferralCode.
     * @example
     * // Create one ReferralCode
     * const ReferralCode = await prisma.referralCode.create({
     *   data: {
     *     // ... data to create a ReferralCode
     *   }
     * })
     * 
     */
    create<T extends ReferralCodeCreateArgs>(args: SelectSubset<T, ReferralCodeCreateArgs<ExtArgs>>): Prisma__ReferralCodeClient<$Result.GetResult<Prisma.$ReferralCodePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReferralCodes.
     * @param {ReferralCodeCreateManyArgs} args - Arguments to create many ReferralCodes.
     * @example
     * // Create many ReferralCodes
     * const referralCode = await prisma.referralCode.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReferralCodeCreateManyArgs>(args?: SelectSubset<T, ReferralCodeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ReferralCodes and returns the data saved in the database.
     * @param {ReferralCodeCreateManyAndReturnArgs} args - Arguments to create many ReferralCodes.
     * @example
     * // Create many ReferralCodes
     * const referralCode = await prisma.referralCode.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ReferralCodes and only return the `id`
     * const referralCodeWithIdOnly = await prisma.referralCode.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReferralCodeCreateManyAndReturnArgs>(args?: SelectSubset<T, ReferralCodeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReferralCodePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ReferralCode.
     * @param {ReferralCodeDeleteArgs} args - Arguments to delete one ReferralCode.
     * @example
     * // Delete one ReferralCode
     * const ReferralCode = await prisma.referralCode.delete({
     *   where: {
     *     // ... filter to delete one ReferralCode
     *   }
     * })
     * 
     */
    delete<T extends ReferralCodeDeleteArgs>(args: SelectSubset<T, ReferralCodeDeleteArgs<ExtArgs>>): Prisma__ReferralCodeClient<$Result.GetResult<Prisma.$ReferralCodePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReferralCode.
     * @param {ReferralCodeUpdateArgs} args - Arguments to update one ReferralCode.
     * @example
     * // Update one ReferralCode
     * const referralCode = await prisma.referralCode.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReferralCodeUpdateArgs>(args: SelectSubset<T, ReferralCodeUpdateArgs<ExtArgs>>): Prisma__ReferralCodeClient<$Result.GetResult<Prisma.$ReferralCodePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReferralCodes.
     * @param {ReferralCodeDeleteManyArgs} args - Arguments to filter ReferralCodes to delete.
     * @example
     * // Delete a few ReferralCodes
     * const { count } = await prisma.referralCode.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReferralCodeDeleteManyArgs>(args?: SelectSubset<T, ReferralCodeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReferralCodes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralCodeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReferralCodes
     * const referralCode = await prisma.referralCode.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReferralCodeUpdateManyArgs>(args: SelectSubset<T, ReferralCodeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReferralCodes and returns the data updated in the database.
     * @param {ReferralCodeUpdateManyAndReturnArgs} args - Arguments to update many ReferralCodes.
     * @example
     * // Update many ReferralCodes
     * const referralCode = await prisma.referralCode.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ReferralCodes and only return the `id`
     * const referralCodeWithIdOnly = await prisma.referralCode.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReferralCodeUpdateManyAndReturnArgs>(args: SelectSubset<T, ReferralCodeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReferralCodePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ReferralCode.
     * @param {ReferralCodeUpsertArgs} args - Arguments to update or create a ReferralCode.
     * @example
     * // Update or create a ReferralCode
     * const referralCode = await prisma.referralCode.upsert({
     *   create: {
     *     // ... data to create a ReferralCode
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReferralCode we want to update
     *   }
     * })
     */
    upsert<T extends ReferralCodeUpsertArgs>(args: SelectSubset<T, ReferralCodeUpsertArgs<ExtArgs>>): Prisma__ReferralCodeClient<$Result.GetResult<Prisma.$ReferralCodePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReferralCodes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralCodeCountArgs} args - Arguments to filter ReferralCodes to count.
     * @example
     * // Count the number of ReferralCodes
     * const count = await prisma.referralCode.count({
     *   where: {
     *     // ... the filter for the ReferralCodes we want to count
     *   }
     * })
    **/
    count<T extends ReferralCodeCountArgs>(
      args?: Subset<T, ReferralCodeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReferralCodeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReferralCode.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralCodeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReferralCodeAggregateArgs>(args: Subset<T, ReferralCodeAggregateArgs>): Prisma.PrismaPromise<GetReferralCodeAggregateType<T>>

    /**
     * Group by ReferralCode.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralCodeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReferralCodeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReferralCodeGroupByArgs['orderBy'] }
        : { orderBy?: ReferralCodeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReferralCodeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReferralCodeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReferralCode model
   */
  readonly fields: ReferralCodeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReferralCode.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReferralCodeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    appMemberships<T extends ReferralCode$appMembershipsArgs<ExtArgs> = {}>(args?: Subset<T, ReferralCode$appMembershipsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppMembershipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user<T extends ReferralCode$userArgs<ExtArgs> = {}>(args?: Subset<T, ReferralCode$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    echoApp<T extends ReferralCode$echoAppArgs<ExtArgs> = {}>(args?: Subset<T, ReferralCode$echoAppArgs<ExtArgs>>): Prisma__EchoAppClient<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Transaction<T extends ReferralCode$TransactionArgs<ExtArgs> = {}>(args?: Subset<T, ReferralCode$TransactionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReferralCode model
   */
  interface ReferralCodeFieldRefs {
    readonly id: FieldRef<"ReferralCode", 'String'>
    readonly code: FieldRef<"ReferralCode", 'String'>
    readonly userId: FieldRef<"ReferralCode", 'String'>
    readonly echoAppId: FieldRef<"ReferralCode", 'String'>
    readonly grantType: FieldRef<"ReferralCode", 'String'>
    readonly grantAmount: FieldRef<"ReferralCode", 'Decimal'>
    readonly reusable: FieldRef<"ReferralCode", 'Boolean'>
    readonly expiresAt: FieldRef<"ReferralCode", 'DateTime'>
    readonly isUsed: FieldRef<"ReferralCode", 'Boolean'>
    readonly isArchived: FieldRef<"ReferralCode", 'Boolean'>
    readonly archivedAt: FieldRef<"ReferralCode", 'DateTime'>
    readonly usedAt: FieldRef<"ReferralCode", 'DateTime'>
    readonly createdAt: FieldRef<"ReferralCode", 'DateTime'>
    readonly updatedAt: FieldRef<"ReferralCode", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ReferralCode findUnique
   */
  export type ReferralCodeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralCode
     */
    select?: ReferralCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralCode
     */
    omit?: ReferralCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralCodeInclude<ExtArgs> | null
    /**
     * Filter, which ReferralCode to fetch.
     */
    where: ReferralCodeWhereUniqueInput
  }

  /**
   * ReferralCode findUniqueOrThrow
   */
  export type ReferralCodeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralCode
     */
    select?: ReferralCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralCode
     */
    omit?: ReferralCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralCodeInclude<ExtArgs> | null
    /**
     * Filter, which ReferralCode to fetch.
     */
    where: ReferralCodeWhereUniqueInput
  }

  /**
   * ReferralCode findFirst
   */
  export type ReferralCodeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralCode
     */
    select?: ReferralCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralCode
     */
    omit?: ReferralCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralCodeInclude<ExtArgs> | null
    /**
     * Filter, which ReferralCode to fetch.
     */
    where?: ReferralCodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReferralCodes to fetch.
     */
    orderBy?: ReferralCodeOrderByWithRelationInput | ReferralCodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReferralCodes.
     */
    cursor?: ReferralCodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReferralCodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReferralCodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReferralCodes.
     */
    distinct?: ReferralCodeScalarFieldEnum | ReferralCodeScalarFieldEnum[]
  }

  /**
   * ReferralCode findFirstOrThrow
   */
  export type ReferralCodeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralCode
     */
    select?: ReferralCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralCode
     */
    omit?: ReferralCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralCodeInclude<ExtArgs> | null
    /**
     * Filter, which ReferralCode to fetch.
     */
    where?: ReferralCodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReferralCodes to fetch.
     */
    orderBy?: ReferralCodeOrderByWithRelationInput | ReferralCodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReferralCodes.
     */
    cursor?: ReferralCodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReferralCodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReferralCodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReferralCodes.
     */
    distinct?: ReferralCodeScalarFieldEnum | ReferralCodeScalarFieldEnum[]
  }

  /**
   * ReferralCode findMany
   */
  export type ReferralCodeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralCode
     */
    select?: ReferralCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralCode
     */
    omit?: ReferralCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralCodeInclude<ExtArgs> | null
    /**
     * Filter, which ReferralCodes to fetch.
     */
    where?: ReferralCodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReferralCodes to fetch.
     */
    orderBy?: ReferralCodeOrderByWithRelationInput | ReferralCodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReferralCodes.
     */
    cursor?: ReferralCodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReferralCodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReferralCodes.
     */
    skip?: number
    distinct?: ReferralCodeScalarFieldEnum | ReferralCodeScalarFieldEnum[]
  }

  /**
   * ReferralCode create
   */
  export type ReferralCodeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralCode
     */
    select?: ReferralCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralCode
     */
    omit?: ReferralCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralCodeInclude<ExtArgs> | null
    /**
     * The data needed to create a ReferralCode.
     */
    data: XOR<ReferralCodeCreateInput, ReferralCodeUncheckedCreateInput>
  }

  /**
   * ReferralCode createMany
   */
  export type ReferralCodeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReferralCodes.
     */
    data: ReferralCodeCreateManyInput | ReferralCodeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReferralCode createManyAndReturn
   */
  export type ReferralCodeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralCode
     */
    select?: ReferralCodeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralCode
     */
    omit?: ReferralCodeOmit<ExtArgs> | null
    /**
     * The data used to create many ReferralCodes.
     */
    data: ReferralCodeCreateManyInput | ReferralCodeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralCodeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReferralCode update
   */
  export type ReferralCodeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralCode
     */
    select?: ReferralCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralCode
     */
    omit?: ReferralCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralCodeInclude<ExtArgs> | null
    /**
     * The data needed to update a ReferralCode.
     */
    data: XOR<ReferralCodeUpdateInput, ReferralCodeUncheckedUpdateInput>
    /**
     * Choose, which ReferralCode to update.
     */
    where: ReferralCodeWhereUniqueInput
  }

  /**
   * ReferralCode updateMany
   */
  export type ReferralCodeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReferralCodes.
     */
    data: XOR<ReferralCodeUpdateManyMutationInput, ReferralCodeUncheckedUpdateManyInput>
    /**
     * Filter which ReferralCodes to update
     */
    where?: ReferralCodeWhereInput
    /**
     * Limit how many ReferralCodes to update.
     */
    limit?: number
  }

  /**
   * ReferralCode updateManyAndReturn
   */
  export type ReferralCodeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralCode
     */
    select?: ReferralCodeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralCode
     */
    omit?: ReferralCodeOmit<ExtArgs> | null
    /**
     * The data used to update ReferralCodes.
     */
    data: XOR<ReferralCodeUpdateManyMutationInput, ReferralCodeUncheckedUpdateManyInput>
    /**
     * Filter which ReferralCodes to update
     */
    where?: ReferralCodeWhereInput
    /**
     * Limit how many ReferralCodes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralCodeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReferralCode upsert
   */
  export type ReferralCodeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralCode
     */
    select?: ReferralCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralCode
     */
    omit?: ReferralCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralCodeInclude<ExtArgs> | null
    /**
     * The filter to search for the ReferralCode to update in case it exists.
     */
    where: ReferralCodeWhereUniqueInput
    /**
     * In case the ReferralCode found by the `where` argument doesn't exist, create a new ReferralCode with this data.
     */
    create: XOR<ReferralCodeCreateInput, ReferralCodeUncheckedCreateInput>
    /**
     * In case the ReferralCode was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReferralCodeUpdateInput, ReferralCodeUncheckedUpdateInput>
  }

  /**
   * ReferralCode delete
   */
  export type ReferralCodeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralCode
     */
    select?: ReferralCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralCode
     */
    omit?: ReferralCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralCodeInclude<ExtArgs> | null
    /**
     * Filter which ReferralCode to delete.
     */
    where: ReferralCodeWhereUniqueInput
  }

  /**
   * ReferralCode deleteMany
   */
  export type ReferralCodeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReferralCodes to delete
     */
    where?: ReferralCodeWhereInput
    /**
     * Limit how many ReferralCodes to delete.
     */
    limit?: number
  }

  /**
   * ReferralCode.appMemberships
   */
  export type ReferralCode$appMembershipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMembership
     */
    select?: AppMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppMembership
     */
    omit?: AppMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppMembershipInclude<ExtArgs> | null
    where?: AppMembershipWhereInput
    orderBy?: AppMembershipOrderByWithRelationInput | AppMembershipOrderByWithRelationInput[]
    cursor?: AppMembershipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AppMembershipScalarFieldEnum | AppMembershipScalarFieldEnum[]
  }

  /**
   * ReferralCode.user
   */
  export type ReferralCode$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ReferralCode.echoApp
   */
  export type ReferralCode$echoAppArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EchoApp
     */
    select?: EchoAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EchoApp
     */
    omit?: EchoAppOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EchoAppInclude<ExtArgs> | null
    where?: EchoAppWhereInput
  }

  /**
   * ReferralCode.Transaction
   */
  export type ReferralCode$TransactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    where?: TransactionWhereInput
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    cursor?: TransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * ReferralCode without action
   */
  export type ReferralCodeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralCode
     */
    select?: ReferralCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralCode
     */
    omit?: ReferralCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralCodeInclude<ExtArgs> | null
  }


  /**
   * Model ReferralReward
   */

  export type AggregateReferralReward = {
    _count: ReferralRewardCountAggregateOutputType | null
    _avg: ReferralRewardAvgAggregateOutputType | null
    _sum: ReferralRewardSumAggregateOutputType | null
    _min: ReferralRewardMinAggregateOutputType | null
    _max: ReferralRewardMaxAggregateOutputType | null
  }

  export type ReferralRewardAvgAggregateOutputType = {
    amount: Decimal | null
  }

  export type ReferralRewardSumAggregateOutputType = {
    amount: Decimal | null
  }

  export type ReferralRewardMinAggregateOutputType = {
    id: string | null
    amount: Decimal | null
    description: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    echoAppId: string | null
  }

  export type ReferralRewardMaxAggregateOutputType = {
    id: string | null
    amount: Decimal | null
    description: string | null
    isArchived: boolean | null
    archivedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    echoAppId: string | null
  }

  export type ReferralRewardCountAggregateOutputType = {
    id: number
    amount: number
    description: number
    isArchived: number
    archivedAt: number
    createdAt: number
    updatedAt: number
    echoAppId: number
    _all: number
  }


  export type ReferralRewardAvgAggregateInputType = {
    amount?: true
  }

  export type ReferralRewardSumAggregateInputType = {
    amount?: true
  }

  export type ReferralRewardMinAggregateInputType = {
    id?: true
    amount?: true
    description?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    echoAppId?: true
  }

  export type ReferralRewardMaxAggregateInputType = {
    id?: true
    amount?: true
    description?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    echoAppId?: true
  }

  export type ReferralRewardCountAggregateInputType = {
    id?: true
    amount?: true
    description?: true
    isArchived?: true
    archivedAt?: true
    createdAt?: true
    updatedAt?: true
    echoAppId?: true
    _all?: true
  }

  export type ReferralRewardAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReferralReward to aggregate.
     */
    where?: ReferralRewardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReferralRewards to fetch.
     */
    orderBy?: ReferralRewardOrderByWithRelationInput | ReferralRewardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReferralRewardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReferralRewards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReferralRewards.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReferralRewards
    **/
    _count?: true | ReferralRewardCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReferralRewardAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReferralRewardSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReferralRewardMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReferralRewardMaxAggregateInputType
  }

  export type GetReferralRewardAggregateType<T extends ReferralRewardAggregateArgs> = {
        [P in keyof T & keyof AggregateReferralReward]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReferralReward[P]>
      : GetScalarType<T[P], AggregateReferralReward[P]>
  }




  export type ReferralRewardGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReferralRewardWhereInput
    orderBy?: ReferralRewardOrderByWithAggregationInput | ReferralRewardOrderByWithAggregationInput[]
    by: ReferralRewardScalarFieldEnum[] | ReferralRewardScalarFieldEnum
    having?: ReferralRewardScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReferralRewardCountAggregateInputType | true
    _avg?: ReferralRewardAvgAggregateInputType
    _sum?: ReferralRewardSumAggregateInputType
    _min?: ReferralRewardMinAggregateInputType
    _max?: ReferralRewardMaxAggregateInputType
  }

  export type ReferralRewardGroupByOutputType = {
    id: string
    amount: Decimal
    description: string | null
    isArchived: boolean
    archivedAt: Date | null
    createdAt: Date
    updatedAt: Date
    echoAppId: string
    _count: ReferralRewardCountAggregateOutputType | null
    _avg: ReferralRewardAvgAggregateOutputType | null
    _sum: ReferralRewardSumAggregateOutputType | null
    _min: ReferralRewardMinAggregateOutputType | null
    _max: ReferralRewardMaxAggregateOutputType | null
  }

  type GetReferralRewardGroupByPayload<T extends ReferralRewardGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReferralRewardGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReferralRewardGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReferralRewardGroupByOutputType[P]>
            : GetScalarType<T[P], ReferralRewardGroupByOutputType[P]>
        }
      >
    >


  export type ReferralRewardSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    amount?: boolean
    description?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    echoAppId?: boolean
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    currentForApps?: boolean | ReferralReward$currentForAppsArgs<ExtArgs>
    Transaction?: boolean | ReferralReward$TransactionArgs<ExtArgs>
    _count?: boolean | ReferralRewardCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["referralReward"]>

  export type ReferralRewardSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    amount?: boolean
    description?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    echoAppId?: boolean
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["referralReward"]>

  export type ReferralRewardSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    amount?: boolean
    description?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    echoAppId?: boolean
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["referralReward"]>

  export type ReferralRewardSelectScalar = {
    id?: boolean
    amount?: boolean
    description?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    echoAppId?: boolean
  }

  export type ReferralRewardOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "amount" | "description" | "isArchived" | "archivedAt" | "createdAt" | "updatedAt" | "echoAppId", ExtArgs["result"]["referralReward"]>
  export type ReferralRewardInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
    currentForApps?: boolean | ReferralReward$currentForAppsArgs<ExtArgs>
    Transaction?: boolean | ReferralReward$TransactionArgs<ExtArgs>
    _count?: boolean | ReferralRewardCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ReferralRewardIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }
  export type ReferralRewardIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    echoApp?: boolean | EchoAppDefaultArgs<ExtArgs>
  }

  export type $ReferralRewardPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReferralReward"
    objects: {
      echoApp: Prisma.$EchoAppPayload<ExtArgs>
      currentForApps: Prisma.$EchoAppPayload<ExtArgs>[]
      Transaction: Prisma.$TransactionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      amount: Prisma.Decimal
      description: string | null
      isArchived: boolean
      archivedAt: Date | null
      createdAt: Date
      updatedAt: Date
      echoAppId: string
    }, ExtArgs["result"]["referralReward"]>
    composites: {}
  }

  type ReferralRewardGetPayload<S extends boolean | null | undefined | ReferralRewardDefaultArgs> = $Result.GetResult<Prisma.$ReferralRewardPayload, S>

  type ReferralRewardCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReferralRewardFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReferralRewardCountAggregateInputType | true
    }

  export interface ReferralRewardDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReferralReward'], meta: { name: 'ReferralReward' } }
    /**
     * Find zero or one ReferralReward that matches the filter.
     * @param {ReferralRewardFindUniqueArgs} args - Arguments to find a ReferralReward
     * @example
     * // Get one ReferralReward
     * const referralReward = await prisma.referralReward.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReferralRewardFindUniqueArgs>(args: SelectSubset<T, ReferralRewardFindUniqueArgs<ExtArgs>>): Prisma__ReferralRewardClient<$Result.GetResult<Prisma.$ReferralRewardPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReferralReward that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReferralRewardFindUniqueOrThrowArgs} args - Arguments to find a ReferralReward
     * @example
     * // Get one ReferralReward
     * const referralReward = await prisma.referralReward.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReferralRewardFindUniqueOrThrowArgs>(args: SelectSubset<T, ReferralRewardFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReferralRewardClient<$Result.GetResult<Prisma.$ReferralRewardPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReferralReward that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralRewardFindFirstArgs} args - Arguments to find a ReferralReward
     * @example
     * // Get one ReferralReward
     * const referralReward = await prisma.referralReward.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReferralRewardFindFirstArgs>(args?: SelectSubset<T, ReferralRewardFindFirstArgs<ExtArgs>>): Prisma__ReferralRewardClient<$Result.GetResult<Prisma.$ReferralRewardPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReferralReward that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralRewardFindFirstOrThrowArgs} args - Arguments to find a ReferralReward
     * @example
     * // Get one ReferralReward
     * const referralReward = await prisma.referralReward.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReferralRewardFindFirstOrThrowArgs>(args?: SelectSubset<T, ReferralRewardFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReferralRewardClient<$Result.GetResult<Prisma.$ReferralRewardPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReferralRewards that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralRewardFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReferralRewards
     * const referralRewards = await prisma.referralReward.findMany()
     * 
     * // Get first 10 ReferralRewards
     * const referralRewards = await prisma.referralReward.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const referralRewardWithIdOnly = await prisma.referralReward.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReferralRewardFindManyArgs>(args?: SelectSubset<T, ReferralRewardFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReferralRewardPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReferralReward.
     * @param {ReferralRewardCreateArgs} args - Arguments to create a ReferralReward.
     * @example
     * // Create one ReferralReward
     * const ReferralReward = await prisma.referralReward.create({
     *   data: {
     *     // ... data to create a ReferralReward
     *   }
     * })
     * 
     */
    create<T extends ReferralRewardCreateArgs>(args: SelectSubset<T, ReferralRewardCreateArgs<ExtArgs>>): Prisma__ReferralRewardClient<$Result.GetResult<Prisma.$ReferralRewardPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReferralRewards.
     * @param {ReferralRewardCreateManyArgs} args - Arguments to create many ReferralRewards.
     * @example
     * // Create many ReferralRewards
     * const referralReward = await prisma.referralReward.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReferralRewardCreateManyArgs>(args?: SelectSubset<T, ReferralRewardCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ReferralRewards and returns the data saved in the database.
     * @param {ReferralRewardCreateManyAndReturnArgs} args - Arguments to create many ReferralRewards.
     * @example
     * // Create many ReferralRewards
     * const referralReward = await prisma.referralReward.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ReferralRewards and only return the `id`
     * const referralRewardWithIdOnly = await prisma.referralReward.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReferralRewardCreateManyAndReturnArgs>(args?: SelectSubset<T, ReferralRewardCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReferralRewardPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ReferralReward.
     * @param {ReferralRewardDeleteArgs} args - Arguments to delete one ReferralReward.
     * @example
     * // Delete one ReferralReward
     * const ReferralReward = await prisma.referralReward.delete({
     *   where: {
     *     // ... filter to delete one ReferralReward
     *   }
     * })
     * 
     */
    delete<T extends ReferralRewardDeleteArgs>(args: SelectSubset<T, ReferralRewardDeleteArgs<ExtArgs>>): Prisma__ReferralRewardClient<$Result.GetResult<Prisma.$ReferralRewardPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReferralReward.
     * @param {ReferralRewardUpdateArgs} args - Arguments to update one ReferralReward.
     * @example
     * // Update one ReferralReward
     * const referralReward = await prisma.referralReward.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReferralRewardUpdateArgs>(args: SelectSubset<T, ReferralRewardUpdateArgs<ExtArgs>>): Prisma__ReferralRewardClient<$Result.GetResult<Prisma.$ReferralRewardPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReferralRewards.
     * @param {ReferralRewardDeleteManyArgs} args - Arguments to filter ReferralRewards to delete.
     * @example
     * // Delete a few ReferralRewards
     * const { count } = await prisma.referralReward.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReferralRewardDeleteManyArgs>(args?: SelectSubset<T, ReferralRewardDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReferralRewards.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralRewardUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReferralRewards
     * const referralReward = await prisma.referralReward.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReferralRewardUpdateManyArgs>(args: SelectSubset<T, ReferralRewardUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReferralRewards and returns the data updated in the database.
     * @param {ReferralRewardUpdateManyAndReturnArgs} args - Arguments to update many ReferralRewards.
     * @example
     * // Update many ReferralRewards
     * const referralReward = await prisma.referralReward.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ReferralRewards and only return the `id`
     * const referralRewardWithIdOnly = await prisma.referralReward.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReferralRewardUpdateManyAndReturnArgs>(args: SelectSubset<T, ReferralRewardUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReferralRewardPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ReferralReward.
     * @param {ReferralRewardUpsertArgs} args - Arguments to update or create a ReferralReward.
     * @example
     * // Update or create a ReferralReward
     * const referralReward = await prisma.referralReward.upsert({
     *   create: {
     *     // ... data to create a ReferralReward
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReferralReward we want to update
     *   }
     * })
     */
    upsert<T extends ReferralRewardUpsertArgs>(args: SelectSubset<T, ReferralRewardUpsertArgs<ExtArgs>>): Prisma__ReferralRewardClient<$Result.GetResult<Prisma.$ReferralRewardPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReferralRewards.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralRewardCountArgs} args - Arguments to filter ReferralRewards to count.
     * @example
     * // Count the number of ReferralRewards
     * const count = await prisma.referralReward.count({
     *   where: {
     *     // ... the filter for the ReferralRewards we want to count
     *   }
     * })
    **/
    count<T extends ReferralRewardCountArgs>(
      args?: Subset<T, ReferralRewardCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReferralRewardCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReferralReward.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralRewardAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReferralRewardAggregateArgs>(args: Subset<T, ReferralRewardAggregateArgs>): Prisma.PrismaPromise<GetReferralRewardAggregateType<T>>

    /**
     * Group by ReferralReward.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralRewardGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReferralRewardGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReferralRewardGroupByArgs['orderBy'] }
        : { orderBy?: ReferralRewardGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReferralRewardGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReferralRewardGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReferralReward model
   */
  readonly fields: ReferralRewardFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReferralReward.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReferralRewardClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    echoApp<T extends EchoAppDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EchoAppDefaultArgs<ExtArgs>>): Prisma__EchoAppClient<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    currentForApps<T extends ReferralReward$currentForAppsArgs<ExtArgs> = {}>(args?: Subset<T, ReferralReward$currentForAppsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EchoAppPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Transaction<T extends ReferralReward$TransactionArgs<ExtArgs> = {}>(args?: Subset<T, ReferralReward$TransactionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReferralReward model
   */
  interface ReferralRewardFieldRefs {
    readonly id: FieldRef<"ReferralReward", 'String'>
    readonly amount: FieldRef<"ReferralReward", 'Decimal'>
    readonly description: FieldRef<"ReferralReward", 'String'>
    readonly isArchived: FieldRef<"ReferralReward", 'Boolean'>
    readonly archivedAt: FieldRef<"ReferralReward", 'DateTime'>
    readonly createdAt: FieldRef<"ReferralReward", 'DateTime'>
    readonly updatedAt: FieldRef<"ReferralReward", 'DateTime'>
    readonly echoAppId: FieldRef<"ReferralReward", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ReferralReward findUnique
   */
  export type ReferralRewardFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralReward
     */
    select?: ReferralRewardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralReward
     */
    omit?: ReferralRewardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralRewardInclude<ExtArgs> | null
    /**
     * Filter, which ReferralReward to fetch.
     */
    where: ReferralRewardWhereUniqueInput
  }

  /**
   * ReferralReward findUniqueOrThrow
   */
  export type ReferralRewardFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralReward
     */
    select?: ReferralRewardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralReward
     */
    omit?: ReferralRewardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralRewardInclude<ExtArgs> | null
    /**
     * Filter, which ReferralReward to fetch.
     */
    where: ReferralRewardWhereUniqueInput
  }

  /**
   * ReferralReward findFirst
   */
  export type ReferralRewardFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralReward
     */
    select?: ReferralRewardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralReward
     */
    omit?: ReferralRewardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralRewardInclude<ExtArgs> | null
    /**
     * Filter, which ReferralReward to fetch.
     */
    where?: ReferralRewardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReferralRewards to fetch.
     */
    orderBy?: ReferralRewardOrderByWithRelationInput | ReferralRewardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReferralRewards.
     */
    cursor?: ReferralRewardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReferralRewards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReferralRewards.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReferralRewards.
     */
    distinct?: ReferralRewardScalarFieldEnum | ReferralRewardScalarFieldEnum[]
  }

  /**
   * ReferralReward findFirstOrThrow
   */
  export type ReferralRewardFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralReward
     */
    select?: ReferralRewardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralReward
     */
    omit?: ReferralRewardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralRewardInclude<ExtArgs> | null
    /**
     * Filter, which ReferralReward to fetch.
     */
    where?: ReferralRewardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReferralRewards to fetch.
     */
    orderBy?: ReferralRewardOrderByWithRelationInput | ReferralRewardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReferralRewards.
     */
    cursor?: ReferralRewardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReferralRewards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReferralRewards.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReferralRewards.
     */
    distinct?: ReferralRewardScalarFieldEnum | ReferralRewardScalarFieldEnum[]
  }

  /**
   * ReferralReward findMany
   */
  export type ReferralRewardFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralReward
     */
    select?: ReferralRewardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralReward
     */
    omit?: ReferralRewardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralRewardInclude<ExtArgs> | null
    /**
     * Filter, which ReferralRewards to fetch.
     */
    where?: ReferralRewardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReferralRewards to fetch.
     */
    orderBy?: ReferralRewardOrderByWithRelationInput | ReferralRewardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReferralRewards.
     */
    cursor?: ReferralRewardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReferralRewards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReferralRewards.
     */
    skip?: number
    distinct?: ReferralRewardScalarFieldEnum | ReferralRewardScalarFieldEnum[]
  }

  /**
   * ReferralReward create
   */
  export type ReferralRewardCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralReward
     */
    select?: ReferralRewardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralReward
     */
    omit?: ReferralRewardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralRewardInclude<ExtArgs> | null
    /**
     * The data needed to create a ReferralReward.
     */
    data: XOR<ReferralRewardCreateInput, ReferralRewardUncheckedCreateInput>
  }

  /**
   * ReferralReward createMany
   */
  export type ReferralRewardCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReferralRewards.
     */
    data: ReferralRewardCreateManyInput | ReferralRewardCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReferralReward createManyAndReturn
   */
  export type ReferralRewardCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralReward
     */
    select?: ReferralRewardSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralReward
     */
    omit?: ReferralRewardOmit<ExtArgs> | null
    /**
     * The data used to create many ReferralRewards.
     */
    data: ReferralRewardCreateManyInput | ReferralRewardCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralRewardIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReferralReward update
   */
  export type ReferralRewardUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralReward
     */
    select?: ReferralRewardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralReward
     */
    omit?: ReferralRewardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralRewardInclude<ExtArgs> | null
    /**
     * The data needed to update a ReferralReward.
     */
    data: XOR<ReferralRewardUpdateInput, ReferralRewardUncheckedUpdateInput>
    /**
     * Choose, which ReferralReward to update.
     */
    where: ReferralRewardWhereUniqueInput
  }

  /**
   * ReferralReward updateMany
   */
  export type ReferralRewardUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReferralRewards.
     */
    data: XOR<ReferralRewardUpdateManyMutationInput, ReferralRewardUncheckedUpdateManyInput>
    /**
     * Filter which ReferralRewards to update
     */
    where?: ReferralRewardWhereInput
    /**
     * Limit how many ReferralRewards to update.
     */
    limit?: number
  }

  /**
   * ReferralReward updateManyAndReturn
   */
  export type ReferralRewardUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralReward
     */
    select?: ReferralRewardSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralReward
     */
    omit?: ReferralRewardOmit<ExtArgs> | null
    /**
     * The data used to update ReferralRewards.
     */
    data: XOR<ReferralRewardUpdateManyMutationInput, ReferralRewardUncheckedUpdateManyInput>
    /**
     * Filter which ReferralRewards to update
     */
    where?: ReferralRewardWhereInput
    /**
     * Limit how many ReferralRewards to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralRewardIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReferralReward upsert
   */
  export type ReferralRewardUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralReward
     */
    select?: ReferralRewardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralReward
     */
    omit?: ReferralRewardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralRewardInclude<ExtArgs> | null
    /**
     * The filter to search for the ReferralReward to update in case it exists.
     */
    where: ReferralRewardWhereUniqueInput
    /**
     * In case the ReferralReward found by the `where` argument doesn't exist, create a new ReferralReward with this data.
     */
    create: XOR<ReferralRewardCreateInput, ReferralRewardUncheckedCreateInput>
    /**
     * In case the ReferralReward was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReferralRewardUpdateInput, ReferralRewardUncheckedUpdateInput>
  }

  /**
   * ReferralReward delete
   */
  export type ReferralRewardDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralReward
     */
    select?: ReferralRewardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralReward
     */
    omit?: ReferralRewardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralRewardInclude<ExtArgs> | null
    /**
     * Filter which ReferralReward to delete.
     */
    where: ReferralRewardWhereUniqueInput
  }

  /**
   * ReferralReward deleteMany
   */
  export type ReferralRewardDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReferralRewards to delete
     */
    where?: ReferralRewardWhereInput
    /**
     * Limit how many ReferralRewards to delete.
     */
    limit?: number
  }

  /**
   * ReferralReward.currentForApps
   */
  export type ReferralReward$currentForAppsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EchoApp
     */
    select?: EchoAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EchoApp
     */
    omit?: EchoAppOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EchoAppInclude<ExtArgs> | null
    where?: EchoAppWhereInput
    orderBy?: EchoAppOrderByWithRelationInput | EchoAppOrderByWithRelationInput[]
    cursor?: EchoAppWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EchoAppScalarFieldEnum | EchoAppScalarFieldEnum[]
  }

  /**
   * ReferralReward.Transaction
   */
  export type ReferralReward$TransactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    where?: TransactionWhereInput
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    cursor?: TransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * ReferralReward without action
   */
  export type ReferralRewardDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferralReward
     */
    select?: ReferralRewardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferralReward
     */
    omit?: ReferralRewardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferralRewardInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    name: 'name',
    emailVerified: 'emailVerified',
    image: 'image',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    totalPaid: 'totalPaid',
    totalSpent: 'totalSpent',
    admin: 'admin'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const AccountScalarFieldEnum: {
    userId: 'userId',
    type: 'type',
    provider: 'provider',
    providerAccountId: 'providerAccountId',
    refresh_token: 'refresh_token',
    access_token: 'access_token',
    expires_at: 'expires_at',
    token_type: 'token_type',
    scope: 'scope',
    id_token: 'id_token',
    session_state: 'session_state',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


  export const SessionScalarFieldEnum: {
    sessionToken: 'sessionToken',
    userId: 'userId',
    expires: 'expires',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


  export const VerificationTokenScalarFieldEnum: {
    identifier: 'identifier',
    token: 'token',
    expires: 'expires'
  };

  export type VerificationTokenScalarFieldEnum = (typeof VerificationTokenScalarFieldEnum)[keyof typeof VerificationTokenScalarFieldEnum]


  export const EchoAppScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    profilePictureUrl: 'profilePictureUrl',
    bannerImageUrl: 'bannerImageUrl',
    homepageUrl: 'homepageUrl',
    isPublic: 'isPublic',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    authorizedCallbackUrls: 'authorizedCallbackUrls',
    currentReferralRewardId: 'currentReferralRewardId'
  };

  export type EchoAppScalarFieldEnum = (typeof EchoAppScalarFieldEnum)[keyof typeof EchoAppScalarFieldEnum]


  export const AppMembershipScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    echoAppId: 'echoAppId',
    role: 'role',
    status: 'status',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    totalSpent: 'totalSpent',
    amountSpent: 'amountSpent',
    referrerId: 'referrerId'
  };

  export type AppMembershipScalarFieldEnum = (typeof AppMembershipScalarFieldEnum)[keyof typeof AppMembershipScalarFieldEnum]


  export const ApiKeyScalarFieldEnum: {
    id: 'id',
    keyHash: 'keyHash',
    name: 'name',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    lastUsed: 'lastUsed',
    metadata: 'metadata',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    userId: 'userId',
    echoAppId: 'echoAppId',
    scope: 'scope'
  };

  export type ApiKeyScalarFieldEnum = (typeof ApiKeyScalarFieldEnum)[keyof typeof ApiKeyScalarFieldEnum]


  export const RefreshTokenScalarFieldEnum: {
    id: 'id',
    token: 'token',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    userId: 'userId',
    echoAppId: 'echoAppId',
    scope: 'scope',
    sessionId: 'sessionId'
  };

  export type RefreshTokenScalarFieldEnum = (typeof RefreshTokenScalarFieldEnum)[keyof typeof RefreshTokenScalarFieldEnum]


  export const AppSessionScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    echoAppId: 'echoAppId',
    deviceName: 'deviceName',
    userAgent: 'userAgent',
    ipAddress: 'ipAddress',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    lastSeenAt: 'lastSeenAt',
    revokedAt: 'revokedAt',
    isArchived: 'isArchived'
  };

  export type AppSessionScalarFieldEnum = (typeof AppSessionScalarFieldEnum)[keyof typeof AppSessionScalarFieldEnum]


  export const PaymentScalarFieldEnum: {
    id: 'id',
    paymentId: 'paymentId',
    amount: 'amount',
    currency: 'currency',
    status: 'status',
    description: 'description',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    userId: 'userId',
    spendPoolId: 'spendPoolId'
  };

  export type PaymentScalarFieldEnum = (typeof PaymentScalarFieldEnum)[keyof typeof PaymentScalarFieldEnum]


  export const MarkUpScalarFieldEnum: {
    id: 'id',
    amount: 'amount',
    description: 'description',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    echoAppId: 'echoAppId'
  };

  export type MarkUpScalarFieldEnum = (typeof MarkUpScalarFieldEnum)[keyof typeof MarkUpScalarFieldEnum]


  export const GithubLinkScalarFieldEnum: {
    id: 'id',
    githubId: 'githubId',
    githubType: 'githubType',
    githubUrl: 'githubUrl',
    description: 'description',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    echoAppId: 'echoAppId'
  };

  export type GithubLinkScalarFieldEnum = (typeof GithubLinkScalarFieldEnum)[keyof typeof GithubLinkScalarFieldEnum]


  export const TransactionScalarFieldEnum: {
    id: 'id',
    transactionMetadataId: 'transactionMetadataId',
    totalCost: 'totalCost',
    appProfit: 'appProfit',
    markUpProfit: 'markUpProfit',
    referralProfit: 'referralProfit',
    rawTransactionCost: 'rawTransactionCost',
    status: 'status',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    createdAt: 'createdAt',
    userId: 'userId',
    echoAppId: 'echoAppId',
    apiKeyId: 'apiKeyId',
    markUpId: 'markUpId',
    githubLinkId: 'githubLinkId',
    spendPoolId: 'spendPoolId',
    userSpendPoolUsageId: 'userSpendPoolUsageId',
    referralCodeId: 'referralCodeId',
    referrerRewardId: 'referrerRewardId'
  };

  export type TransactionScalarFieldEnum = (typeof TransactionScalarFieldEnum)[keyof typeof TransactionScalarFieldEnum]


  export const SpendPoolScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    totalPaid: 'totalPaid',
    perUserSpendLimit: 'perUserSpendLimit',
    totalSpent: 'totalSpent',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    echoAppId: 'echoAppId'
  };

  export type SpendPoolScalarFieldEnum = (typeof SpendPoolScalarFieldEnum)[keyof typeof SpendPoolScalarFieldEnum]


  export const UserSpendPoolUsageScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    spendPoolId: 'spendPoolId',
    totalSpent: 'totalSpent',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserSpendPoolUsageScalarFieldEnum = (typeof UserSpendPoolUsageScalarFieldEnum)[keyof typeof UserSpendPoolUsageScalarFieldEnum]


  export const TransactionMetadataScalarFieldEnum: {
    id: 'id',
    providerId: 'providerId',
    provider: 'provider',
    model: 'model',
    inputTokens: 'inputTokens',
    outputTokens: 'outputTokens',
    totalTokens: 'totalTokens',
    toolCost: 'toolCost',
    prompt: 'prompt',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type TransactionMetadataScalarFieldEnum = (typeof TransactionMetadataScalarFieldEnum)[keyof typeof TransactionMetadataScalarFieldEnum]


  export const ReferralCodeScalarFieldEnum: {
    id: 'id',
    code: 'code',
    userId: 'userId',
    echoAppId: 'echoAppId',
    grantType: 'grantType',
    grantAmount: 'grantAmount',
    reusable: 'reusable',
    expiresAt: 'expiresAt',
    isUsed: 'isUsed',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    usedAt: 'usedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ReferralCodeScalarFieldEnum = (typeof ReferralCodeScalarFieldEnum)[keyof typeof ReferralCodeScalarFieldEnum]


  export const ReferralRewardScalarFieldEnum: {
    id: 'id',
    amount: 'amount',
    description: 'description',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    echoAppId: 'echoAppId'
  };

  export type ReferralRewardScalarFieldEnum = (typeof ReferralRewardScalarFieldEnum)[keyof typeof ReferralRewardScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'GithubType'
   */
  export type EnumGithubTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'GithubType'>
    


  /**
   * Reference to a field of type 'GithubType[]'
   */
  export type ListEnumGithubTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'GithubType[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: UuidFilter<"User"> | string
    email?: StringFilter<"User"> | string
    name?: StringNullableFilter<"User"> | string | null
    emailVerified?: DateTimeNullableFilter<"User"> | Date | string | null
    image?: StringNullableFilter<"User"> | string | null
    isArchived?: BoolFilter<"User"> | boolean
    archivedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    totalPaid?: DecimalFilter<"User"> | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFilter<"User"> | Decimal | DecimalJsLike | number | string
    admin?: BoolFilter<"User"> | boolean
    accounts?: AccountListRelationFilter
    sessions?: SessionListRelationFilter
    apiKeys?: ApiKeyListRelationFilter
    appMemberships?: AppMembershipListRelationFilter
    payments?: PaymentListRelationFilter
    refreshTokens?: RefreshTokenListRelationFilter
    transactions?: TransactionListRelationFilter
    spendPoolUsage?: UserSpendPoolUsageListRelationFilter
    ReferralCode?: ReferralCodeListRelationFilter
    appSessions?: AppSessionListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrderInput | SortOrder
    emailVerified?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    totalPaid?: SortOrder
    totalSpent?: SortOrder
    admin?: SortOrder
    accounts?: AccountOrderByRelationAggregateInput
    sessions?: SessionOrderByRelationAggregateInput
    apiKeys?: ApiKeyOrderByRelationAggregateInput
    appMemberships?: AppMembershipOrderByRelationAggregateInput
    payments?: PaymentOrderByRelationAggregateInput
    refreshTokens?: RefreshTokenOrderByRelationAggregateInput
    transactions?: TransactionOrderByRelationAggregateInput
    spendPoolUsage?: UserSpendPoolUsageOrderByRelationAggregateInput
    ReferralCode?: ReferralCodeOrderByRelationAggregateInput
    appSessions?: AppSessionOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringNullableFilter<"User"> | string | null
    emailVerified?: DateTimeNullableFilter<"User"> | Date | string | null
    image?: StringNullableFilter<"User"> | string | null
    isArchived?: BoolFilter<"User"> | boolean
    archivedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    totalPaid?: DecimalFilter<"User"> | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFilter<"User"> | Decimal | DecimalJsLike | number | string
    admin?: BoolFilter<"User"> | boolean
    accounts?: AccountListRelationFilter
    sessions?: SessionListRelationFilter
    apiKeys?: ApiKeyListRelationFilter
    appMemberships?: AppMembershipListRelationFilter
    payments?: PaymentListRelationFilter
    refreshTokens?: RefreshTokenListRelationFilter
    transactions?: TransactionListRelationFilter
    spendPoolUsage?: UserSpendPoolUsageListRelationFilter
    ReferralCode?: ReferralCodeListRelationFilter
    appSessions?: AppSessionListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrderInput | SortOrder
    emailVerified?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    totalPaid?: SortOrder
    totalSpent?: SortOrder
    admin?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    name?: StringNullableWithAggregatesFilter<"User"> | string | null
    emailVerified?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    image?: StringNullableWithAggregatesFilter<"User"> | string | null
    isArchived?: BoolWithAggregatesFilter<"User"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    totalPaid?: DecimalWithAggregatesFilter<"User"> | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalWithAggregatesFilter<"User"> | Decimal | DecimalJsLike | number | string
    admin?: BoolWithAggregatesFilter<"User"> | boolean
  }

  export type AccountWhereInput = {
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    userId?: UuidFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    createdAt?: DateTimeFilter<"Account"> | Date | string
    updatedAt?: DateTimeFilter<"Account"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type AccountOrderByWithRelationInput = {
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrderInput | SortOrder
    access_token?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    token_type?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    id_token?: SortOrderInput | SortOrder
    session_state?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type AccountWhereUniqueInput = Prisma.AtLeast<{
    provider_providerAccountId?: AccountProviderProviderAccountIdCompoundUniqueInput
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    userId?: UuidFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    createdAt?: DateTimeFilter<"Account"> | Date | string
    updatedAt?: DateTimeFilter<"Account"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "provider_providerAccountId">

  export type AccountOrderByWithAggregationInput = {
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrderInput | SortOrder
    access_token?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    token_type?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    id_token?: SortOrderInput | SortOrder
    session_state?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AccountCountOrderByAggregateInput
    _avg?: AccountAvgOrderByAggregateInput
    _max?: AccountMaxOrderByAggregateInput
    _min?: AccountMinOrderByAggregateInput
    _sum?: AccountSumOrderByAggregateInput
  }

  export type AccountScalarWhereWithAggregatesInput = {
    AND?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    OR?: AccountScalarWhereWithAggregatesInput[]
    NOT?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    userId?: UuidWithAggregatesFilter<"Account"> | string
    type?: StringWithAggregatesFilter<"Account"> | string
    provider?: StringWithAggregatesFilter<"Account"> | string
    providerAccountId?: StringWithAggregatesFilter<"Account"> | string
    refresh_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    access_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    expires_at?: IntNullableWithAggregatesFilter<"Account"> | number | null
    token_type?: StringNullableWithAggregatesFilter<"Account"> | string | null
    scope?: StringNullableWithAggregatesFilter<"Account"> | string | null
    id_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    session_state?: StringNullableWithAggregatesFilter<"Account"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Account"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Account"> | Date | string
  }

  export type SessionWhereInput = {
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    sessionToken?: StringFilter<"Session"> | string
    userId?: UuidFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type SessionOrderByWithRelationInput = {
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type SessionWhereUniqueInput = Prisma.AtLeast<{
    sessionToken?: string
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    userId?: UuidFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "sessionToken">

  export type SessionOrderByWithAggregationInput = {
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SessionCountOrderByAggregateInput
    _max?: SessionMaxOrderByAggregateInput
    _min?: SessionMinOrderByAggregateInput
  }

  export type SessionScalarWhereWithAggregatesInput = {
    AND?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    OR?: SessionScalarWhereWithAggregatesInput[]
    NOT?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    sessionToken?: StringWithAggregatesFilter<"Session"> | string
    userId?: UuidWithAggregatesFilter<"Session"> | string
    expires?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
  }

  export type VerificationTokenWhereInput = {
    AND?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    OR?: VerificationTokenWhereInput[]
    NOT?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    identifier?: StringFilter<"VerificationToken"> | string
    token?: StringFilter<"VerificationToken"> | string
    expires?: DateTimeFilter<"VerificationToken"> | Date | string
  }

  export type VerificationTokenOrderByWithRelationInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type VerificationTokenWhereUniqueInput = Prisma.AtLeast<{
    identifier_token?: VerificationTokenIdentifierTokenCompoundUniqueInput
    AND?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    OR?: VerificationTokenWhereInput[]
    NOT?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    identifier?: StringFilter<"VerificationToken"> | string
    token?: StringFilter<"VerificationToken"> | string
    expires?: DateTimeFilter<"VerificationToken"> | Date | string
  }, "identifier_token">

  export type VerificationTokenOrderByWithAggregationInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
    _count?: VerificationTokenCountOrderByAggregateInput
    _max?: VerificationTokenMaxOrderByAggregateInput
    _min?: VerificationTokenMinOrderByAggregateInput
  }

  export type VerificationTokenScalarWhereWithAggregatesInput = {
    AND?: VerificationTokenScalarWhereWithAggregatesInput | VerificationTokenScalarWhereWithAggregatesInput[]
    OR?: VerificationTokenScalarWhereWithAggregatesInput[]
    NOT?: VerificationTokenScalarWhereWithAggregatesInput | VerificationTokenScalarWhereWithAggregatesInput[]
    identifier?: StringWithAggregatesFilter<"VerificationToken"> | string
    token?: StringWithAggregatesFilter<"VerificationToken"> | string
    expires?: DateTimeWithAggregatesFilter<"VerificationToken"> | Date | string
  }

  export type EchoAppWhereInput = {
    AND?: EchoAppWhereInput | EchoAppWhereInput[]
    OR?: EchoAppWhereInput[]
    NOT?: EchoAppWhereInput | EchoAppWhereInput[]
    id?: UuidFilter<"EchoApp"> | string
    name?: StringFilter<"EchoApp"> | string
    description?: StringNullableFilter<"EchoApp"> | string | null
    profilePictureUrl?: StringNullableFilter<"EchoApp"> | string | null
    bannerImageUrl?: StringNullableFilter<"EchoApp"> | string | null
    homepageUrl?: StringNullableFilter<"EchoApp"> | string | null
    isPublic?: BoolFilter<"EchoApp"> | boolean
    isArchived?: BoolFilter<"EchoApp"> | boolean
    archivedAt?: DateTimeNullableFilter<"EchoApp"> | Date | string | null
    createdAt?: DateTimeFilter<"EchoApp"> | Date | string
    updatedAt?: DateTimeFilter<"EchoApp"> | Date | string
    authorizedCallbackUrls?: StringNullableListFilter<"EchoApp">
    currentReferralRewardId?: UuidNullableFilter<"EchoApp"> | string | null
    apiKeys?: ApiKeyListRelationFilter
    Transactions?: TransactionListRelationFilter
    refreshTokens?: RefreshTokenListRelationFilter
    appMemberships?: AppMembershipListRelationFilter
    markUp?: XOR<MarkUpNullableScalarRelationFilter, MarkUpWhereInput> | null
    githubLink?: XOR<GithubLinkNullableScalarRelationFilter, GithubLinkWhereInput> | null
    spendPools?: SpendPoolListRelationFilter
    ReferralCode?: ReferralCodeListRelationFilter
    currentReferralReward?: XOR<ReferralRewardNullableScalarRelationFilter, ReferralRewardWhereInput> | null
    ReferralRewards?: ReferralRewardListRelationFilter
    appSessions?: AppSessionListRelationFilter
  }

  export type EchoAppOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    profilePictureUrl?: SortOrderInput | SortOrder
    bannerImageUrl?: SortOrderInput | SortOrder
    homepageUrl?: SortOrderInput | SortOrder
    isPublic?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    authorizedCallbackUrls?: SortOrder
    currentReferralRewardId?: SortOrderInput | SortOrder
    apiKeys?: ApiKeyOrderByRelationAggregateInput
    Transactions?: TransactionOrderByRelationAggregateInput
    refreshTokens?: RefreshTokenOrderByRelationAggregateInput
    appMemberships?: AppMembershipOrderByRelationAggregateInput
    markUp?: MarkUpOrderByWithRelationInput
    githubLink?: GithubLinkOrderByWithRelationInput
    spendPools?: SpendPoolOrderByRelationAggregateInput
    ReferralCode?: ReferralCodeOrderByRelationAggregateInput
    currentReferralReward?: ReferralRewardOrderByWithRelationInput
    ReferralRewards?: ReferralRewardOrderByRelationAggregateInput
    appSessions?: AppSessionOrderByRelationAggregateInput
  }

  export type EchoAppWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EchoAppWhereInput | EchoAppWhereInput[]
    OR?: EchoAppWhereInput[]
    NOT?: EchoAppWhereInput | EchoAppWhereInput[]
    name?: StringFilter<"EchoApp"> | string
    description?: StringNullableFilter<"EchoApp"> | string | null
    profilePictureUrl?: StringNullableFilter<"EchoApp"> | string | null
    bannerImageUrl?: StringNullableFilter<"EchoApp"> | string | null
    homepageUrl?: StringNullableFilter<"EchoApp"> | string | null
    isPublic?: BoolFilter<"EchoApp"> | boolean
    isArchived?: BoolFilter<"EchoApp"> | boolean
    archivedAt?: DateTimeNullableFilter<"EchoApp"> | Date | string | null
    createdAt?: DateTimeFilter<"EchoApp"> | Date | string
    updatedAt?: DateTimeFilter<"EchoApp"> | Date | string
    authorizedCallbackUrls?: StringNullableListFilter<"EchoApp">
    currentReferralRewardId?: UuidNullableFilter<"EchoApp"> | string | null
    apiKeys?: ApiKeyListRelationFilter
    Transactions?: TransactionListRelationFilter
    refreshTokens?: RefreshTokenListRelationFilter
    appMemberships?: AppMembershipListRelationFilter
    markUp?: XOR<MarkUpNullableScalarRelationFilter, MarkUpWhereInput> | null
    githubLink?: XOR<GithubLinkNullableScalarRelationFilter, GithubLinkWhereInput> | null
    spendPools?: SpendPoolListRelationFilter
    ReferralCode?: ReferralCodeListRelationFilter
    currentReferralReward?: XOR<ReferralRewardNullableScalarRelationFilter, ReferralRewardWhereInput> | null
    ReferralRewards?: ReferralRewardListRelationFilter
    appSessions?: AppSessionListRelationFilter
  }, "id">

  export type EchoAppOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    profilePictureUrl?: SortOrderInput | SortOrder
    bannerImageUrl?: SortOrderInput | SortOrder
    homepageUrl?: SortOrderInput | SortOrder
    isPublic?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    authorizedCallbackUrls?: SortOrder
    currentReferralRewardId?: SortOrderInput | SortOrder
    _count?: EchoAppCountOrderByAggregateInput
    _max?: EchoAppMaxOrderByAggregateInput
    _min?: EchoAppMinOrderByAggregateInput
  }

  export type EchoAppScalarWhereWithAggregatesInput = {
    AND?: EchoAppScalarWhereWithAggregatesInput | EchoAppScalarWhereWithAggregatesInput[]
    OR?: EchoAppScalarWhereWithAggregatesInput[]
    NOT?: EchoAppScalarWhereWithAggregatesInput | EchoAppScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"EchoApp"> | string
    name?: StringWithAggregatesFilter<"EchoApp"> | string
    description?: StringNullableWithAggregatesFilter<"EchoApp"> | string | null
    profilePictureUrl?: StringNullableWithAggregatesFilter<"EchoApp"> | string | null
    bannerImageUrl?: StringNullableWithAggregatesFilter<"EchoApp"> | string | null
    homepageUrl?: StringNullableWithAggregatesFilter<"EchoApp"> | string | null
    isPublic?: BoolWithAggregatesFilter<"EchoApp"> | boolean
    isArchived?: BoolWithAggregatesFilter<"EchoApp"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"EchoApp"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"EchoApp"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"EchoApp"> | Date | string
    authorizedCallbackUrls?: StringNullableListFilter<"EchoApp">
    currentReferralRewardId?: UuidNullableWithAggregatesFilter<"EchoApp"> | string | null
  }

  export type AppMembershipWhereInput = {
    AND?: AppMembershipWhereInput | AppMembershipWhereInput[]
    OR?: AppMembershipWhereInput[]
    NOT?: AppMembershipWhereInput | AppMembershipWhereInput[]
    id?: UuidFilter<"AppMembership"> | string
    userId?: UuidFilter<"AppMembership"> | string
    echoAppId?: UuidFilter<"AppMembership"> | string
    role?: StringFilter<"AppMembership"> | string
    status?: StringFilter<"AppMembership"> | string
    isArchived?: BoolFilter<"AppMembership"> | boolean
    archivedAt?: DateTimeNullableFilter<"AppMembership"> | Date | string | null
    createdAt?: DateTimeFilter<"AppMembership"> | Date | string
    updatedAt?: DateTimeFilter<"AppMembership"> | Date | string
    totalSpent?: DecimalFilter<"AppMembership"> | Decimal | DecimalJsLike | number | string
    amountSpent?: DecimalFilter<"AppMembership"> | Decimal | DecimalJsLike | number | string
    referrerId?: UuidNullableFilter<"AppMembership"> | string | null
    referrer?: XOR<ReferralCodeNullableScalarRelationFilter, ReferralCodeWhereInput> | null
    echoApp?: XOR<EchoAppScalarRelationFilter, EchoAppWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type AppMembershipOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    role?: SortOrder
    status?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    totalSpent?: SortOrder
    amountSpent?: SortOrder
    referrerId?: SortOrderInput | SortOrder
    referrer?: ReferralCodeOrderByWithRelationInput
    echoApp?: EchoAppOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type AppMembershipWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_echoAppId?: AppMembershipUserIdEchoAppIdCompoundUniqueInput
    AND?: AppMembershipWhereInput | AppMembershipWhereInput[]
    OR?: AppMembershipWhereInput[]
    NOT?: AppMembershipWhereInput | AppMembershipWhereInput[]
    userId?: UuidFilter<"AppMembership"> | string
    echoAppId?: UuidFilter<"AppMembership"> | string
    role?: StringFilter<"AppMembership"> | string
    status?: StringFilter<"AppMembership"> | string
    isArchived?: BoolFilter<"AppMembership"> | boolean
    archivedAt?: DateTimeNullableFilter<"AppMembership"> | Date | string | null
    createdAt?: DateTimeFilter<"AppMembership"> | Date | string
    updatedAt?: DateTimeFilter<"AppMembership"> | Date | string
    totalSpent?: DecimalFilter<"AppMembership"> | Decimal | DecimalJsLike | number | string
    amountSpent?: DecimalFilter<"AppMembership"> | Decimal | DecimalJsLike | number | string
    referrerId?: UuidNullableFilter<"AppMembership"> | string | null
    referrer?: XOR<ReferralCodeNullableScalarRelationFilter, ReferralCodeWhereInput> | null
    echoApp?: XOR<EchoAppScalarRelationFilter, EchoAppWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "userId_echoAppId">

  export type AppMembershipOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    role?: SortOrder
    status?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    totalSpent?: SortOrder
    amountSpent?: SortOrder
    referrerId?: SortOrderInput | SortOrder
    _count?: AppMembershipCountOrderByAggregateInput
    _avg?: AppMembershipAvgOrderByAggregateInput
    _max?: AppMembershipMaxOrderByAggregateInput
    _min?: AppMembershipMinOrderByAggregateInput
    _sum?: AppMembershipSumOrderByAggregateInput
  }

  export type AppMembershipScalarWhereWithAggregatesInput = {
    AND?: AppMembershipScalarWhereWithAggregatesInput | AppMembershipScalarWhereWithAggregatesInput[]
    OR?: AppMembershipScalarWhereWithAggregatesInput[]
    NOT?: AppMembershipScalarWhereWithAggregatesInput | AppMembershipScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"AppMembership"> | string
    userId?: UuidWithAggregatesFilter<"AppMembership"> | string
    echoAppId?: UuidWithAggregatesFilter<"AppMembership"> | string
    role?: StringWithAggregatesFilter<"AppMembership"> | string
    status?: StringWithAggregatesFilter<"AppMembership"> | string
    isArchived?: BoolWithAggregatesFilter<"AppMembership"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"AppMembership"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"AppMembership"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AppMembership"> | Date | string
    totalSpent?: DecimalWithAggregatesFilter<"AppMembership"> | Decimal | DecimalJsLike | number | string
    amountSpent?: DecimalWithAggregatesFilter<"AppMembership"> | Decimal | DecimalJsLike | number | string
    referrerId?: UuidNullableWithAggregatesFilter<"AppMembership"> | string | null
  }

  export type ApiKeyWhereInput = {
    AND?: ApiKeyWhereInput | ApiKeyWhereInput[]
    OR?: ApiKeyWhereInput[]
    NOT?: ApiKeyWhereInput | ApiKeyWhereInput[]
    id?: UuidFilter<"ApiKey"> | string
    keyHash?: StringFilter<"ApiKey"> | string
    name?: StringNullableFilter<"ApiKey"> | string | null
    isArchived?: BoolFilter<"ApiKey"> | boolean
    archivedAt?: DateTimeNullableFilter<"ApiKey"> | Date | string | null
    lastUsed?: DateTimeNullableFilter<"ApiKey"> | Date | string | null
    metadata?: JsonNullableFilter<"ApiKey">
    createdAt?: DateTimeFilter<"ApiKey"> | Date | string
    updatedAt?: DateTimeFilter<"ApiKey"> | Date | string
    userId?: UuidFilter<"ApiKey"> | string
    echoAppId?: UuidFilter<"ApiKey"> | string
    scope?: StringFilter<"ApiKey"> | string
    echoApp?: XOR<EchoAppScalarRelationFilter, EchoAppWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    Transactions?: TransactionListRelationFilter
  }

  export type ApiKeyOrderByWithRelationInput = {
    id?: SortOrder
    keyHash?: SortOrder
    name?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    lastUsed?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    scope?: SortOrder
    echoApp?: EchoAppOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    Transactions?: TransactionOrderByRelationAggregateInput
  }

  export type ApiKeyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    keyHash?: string
    AND?: ApiKeyWhereInput | ApiKeyWhereInput[]
    OR?: ApiKeyWhereInput[]
    NOT?: ApiKeyWhereInput | ApiKeyWhereInput[]
    name?: StringNullableFilter<"ApiKey"> | string | null
    isArchived?: BoolFilter<"ApiKey"> | boolean
    archivedAt?: DateTimeNullableFilter<"ApiKey"> | Date | string | null
    lastUsed?: DateTimeNullableFilter<"ApiKey"> | Date | string | null
    metadata?: JsonNullableFilter<"ApiKey">
    createdAt?: DateTimeFilter<"ApiKey"> | Date | string
    updatedAt?: DateTimeFilter<"ApiKey"> | Date | string
    userId?: UuidFilter<"ApiKey"> | string
    echoAppId?: UuidFilter<"ApiKey"> | string
    scope?: StringFilter<"ApiKey"> | string
    echoApp?: XOR<EchoAppScalarRelationFilter, EchoAppWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    Transactions?: TransactionListRelationFilter
  }, "id" | "keyHash">

  export type ApiKeyOrderByWithAggregationInput = {
    id?: SortOrder
    keyHash?: SortOrder
    name?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    lastUsed?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    scope?: SortOrder
    _count?: ApiKeyCountOrderByAggregateInput
    _max?: ApiKeyMaxOrderByAggregateInput
    _min?: ApiKeyMinOrderByAggregateInput
  }

  export type ApiKeyScalarWhereWithAggregatesInput = {
    AND?: ApiKeyScalarWhereWithAggregatesInput | ApiKeyScalarWhereWithAggregatesInput[]
    OR?: ApiKeyScalarWhereWithAggregatesInput[]
    NOT?: ApiKeyScalarWhereWithAggregatesInput | ApiKeyScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"ApiKey"> | string
    keyHash?: StringWithAggregatesFilter<"ApiKey"> | string
    name?: StringNullableWithAggregatesFilter<"ApiKey"> | string | null
    isArchived?: BoolWithAggregatesFilter<"ApiKey"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"ApiKey"> | Date | string | null
    lastUsed?: DateTimeNullableWithAggregatesFilter<"ApiKey"> | Date | string | null
    metadata?: JsonNullableWithAggregatesFilter<"ApiKey">
    createdAt?: DateTimeWithAggregatesFilter<"ApiKey"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ApiKey"> | Date | string
    userId?: UuidWithAggregatesFilter<"ApiKey"> | string
    echoAppId?: UuidWithAggregatesFilter<"ApiKey"> | string
    scope?: StringWithAggregatesFilter<"ApiKey"> | string
  }

  export type RefreshTokenWhereInput = {
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    id?: UuidFilter<"RefreshToken"> | string
    token?: StringFilter<"RefreshToken"> | string
    isArchived?: BoolFilter<"RefreshToken"> | boolean
    archivedAt?: DateTimeNullableFilter<"RefreshToken"> | Date | string | null
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    updatedAt?: DateTimeFilter<"RefreshToken"> | Date | string
    userId?: UuidFilter<"RefreshToken"> | string
    echoAppId?: UuidFilter<"RefreshToken"> | string
    scope?: StringFilter<"RefreshToken"> | string
    sessionId?: UuidNullableFilter<"RefreshToken"> | string | null
    echoApp?: XOR<EchoAppScalarRelationFilter, EchoAppWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    session?: XOR<AppSessionNullableScalarRelationFilter, AppSessionWhereInput> | null
  }

  export type RefreshTokenOrderByWithRelationInput = {
    id?: SortOrder
    token?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    scope?: SortOrder
    sessionId?: SortOrderInput | SortOrder
    echoApp?: EchoAppOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    session?: AppSessionOrderByWithRelationInput
  }

  export type RefreshTokenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    isArchived?: BoolFilter<"RefreshToken"> | boolean
    archivedAt?: DateTimeNullableFilter<"RefreshToken"> | Date | string | null
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    updatedAt?: DateTimeFilter<"RefreshToken"> | Date | string
    userId?: UuidFilter<"RefreshToken"> | string
    echoAppId?: UuidFilter<"RefreshToken"> | string
    scope?: StringFilter<"RefreshToken"> | string
    sessionId?: UuidNullableFilter<"RefreshToken"> | string | null
    echoApp?: XOR<EchoAppScalarRelationFilter, EchoAppWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    session?: XOR<AppSessionNullableScalarRelationFilter, AppSessionWhereInput> | null
  }, "id" | "token">

  export type RefreshTokenOrderByWithAggregationInput = {
    id?: SortOrder
    token?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    scope?: SortOrder
    sessionId?: SortOrderInput | SortOrder
    _count?: RefreshTokenCountOrderByAggregateInput
    _max?: RefreshTokenMaxOrderByAggregateInput
    _min?: RefreshTokenMinOrderByAggregateInput
  }

  export type RefreshTokenScalarWhereWithAggregatesInput = {
    AND?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    OR?: RefreshTokenScalarWhereWithAggregatesInput[]
    NOT?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"RefreshToken"> | string
    token?: StringWithAggregatesFilter<"RefreshToken"> | string
    isArchived?: BoolWithAggregatesFilter<"RefreshToken"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"RefreshToken"> | Date | string | null
    expiresAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
    userId?: UuidWithAggregatesFilter<"RefreshToken"> | string
    echoAppId?: UuidWithAggregatesFilter<"RefreshToken"> | string
    scope?: StringWithAggregatesFilter<"RefreshToken"> | string
    sessionId?: UuidNullableWithAggregatesFilter<"RefreshToken"> | string | null
  }

  export type AppSessionWhereInput = {
    AND?: AppSessionWhereInput | AppSessionWhereInput[]
    OR?: AppSessionWhereInput[]
    NOT?: AppSessionWhereInput | AppSessionWhereInput[]
    id?: UuidFilter<"AppSession"> | string
    userId?: UuidFilter<"AppSession"> | string
    echoAppId?: UuidFilter<"AppSession"> | string
    deviceName?: StringNullableFilter<"AppSession"> | string | null
    userAgent?: StringNullableFilter<"AppSession"> | string | null
    ipAddress?: StringNullableFilter<"AppSession"> | string | null
    createdAt?: DateTimeFilter<"AppSession"> | Date | string
    updatedAt?: DateTimeFilter<"AppSession"> | Date | string
    lastSeenAt?: DateTimeNullableFilter<"AppSession"> | Date | string | null
    revokedAt?: DateTimeNullableFilter<"AppSession"> | Date | string | null
    isArchived?: BoolFilter<"AppSession"> | boolean
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    echoApp?: XOR<EchoAppScalarRelationFilter, EchoAppWhereInput>
    refreshTokens?: RefreshTokenListRelationFilter
  }

  export type AppSessionOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    deviceName?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastSeenAt?: SortOrderInput | SortOrder
    revokedAt?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    user?: UserOrderByWithRelationInput
    echoApp?: EchoAppOrderByWithRelationInput
    refreshTokens?: RefreshTokenOrderByRelationAggregateInput
  }

  export type AppSessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AppSessionWhereInput | AppSessionWhereInput[]
    OR?: AppSessionWhereInput[]
    NOT?: AppSessionWhereInput | AppSessionWhereInput[]
    userId?: UuidFilter<"AppSession"> | string
    echoAppId?: UuidFilter<"AppSession"> | string
    deviceName?: StringNullableFilter<"AppSession"> | string | null
    userAgent?: StringNullableFilter<"AppSession"> | string | null
    ipAddress?: StringNullableFilter<"AppSession"> | string | null
    createdAt?: DateTimeFilter<"AppSession"> | Date | string
    updatedAt?: DateTimeFilter<"AppSession"> | Date | string
    lastSeenAt?: DateTimeNullableFilter<"AppSession"> | Date | string | null
    revokedAt?: DateTimeNullableFilter<"AppSession"> | Date | string | null
    isArchived?: BoolFilter<"AppSession"> | boolean
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    echoApp?: XOR<EchoAppScalarRelationFilter, EchoAppWhereInput>
    refreshTokens?: RefreshTokenListRelationFilter
  }, "id">

  export type AppSessionOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    deviceName?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastSeenAt?: SortOrderInput | SortOrder
    revokedAt?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    _count?: AppSessionCountOrderByAggregateInput
    _max?: AppSessionMaxOrderByAggregateInput
    _min?: AppSessionMinOrderByAggregateInput
  }

  export type AppSessionScalarWhereWithAggregatesInput = {
    AND?: AppSessionScalarWhereWithAggregatesInput | AppSessionScalarWhereWithAggregatesInput[]
    OR?: AppSessionScalarWhereWithAggregatesInput[]
    NOT?: AppSessionScalarWhereWithAggregatesInput | AppSessionScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"AppSession"> | string
    userId?: UuidWithAggregatesFilter<"AppSession"> | string
    echoAppId?: UuidWithAggregatesFilter<"AppSession"> | string
    deviceName?: StringNullableWithAggregatesFilter<"AppSession"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"AppSession"> | string | null
    ipAddress?: StringNullableWithAggregatesFilter<"AppSession"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"AppSession"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AppSession"> | Date | string
    lastSeenAt?: DateTimeNullableWithAggregatesFilter<"AppSession"> | Date | string | null
    revokedAt?: DateTimeNullableWithAggregatesFilter<"AppSession"> | Date | string | null
    isArchived?: BoolWithAggregatesFilter<"AppSession"> | boolean
  }

  export type PaymentWhereInput = {
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    id?: UuidFilter<"Payment"> | string
    paymentId?: StringFilter<"Payment"> | string
    amount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Payment"> | string
    status?: StringFilter<"Payment"> | string
    description?: StringNullableFilter<"Payment"> | string | null
    isArchived?: BoolFilter<"Payment"> | boolean
    archivedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    userId?: UuidFilter<"Payment"> | string
    spendPoolId?: UuidNullableFilter<"Payment"> | string | null
    spendPool?: XOR<SpendPoolNullableScalarRelationFilter, SpendPoolWhereInput> | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type PaymentOrderByWithRelationInput = {
    id?: SortOrder
    paymentId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    description?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    spendPoolId?: SortOrderInput | SortOrder
    spendPool?: SpendPoolOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type PaymentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    paymentId?: string
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    amount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Payment"> | string
    status?: StringFilter<"Payment"> | string
    description?: StringNullableFilter<"Payment"> | string | null
    isArchived?: BoolFilter<"Payment"> | boolean
    archivedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    userId?: UuidFilter<"Payment"> | string
    spendPoolId?: UuidNullableFilter<"Payment"> | string | null
    spendPool?: XOR<SpendPoolNullableScalarRelationFilter, SpendPoolWhereInput> | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "paymentId">

  export type PaymentOrderByWithAggregationInput = {
    id?: SortOrder
    paymentId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    description?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    spendPoolId?: SortOrderInput | SortOrder
    _count?: PaymentCountOrderByAggregateInput
    _avg?: PaymentAvgOrderByAggregateInput
    _max?: PaymentMaxOrderByAggregateInput
    _min?: PaymentMinOrderByAggregateInput
    _sum?: PaymentSumOrderByAggregateInput
  }

  export type PaymentScalarWhereWithAggregatesInput = {
    AND?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    OR?: PaymentScalarWhereWithAggregatesInput[]
    NOT?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"Payment"> | string
    paymentId?: StringWithAggregatesFilter<"Payment"> | string
    amount?: DecimalWithAggregatesFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    currency?: StringWithAggregatesFilter<"Payment"> | string
    status?: StringWithAggregatesFilter<"Payment"> | string
    description?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    isArchived?: BoolWithAggregatesFilter<"Payment"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"Payment"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
    userId?: UuidWithAggregatesFilter<"Payment"> | string
    spendPoolId?: UuidNullableWithAggregatesFilter<"Payment"> | string | null
  }

  export type MarkUpWhereInput = {
    AND?: MarkUpWhereInput | MarkUpWhereInput[]
    OR?: MarkUpWhereInput[]
    NOT?: MarkUpWhereInput | MarkUpWhereInput[]
    id?: UuidFilter<"MarkUp"> | string
    amount?: DecimalFilter<"MarkUp"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"MarkUp"> | string | null
    isArchived?: BoolFilter<"MarkUp"> | boolean
    archivedAt?: DateTimeNullableFilter<"MarkUp"> | Date | string | null
    createdAt?: DateTimeFilter<"MarkUp"> | Date | string
    updatedAt?: DateTimeFilter<"MarkUp"> | Date | string
    echoAppId?: UuidFilter<"MarkUp"> | string
    echoApp?: XOR<EchoAppScalarRelationFilter, EchoAppWhereInput>
    Transactions?: TransactionListRelationFilter
  }

  export type MarkUpOrderByWithRelationInput = {
    id?: SortOrder
    amount?: SortOrder
    description?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
    echoApp?: EchoAppOrderByWithRelationInput
    Transactions?: TransactionOrderByRelationAggregateInput
  }

  export type MarkUpWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    echoAppId?: string
    AND?: MarkUpWhereInput | MarkUpWhereInput[]
    OR?: MarkUpWhereInput[]
    NOT?: MarkUpWhereInput | MarkUpWhereInput[]
    amount?: DecimalFilter<"MarkUp"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"MarkUp"> | string | null
    isArchived?: BoolFilter<"MarkUp"> | boolean
    archivedAt?: DateTimeNullableFilter<"MarkUp"> | Date | string | null
    createdAt?: DateTimeFilter<"MarkUp"> | Date | string
    updatedAt?: DateTimeFilter<"MarkUp"> | Date | string
    echoApp?: XOR<EchoAppScalarRelationFilter, EchoAppWhereInput>
    Transactions?: TransactionListRelationFilter
  }, "id" | "echoAppId">

  export type MarkUpOrderByWithAggregationInput = {
    id?: SortOrder
    amount?: SortOrder
    description?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
    _count?: MarkUpCountOrderByAggregateInput
    _avg?: MarkUpAvgOrderByAggregateInput
    _max?: MarkUpMaxOrderByAggregateInput
    _min?: MarkUpMinOrderByAggregateInput
    _sum?: MarkUpSumOrderByAggregateInput
  }

  export type MarkUpScalarWhereWithAggregatesInput = {
    AND?: MarkUpScalarWhereWithAggregatesInput | MarkUpScalarWhereWithAggregatesInput[]
    OR?: MarkUpScalarWhereWithAggregatesInput[]
    NOT?: MarkUpScalarWhereWithAggregatesInput | MarkUpScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"MarkUp"> | string
    amount?: DecimalWithAggregatesFilter<"MarkUp"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableWithAggregatesFilter<"MarkUp"> | string | null
    isArchived?: BoolWithAggregatesFilter<"MarkUp"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"MarkUp"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"MarkUp"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"MarkUp"> | Date | string
    echoAppId?: UuidWithAggregatesFilter<"MarkUp"> | string
  }

  export type GithubLinkWhereInput = {
    AND?: GithubLinkWhereInput | GithubLinkWhereInput[]
    OR?: GithubLinkWhereInput[]
    NOT?: GithubLinkWhereInput | GithubLinkWhereInput[]
    id?: UuidFilter<"GithubLink"> | string
    githubId?: IntFilter<"GithubLink"> | number
    githubType?: EnumGithubTypeFilter<"GithubLink"> | $Enums.GithubType
    githubUrl?: StringFilter<"GithubLink"> | string
    description?: StringNullableFilter<"GithubLink"> | string | null
    isArchived?: BoolFilter<"GithubLink"> | boolean
    archivedAt?: DateTimeNullableFilter<"GithubLink"> | Date | string | null
    createdAt?: DateTimeFilter<"GithubLink"> | Date | string
    updatedAt?: DateTimeFilter<"GithubLink"> | Date | string
    echoAppId?: UuidFilter<"GithubLink"> | string
    echoApp?: XOR<EchoAppScalarRelationFilter, EchoAppWhereInput>
    Transactions?: TransactionListRelationFilter
  }

  export type GithubLinkOrderByWithRelationInput = {
    id?: SortOrder
    githubId?: SortOrder
    githubType?: SortOrder
    githubUrl?: SortOrder
    description?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
    echoApp?: EchoAppOrderByWithRelationInput
    Transactions?: TransactionOrderByRelationAggregateInput
  }

  export type GithubLinkWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    echoAppId?: string
    AND?: GithubLinkWhereInput | GithubLinkWhereInput[]
    OR?: GithubLinkWhereInput[]
    NOT?: GithubLinkWhereInput | GithubLinkWhereInput[]
    githubId?: IntFilter<"GithubLink"> | number
    githubType?: EnumGithubTypeFilter<"GithubLink"> | $Enums.GithubType
    githubUrl?: StringFilter<"GithubLink"> | string
    description?: StringNullableFilter<"GithubLink"> | string | null
    isArchived?: BoolFilter<"GithubLink"> | boolean
    archivedAt?: DateTimeNullableFilter<"GithubLink"> | Date | string | null
    createdAt?: DateTimeFilter<"GithubLink"> | Date | string
    updatedAt?: DateTimeFilter<"GithubLink"> | Date | string
    echoApp?: XOR<EchoAppScalarRelationFilter, EchoAppWhereInput>
    Transactions?: TransactionListRelationFilter
  }, "id" | "echoAppId">

  export type GithubLinkOrderByWithAggregationInput = {
    id?: SortOrder
    githubId?: SortOrder
    githubType?: SortOrder
    githubUrl?: SortOrder
    description?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
    _count?: GithubLinkCountOrderByAggregateInput
    _avg?: GithubLinkAvgOrderByAggregateInput
    _max?: GithubLinkMaxOrderByAggregateInput
    _min?: GithubLinkMinOrderByAggregateInput
    _sum?: GithubLinkSumOrderByAggregateInput
  }

  export type GithubLinkScalarWhereWithAggregatesInput = {
    AND?: GithubLinkScalarWhereWithAggregatesInput | GithubLinkScalarWhereWithAggregatesInput[]
    OR?: GithubLinkScalarWhereWithAggregatesInput[]
    NOT?: GithubLinkScalarWhereWithAggregatesInput | GithubLinkScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"GithubLink"> | string
    githubId?: IntWithAggregatesFilter<"GithubLink"> | number
    githubType?: EnumGithubTypeWithAggregatesFilter<"GithubLink"> | $Enums.GithubType
    githubUrl?: StringWithAggregatesFilter<"GithubLink"> | string
    description?: StringNullableWithAggregatesFilter<"GithubLink"> | string | null
    isArchived?: BoolWithAggregatesFilter<"GithubLink"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"GithubLink"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"GithubLink"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"GithubLink"> | Date | string
    echoAppId?: UuidWithAggregatesFilter<"GithubLink"> | string
  }

  export type TransactionWhereInput = {
    AND?: TransactionWhereInput | TransactionWhereInput[]
    OR?: TransactionWhereInput[]
    NOT?: TransactionWhereInput | TransactionWhereInput[]
    id?: UuidFilter<"Transaction"> | string
    transactionMetadataId?: UuidNullableFilter<"Transaction"> | string | null
    totalCost?: DecimalFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    status?: StringNullableFilter<"Transaction"> | string | null
    isArchived?: BoolFilter<"Transaction"> | boolean
    archivedAt?: DateTimeNullableFilter<"Transaction"> | Date | string | null
    createdAt?: DateTimeFilter<"Transaction"> | Date | string
    userId?: UuidFilter<"Transaction"> | string
    echoAppId?: UuidFilter<"Transaction"> | string
    apiKeyId?: UuidNullableFilter<"Transaction"> | string | null
    markUpId?: UuidNullableFilter<"Transaction"> | string | null
    githubLinkId?: UuidNullableFilter<"Transaction"> | string | null
    spendPoolId?: UuidNullableFilter<"Transaction"> | string | null
    userSpendPoolUsageId?: UuidNullableFilter<"Transaction"> | string | null
    referralCodeId?: UuidNullableFilter<"Transaction"> | string | null
    referrerRewardId?: UuidNullableFilter<"Transaction"> | string | null
    apiKey?: XOR<ApiKeyNullableScalarRelationFilter, ApiKeyWhereInput> | null
    echoApp?: XOR<EchoAppScalarRelationFilter, EchoAppWhereInput>
    githubLink?: XOR<GithubLinkNullableScalarRelationFilter, GithubLinkWhereInput> | null
    markUp?: XOR<MarkUpNullableScalarRelationFilter, MarkUpWhereInput> | null
    spendPool?: XOR<SpendPoolNullableScalarRelationFilter, SpendPoolWhereInput> | null
    transactionMetadata?: XOR<TransactionMetadataNullableScalarRelationFilter, TransactionMetadataWhereInput> | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    userSpendPoolUsage?: XOR<UserSpendPoolUsageNullableScalarRelationFilter, UserSpendPoolUsageWhereInput> | null
    referralCode?: XOR<ReferralCodeNullableScalarRelationFilter, ReferralCodeWhereInput> | null
    referrerReward?: XOR<ReferralRewardNullableScalarRelationFilter, ReferralRewardWhereInput> | null
  }

  export type TransactionOrderByWithRelationInput = {
    id?: SortOrder
    transactionMetadataId?: SortOrderInput | SortOrder
    totalCost?: SortOrder
    appProfit?: SortOrder
    markUpProfit?: SortOrder
    referralProfit?: SortOrder
    rawTransactionCost?: SortOrder
    status?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    apiKeyId?: SortOrderInput | SortOrder
    markUpId?: SortOrderInput | SortOrder
    githubLinkId?: SortOrderInput | SortOrder
    spendPoolId?: SortOrderInput | SortOrder
    userSpendPoolUsageId?: SortOrderInput | SortOrder
    referralCodeId?: SortOrderInput | SortOrder
    referrerRewardId?: SortOrderInput | SortOrder
    apiKey?: ApiKeyOrderByWithRelationInput
    echoApp?: EchoAppOrderByWithRelationInput
    githubLink?: GithubLinkOrderByWithRelationInput
    markUp?: MarkUpOrderByWithRelationInput
    spendPool?: SpendPoolOrderByWithRelationInput
    transactionMetadata?: TransactionMetadataOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    userSpendPoolUsage?: UserSpendPoolUsageOrderByWithRelationInput
    referralCode?: ReferralCodeOrderByWithRelationInput
    referrerReward?: ReferralRewardOrderByWithRelationInput
  }

  export type TransactionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TransactionWhereInput | TransactionWhereInput[]
    OR?: TransactionWhereInput[]
    NOT?: TransactionWhereInput | TransactionWhereInput[]
    transactionMetadataId?: UuidNullableFilter<"Transaction"> | string | null
    totalCost?: DecimalFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    status?: StringNullableFilter<"Transaction"> | string | null
    isArchived?: BoolFilter<"Transaction"> | boolean
    archivedAt?: DateTimeNullableFilter<"Transaction"> | Date | string | null
    createdAt?: DateTimeFilter<"Transaction"> | Date | string
    userId?: UuidFilter<"Transaction"> | string
    echoAppId?: UuidFilter<"Transaction"> | string
    apiKeyId?: UuidNullableFilter<"Transaction"> | string | null
    markUpId?: UuidNullableFilter<"Transaction"> | string | null
    githubLinkId?: UuidNullableFilter<"Transaction"> | string | null
    spendPoolId?: UuidNullableFilter<"Transaction"> | string | null
    userSpendPoolUsageId?: UuidNullableFilter<"Transaction"> | string | null
    referralCodeId?: UuidNullableFilter<"Transaction"> | string | null
    referrerRewardId?: UuidNullableFilter<"Transaction"> | string | null
    apiKey?: XOR<ApiKeyNullableScalarRelationFilter, ApiKeyWhereInput> | null
    echoApp?: XOR<EchoAppScalarRelationFilter, EchoAppWhereInput>
    githubLink?: XOR<GithubLinkNullableScalarRelationFilter, GithubLinkWhereInput> | null
    markUp?: XOR<MarkUpNullableScalarRelationFilter, MarkUpWhereInput> | null
    spendPool?: XOR<SpendPoolNullableScalarRelationFilter, SpendPoolWhereInput> | null
    transactionMetadata?: XOR<TransactionMetadataNullableScalarRelationFilter, TransactionMetadataWhereInput> | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    userSpendPoolUsage?: XOR<UserSpendPoolUsageNullableScalarRelationFilter, UserSpendPoolUsageWhereInput> | null
    referralCode?: XOR<ReferralCodeNullableScalarRelationFilter, ReferralCodeWhereInput> | null
    referrerReward?: XOR<ReferralRewardNullableScalarRelationFilter, ReferralRewardWhereInput> | null
  }, "id">

  export type TransactionOrderByWithAggregationInput = {
    id?: SortOrder
    transactionMetadataId?: SortOrderInput | SortOrder
    totalCost?: SortOrder
    appProfit?: SortOrder
    markUpProfit?: SortOrder
    referralProfit?: SortOrder
    rawTransactionCost?: SortOrder
    status?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    apiKeyId?: SortOrderInput | SortOrder
    markUpId?: SortOrderInput | SortOrder
    githubLinkId?: SortOrderInput | SortOrder
    spendPoolId?: SortOrderInput | SortOrder
    userSpendPoolUsageId?: SortOrderInput | SortOrder
    referralCodeId?: SortOrderInput | SortOrder
    referrerRewardId?: SortOrderInput | SortOrder
    _count?: TransactionCountOrderByAggregateInput
    _avg?: TransactionAvgOrderByAggregateInput
    _max?: TransactionMaxOrderByAggregateInput
    _min?: TransactionMinOrderByAggregateInput
    _sum?: TransactionSumOrderByAggregateInput
  }

  export type TransactionScalarWhereWithAggregatesInput = {
    AND?: TransactionScalarWhereWithAggregatesInput | TransactionScalarWhereWithAggregatesInput[]
    OR?: TransactionScalarWhereWithAggregatesInput[]
    NOT?: TransactionScalarWhereWithAggregatesInput | TransactionScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"Transaction"> | string
    transactionMetadataId?: UuidNullableWithAggregatesFilter<"Transaction"> | string | null
    totalCost?: DecimalWithAggregatesFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalWithAggregatesFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalWithAggregatesFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalWithAggregatesFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalWithAggregatesFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    status?: StringNullableWithAggregatesFilter<"Transaction"> | string | null
    isArchived?: BoolWithAggregatesFilter<"Transaction"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"Transaction"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Transaction"> | Date | string
    userId?: UuidWithAggregatesFilter<"Transaction"> | string
    echoAppId?: UuidWithAggregatesFilter<"Transaction"> | string
    apiKeyId?: UuidNullableWithAggregatesFilter<"Transaction"> | string | null
    markUpId?: UuidNullableWithAggregatesFilter<"Transaction"> | string | null
    githubLinkId?: UuidNullableWithAggregatesFilter<"Transaction"> | string | null
    spendPoolId?: UuidNullableWithAggregatesFilter<"Transaction"> | string | null
    userSpendPoolUsageId?: UuidNullableWithAggregatesFilter<"Transaction"> | string | null
    referralCodeId?: UuidNullableWithAggregatesFilter<"Transaction"> | string | null
    referrerRewardId?: UuidNullableWithAggregatesFilter<"Transaction"> | string | null
  }

  export type SpendPoolWhereInput = {
    AND?: SpendPoolWhereInput | SpendPoolWhereInput[]
    OR?: SpendPoolWhereInput[]
    NOT?: SpendPoolWhereInput | SpendPoolWhereInput[]
    id?: UuidFilter<"SpendPool"> | string
    name?: StringFilter<"SpendPool"> | string
    description?: StringNullableFilter<"SpendPool"> | string | null
    totalPaid?: DecimalFilter<"SpendPool"> | Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: DecimalNullableFilter<"SpendPool"> | Decimal | DecimalJsLike | number | string | null
    totalSpent?: DecimalFilter<"SpendPool"> | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFilter<"SpendPool"> | boolean
    archivedAt?: DateTimeNullableFilter<"SpendPool"> | Date | string | null
    createdAt?: DateTimeFilter<"SpendPool"> | Date | string
    updatedAt?: DateTimeFilter<"SpendPool"> | Date | string
    echoAppId?: UuidFilter<"SpendPool"> | string
    payments?: PaymentListRelationFilter
    echoApp?: XOR<EchoAppScalarRelationFilter, EchoAppWhereInput>
    Transactions?: TransactionListRelationFilter
    userUsage?: UserSpendPoolUsageListRelationFilter
  }

  export type SpendPoolOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    totalPaid?: SortOrder
    perUserSpendLimit?: SortOrderInput | SortOrder
    totalSpent?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
    payments?: PaymentOrderByRelationAggregateInput
    echoApp?: EchoAppOrderByWithRelationInput
    Transactions?: TransactionOrderByRelationAggregateInput
    userUsage?: UserSpendPoolUsageOrderByRelationAggregateInput
  }

  export type SpendPoolWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SpendPoolWhereInput | SpendPoolWhereInput[]
    OR?: SpendPoolWhereInput[]
    NOT?: SpendPoolWhereInput | SpendPoolWhereInput[]
    name?: StringFilter<"SpendPool"> | string
    description?: StringNullableFilter<"SpendPool"> | string | null
    totalPaid?: DecimalFilter<"SpendPool"> | Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: DecimalNullableFilter<"SpendPool"> | Decimal | DecimalJsLike | number | string | null
    totalSpent?: DecimalFilter<"SpendPool"> | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFilter<"SpendPool"> | boolean
    archivedAt?: DateTimeNullableFilter<"SpendPool"> | Date | string | null
    createdAt?: DateTimeFilter<"SpendPool"> | Date | string
    updatedAt?: DateTimeFilter<"SpendPool"> | Date | string
    echoAppId?: UuidFilter<"SpendPool"> | string
    payments?: PaymentListRelationFilter
    echoApp?: XOR<EchoAppScalarRelationFilter, EchoAppWhereInput>
    Transactions?: TransactionListRelationFilter
    userUsage?: UserSpendPoolUsageListRelationFilter
  }, "id">

  export type SpendPoolOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    totalPaid?: SortOrder
    perUserSpendLimit?: SortOrderInput | SortOrder
    totalSpent?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
    _count?: SpendPoolCountOrderByAggregateInput
    _avg?: SpendPoolAvgOrderByAggregateInput
    _max?: SpendPoolMaxOrderByAggregateInput
    _min?: SpendPoolMinOrderByAggregateInput
    _sum?: SpendPoolSumOrderByAggregateInput
  }

  export type SpendPoolScalarWhereWithAggregatesInput = {
    AND?: SpendPoolScalarWhereWithAggregatesInput | SpendPoolScalarWhereWithAggregatesInput[]
    OR?: SpendPoolScalarWhereWithAggregatesInput[]
    NOT?: SpendPoolScalarWhereWithAggregatesInput | SpendPoolScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"SpendPool"> | string
    name?: StringWithAggregatesFilter<"SpendPool"> | string
    description?: StringNullableWithAggregatesFilter<"SpendPool"> | string | null
    totalPaid?: DecimalWithAggregatesFilter<"SpendPool"> | Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: DecimalNullableWithAggregatesFilter<"SpendPool"> | Decimal | DecimalJsLike | number | string | null
    totalSpent?: DecimalWithAggregatesFilter<"SpendPool"> | Decimal | DecimalJsLike | number | string
    isArchived?: BoolWithAggregatesFilter<"SpendPool"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"SpendPool"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"SpendPool"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SpendPool"> | Date | string
    echoAppId?: UuidWithAggregatesFilter<"SpendPool"> | string
  }

  export type UserSpendPoolUsageWhereInput = {
    AND?: UserSpendPoolUsageWhereInput | UserSpendPoolUsageWhereInput[]
    OR?: UserSpendPoolUsageWhereInput[]
    NOT?: UserSpendPoolUsageWhereInput | UserSpendPoolUsageWhereInput[]
    id?: UuidFilter<"UserSpendPoolUsage"> | string
    userId?: UuidFilter<"UserSpendPoolUsage"> | string
    spendPoolId?: UuidFilter<"UserSpendPoolUsage"> | string
    totalSpent?: DecimalFilter<"UserSpendPoolUsage"> | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFilter<"UserSpendPoolUsage"> | boolean
    archivedAt?: DateTimeNullableFilter<"UserSpendPoolUsage"> | Date | string | null
    createdAt?: DateTimeFilter<"UserSpendPoolUsage"> | Date | string
    updatedAt?: DateTimeFilter<"UserSpendPoolUsage"> | Date | string
    Transactions?: TransactionListRelationFilter
    spendPool?: XOR<SpendPoolScalarRelationFilter, SpendPoolWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type UserSpendPoolUsageOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    spendPoolId?: SortOrder
    totalSpent?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Transactions?: TransactionOrderByRelationAggregateInput
    spendPool?: SpendPoolOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type UserSpendPoolUsageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_spendPoolId?: UserSpendPoolUsageUserIdSpendPoolIdCompoundUniqueInput
    AND?: UserSpendPoolUsageWhereInput | UserSpendPoolUsageWhereInput[]
    OR?: UserSpendPoolUsageWhereInput[]
    NOT?: UserSpendPoolUsageWhereInput | UserSpendPoolUsageWhereInput[]
    userId?: UuidFilter<"UserSpendPoolUsage"> | string
    spendPoolId?: UuidFilter<"UserSpendPoolUsage"> | string
    totalSpent?: DecimalFilter<"UserSpendPoolUsage"> | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFilter<"UserSpendPoolUsage"> | boolean
    archivedAt?: DateTimeNullableFilter<"UserSpendPoolUsage"> | Date | string | null
    createdAt?: DateTimeFilter<"UserSpendPoolUsage"> | Date | string
    updatedAt?: DateTimeFilter<"UserSpendPoolUsage"> | Date | string
    Transactions?: TransactionListRelationFilter
    spendPool?: XOR<SpendPoolScalarRelationFilter, SpendPoolWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "userId_spendPoolId">

  export type UserSpendPoolUsageOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    spendPoolId?: SortOrder
    totalSpent?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserSpendPoolUsageCountOrderByAggregateInput
    _avg?: UserSpendPoolUsageAvgOrderByAggregateInput
    _max?: UserSpendPoolUsageMaxOrderByAggregateInput
    _min?: UserSpendPoolUsageMinOrderByAggregateInput
    _sum?: UserSpendPoolUsageSumOrderByAggregateInput
  }

  export type UserSpendPoolUsageScalarWhereWithAggregatesInput = {
    AND?: UserSpendPoolUsageScalarWhereWithAggregatesInput | UserSpendPoolUsageScalarWhereWithAggregatesInput[]
    OR?: UserSpendPoolUsageScalarWhereWithAggregatesInput[]
    NOT?: UserSpendPoolUsageScalarWhereWithAggregatesInput | UserSpendPoolUsageScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"UserSpendPoolUsage"> | string
    userId?: UuidWithAggregatesFilter<"UserSpendPoolUsage"> | string
    spendPoolId?: UuidWithAggregatesFilter<"UserSpendPoolUsage"> | string
    totalSpent?: DecimalWithAggregatesFilter<"UserSpendPoolUsage"> | Decimal | DecimalJsLike | number | string
    isArchived?: BoolWithAggregatesFilter<"UserSpendPoolUsage"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"UserSpendPoolUsage"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"UserSpendPoolUsage"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserSpendPoolUsage"> | Date | string
  }

  export type TransactionMetadataWhereInput = {
    AND?: TransactionMetadataWhereInput | TransactionMetadataWhereInput[]
    OR?: TransactionMetadataWhereInput[]
    NOT?: TransactionMetadataWhereInput | TransactionMetadataWhereInput[]
    id?: UuidFilter<"TransactionMetadata"> | string
    providerId?: StringFilter<"TransactionMetadata"> | string
    provider?: StringFilter<"TransactionMetadata"> | string
    model?: StringFilter<"TransactionMetadata"> | string
    inputTokens?: IntFilter<"TransactionMetadata"> | number
    outputTokens?: IntFilter<"TransactionMetadata"> | number
    totalTokens?: IntFilter<"TransactionMetadata"> | number
    toolCost?: DecimalFilter<"TransactionMetadata"> | Decimal | DecimalJsLike | number | string
    prompt?: StringNullableFilter<"TransactionMetadata"> | string | null
    isArchived?: BoolFilter<"TransactionMetadata"> | boolean
    archivedAt?: DateTimeNullableFilter<"TransactionMetadata"> | Date | string | null
    createdAt?: DateTimeFilter<"TransactionMetadata"> | Date | string
    updatedAt?: DateTimeFilter<"TransactionMetadata"> | Date | string
    transactions?: TransactionListRelationFilter
  }

  export type TransactionMetadataOrderByWithRelationInput = {
    id?: SortOrder
    providerId?: SortOrder
    provider?: SortOrder
    model?: SortOrder
    inputTokens?: SortOrder
    outputTokens?: SortOrder
    totalTokens?: SortOrder
    toolCost?: SortOrder
    prompt?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    transactions?: TransactionOrderByRelationAggregateInput
  }

  export type TransactionMetadataWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TransactionMetadataWhereInput | TransactionMetadataWhereInput[]
    OR?: TransactionMetadataWhereInput[]
    NOT?: TransactionMetadataWhereInput | TransactionMetadataWhereInput[]
    providerId?: StringFilter<"TransactionMetadata"> | string
    provider?: StringFilter<"TransactionMetadata"> | string
    model?: StringFilter<"TransactionMetadata"> | string
    inputTokens?: IntFilter<"TransactionMetadata"> | number
    outputTokens?: IntFilter<"TransactionMetadata"> | number
    totalTokens?: IntFilter<"TransactionMetadata"> | number
    toolCost?: DecimalFilter<"TransactionMetadata"> | Decimal | DecimalJsLike | number | string
    prompt?: StringNullableFilter<"TransactionMetadata"> | string | null
    isArchived?: BoolFilter<"TransactionMetadata"> | boolean
    archivedAt?: DateTimeNullableFilter<"TransactionMetadata"> | Date | string | null
    createdAt?: DateTimeFilter<"TransactionMetadata"> | Date | string
    updatedAt?: DateTimeFilter<"TransactionMetadata"> | Date | string
    transactions?: TransactionListRelationFilter
  }, "id">

  export type TransactionMetadataOrderByWithAggregationInput = {
    id?: SortOrder
    providerId?: SortOrder
    provider?: SortOrder
    model?: SortOrder
    inputTokens?: SortOrder
    outputTokens?: SortOrder
    totalTokens?: SortOrder
    toolCost?: SortOrder
    prompt?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: TransactionMetadataCountOrderByAggregateInput
    _avg?: TransactionMetadataAvgOrderByAggregateInput
    _max?: TransactionMetadataMaxOrderByAggregateInput
    _min?: TransactionMetadataMinOrderByAggregateInput
    _sum?: TransactionMetadataSumOrderByAggregateInput
  }

  export type TransactionMetadataScalarWhereWithAggregatesInput = {
    AND?: TransactionMetadataScalarWhereWithAggregatesInput | TransactionMetadataScalarWhereWithAggregatesInput[]
    OR?: TransactionMetadataScalarWhereWithAggregatesInput[]
    NOT?: TransactionMetadataScalarWhereWithAggregatesInput | TransactionMetadataScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"TransactionMetadata"> | string
    providerId?: StringWithAggregatesFilter<"TransactionMetadata"> | string
    provider?: StringWithAggregatesFilter<"TransactionMetadata"> | string
    model?: StringWithAggregatesFilter<"TransactionMetadata"> | string
    inputTokens?: IntWithAggregatesFilter<"TransactionMetadata"> | number
    outputTokens?: IntWithAggregatesFilter<"TransactionMetadata"> | number
    totalTokens?: IntWithAggregatesFilter<"TransactionMetadata"> | number
    toolCost?: DecimalWithAggregatesFilter<"TransactionMetadata"> | Decimal | DecimalJsLike | number | string
    prompt?: StringNullableWithAggregatesFilter<"TransactionMetadata"> | string | null
    isArchived?: BoolWithAggregatesFilter<"TransactionMetadata"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"TransactionMetadata"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"TransactionMetadata"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"TransactionMetadata"> | Date | string
  }

  export type ReferralCodeWhereInput = {
    AND?: ReferralCodeWhereInput | ReferralCodeWhereInput[]
    OR?: ReferralCodeWhereInput[]
    NOT?: ReferralCodeWhereInput | ReferralCodeWhereInput[]
    id?: UuidFilter<"ReferralCode"> | string
    code?: StringFilter<"ReferralCode"> | string
    userId?: UuidNullableFilter<"ReferralCode"> | string | null
    echoAppId?: UuidNullableFilter<"ReferralCode"> | string | null
    grantType?: StringFilter<"ReferralCode"> | string
    grantAmount?: DecimalNullableFilter<"ReferralCode"> | Decimal | DecimalJsLike | number | string | null
    reusable?: BoolFilter<"ReferralCode"> | boolean
    expiresAt?: DateTimeFilter<"ReferralCode"> | Date | string
    isUsed?: BoolFilter<"ReferralCode"> | boolean
    isArchived?: BoolFilter<"ReferralCode"> | boolean
    archivedAt?: DateTimeNullableFilter<"ReferralCode"> | Date | string | null
    usedAt?: DateTimeNullableFilter<"ReferralCode"> | Date | string | null
    createdAt?: DateTimeFilter<"ReferralCode"> | Date | string
    updatedAt?: DateTimeFilter<"ReferralCode"> | Date | string
    appMemberships?: AppMembershipListRelationFilter
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    echoApp?: XOR<EchoAppNullableScalarRelationFilter, EchoAppWhereInput> | null
    Transaction?: TransactionListRelationFilter
  }

  export type ReferralCodeOrderByWithRelationInput = {
    id?: SortOrder
    code?: SortOrder
    userId?: SortOrderInput | SortOrder
    echoAppId?: SortOrderInput | SortOrder
    grantType?: SortOrder
    grantAmount?: SortOrderInput | SortOrder
    reusable?: SortOrder
    expiresAt?: SortOrder
    isUsed?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    usedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    appMemberships?: AppMembershipOrderByRelationAggregateInput
    user?: UserOrderByWithRelationInput
    echoApp?: EchoAppOrderByWithRelationInput
    Transaction?: TransactionOrderByRelationAggregateInput
  }

  export type ReferralCodeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    code?: string
    AND?: ReferralCodeWhereInput | ReferralCodeWhereInput[]
    OR?: ReferralCodeWhereInput[]
    NOT?: ReferralCodeWhereInput | ReferralCodeWhereInput[]
    userId?: UuidNullableFilter<"ReferralCode"> | string | null
    echoAppId?: UuidNullableFilter<"ReferralCode"> | string | null
    grantType?: StringFilter<"ReferralCode"> | string
    grantAmount?: DecimalNullableFilter<"ReferralCode"> | Decimal | DecimalJsLike | number | string | null
    reusable?: BoolFilter<"ReferralCode"> | boolean
    expiresAt?: DateTimeFilter<"ReferralCode"> | Date | string
    isUsed?: BoolFilter<"ReferralCode"> | boolean
    isArchived?: BoolFilter<"ReferralCode"> | boolean
    archivedAt?: DateTimeNullableFilter<"ReferralCode"> | Date | string | null
    usedAt?: DateTimeNullableFilter<"ReferralCode"> | Date | string | null
    createdAt?: DateTimeFilter<"ReferralCode"> | Date | string
    updatedAt?: DateTimeFilter<"ReferralCode"> | Date | string
    appMemberships?: AppMembershipListRelationFilter
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    echoApp?: XOR<EchoAppNullableScalarRelationFilter, EchoAppWhereInput> | null
    Transaction?: TransactionListRelationFilter
  }, "id" | "code">

  export type ReferralCodeOrderByWithAggregationInput = {
    id?: SortOrder
    code?: SortOrder
    userId?: SortOrderInput | SortOrder
    echoAppId?: SortOrderInput | SortOrder
    grantType?: SortOrder
    grantAmount?: SortOrderInput | SortOrder
    reusable?: SortOrder
    expiresAt?: SortOrder
    isUsed?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    usedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ReferralCodeCountOrderByAggregateInput
    _avg?: ReferralCodeAvgOrderByAggregateInput
    _max?: ReferralCodeMaxOrderByAggregateInput
    _min?: ReferralCodeMinOrderByAggregateInput
    _sum?: ReferralCodeSumOrderByAggregateInput
  }

  export type ReferralCodeScalarWhereWithAggregatesInput = {
    AND?: ReferralCodeScalarWhereWithAggregatesInput | ReferralCodeScalarWhereWithAggregatesInput[]
    OR?: ReferralCodeScalarWhereWithAggregatesInput[]
    NOT?: ReferralCodeScalarWhereWithAggregatesInput | ReferralCodeScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"ReferralCode"> | string
    code?: StringWithAggregatesFilter<"ReferralCode"> | string
    userId?: UuidNullableWithAggregatesFilter<"ReferralCode"> | string | null
    echoAppId?: UuidNullableWithAggregatesFilter<"ReferralCode"> | string | null
    grantType?: StringWithAggregatesFilter<"ReferralCode"> | string
    grantAmount?: DecimalNullableWithAggregatesFilter<"ReferralCode"> | Decimal | DecimalJsLike | number | string | null
    reusable?: BoolWithAggregatesFilter<"ReferralCode"> | boolean
    expiresAt?: DateTimeWithAggregatesFilter<"ReferralCode"> | Date | string
    isUsed?: BoolWithAggregatesFilter<"ReferralCode"> | boolean
    isArchived?: BoolWithAggregatesFilter<"ReferralCode"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"ReferralCode"> | Date | string | null
    usedAt?: DateTimeNullableWithAggregatesFilter<"ReferralCode"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ReferralCode"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ReferralCode"> | Date | string
  }

  export type ReferralRewardWhereInput = {
    AND?: ReferralRewardWhereInput | ReferralRewardWhereInput[]
    OR?: ReferralRewardWhereInput[]
    NOT?: ReferralRewardWhereInput | ReferralRewardWhereInput[]
    id?: UuidFilter<"ReferralReward"> | string
    amount?: DecimalFilter<"ReferralReward"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"ReferralReward"> | string | null
    isArchived?: BoolFilter<"ReferralReward"> | boolean
    archivedAt?: DateTimeNullableFilter<"ReferralReward"> | Date | string | null
    createdAt?: DateTimeFilter<"ReferralReward"> | Date | string
    updatedAt?: DateTimeFilter<"ReferralReward"> | Date | string
    echoAppId?: UuidFilter<"ReferralReward"> | string
    echoApp?: XOR<EchoAppScalarRelationFilter, EchoAppWhereInput>
    currentForApps?: EchoAppListRelationFilter
    Transaction?: TransactionListRelationFilter
  }

  export type ReferralRewardOrderByWithRelationInput = {
    id?: SortOrder
    amount?: SortOrder
    description?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
    echoApp?: EchoAppOrderByWithRelationInput
    currentForApps?: EchoAppOrderByRelationAggregateInput
    Transaction?: TransactionOrderByRelationAggregateInput
  }

  export type ReferralRewardWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ReferralRewardWhereInput | ReferralRewardWhereInput[]
    OR?: ReferralRewardWhereInput[]
    NOT?: ReferralRewardWhereInput | ReferralRewardWhereInput[]
    amount?: DecimalFilter<"ReferralReward"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"ReferralReward"> | string | null
    isArchived?: BoolFilter<"ReferralReward"> | boolean
    archivedAt?: DateTimeNullableFilter<"ReferralReward"> | Date | string | null
    createdAt?: DateTimeFilter<"ReferralReward"> | Date | string
    updatedAt?: DateTimeFilter<"ReferralReward"> | Date | string
    echoAppId?: UuidFilter<"ReferralReward"> | string
    echoApp?: XOR<EchoAppScalarRelationFilter, EchoAppWhereInput>
    currentForApps?: EchoAppListRelationFilter
    Transaction?: TransactionListRelationFilter
  }, "id">

  export type ReferralRewardOrderByWithAggregationInput = {
    id?: SortOrder
    amount?: SortOrder
    description?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
    _count?: ReferralRewardCountOrderByAggregateInput
    _avg?: ReferralRewardAvgOrderByAggregateInput
    _max?: ReferralRewardMaxOrderByAggregateInput
    _min?: ReferralRewardMinOrderByAggregateInput
    _sum?: ReferralRewardSumOrderByAggregateInput
  }

  export type ReferralRewardScalarWhereWithAggregatesInput = {
    AND?: ReferralRewardScalarWhereWithAggregatesInput | ReferralRewardScalarWhereWithAggregatesInput[]
    OR?: ReferralRewardScalarWhereWithAggregatesInput[]
    NOT?: ReferralRewardScalarWhereWithAggregatesInput | ReferralRewardScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"ReferralReward"> | string
    amount?: DecimalWithAggregatesFilter<"ReferralReward"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableWithAggregatesFilter<"ReferralReward"> | string | null
    isArchived?: BoolWithAggregatesFilter<"ReferralReward"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"ReferralReward"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ReferralReward"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ReferralReward"> | Date | string
    echoAppId?: UuidWithAggregatesFilter<"ReferralReward"> | string
  }

  export type UserCreateInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    transactions?: TransactionCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutUserInput
    appSessions?: AppSessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    transactions?: TransactionUncheckedCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutUserInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    transactions?: TransactionUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    transactions?: TransactionUncheckedUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AccountCreateInput = {
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutAccountsInput
  }

  export type AccountUncheckedCreateInput = {
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AccountUpdateInput = {
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutAccountsNestedInput
  }

  export type AccountUncheckedUpdateInput = {
    userId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountCreateManyInput = {
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AccountUpdateManyMutationInput = {
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountUncheckedUpdateManyInput = {
    userId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionCreateInput = {
    sessionToken: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutSessionsInput
  }

  export type SessionUncheckedCreateInput = {
    sessionToken: string
    userId: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionUpdateInput = {
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type SessionUncheckedUpdateInput = {
    sessionToken?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionCreateManyInput = {
    sessionToken: string
    userId: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionUpdateManyMutationInput = {
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyInput = {
    sessionToken?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenCreateInput = {
    identifier: string
    token: string
    expires: Date | string
  }

  export type VerificationTokenUncheckedCreateInput = {
    identifier: string
    token: string
    expires: Date | string
  }

  export type VerificationTokenUpdateInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenUncheckedUpdateInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenCreateManyInput = {
    identifier: string
    token: string
    expires: Date | string
  }

  export type VerificationTokenUpdateManyMutationInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenUncheckedUpdateManyInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EchoAppCreateInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutEchoAppInput
    currentReferralReward?: ReferralRewardCreateNestedOneWithoutCurrentForAppsInput
    ReferralRewards?: ReferralRewardCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: string | null
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionUncheckedCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpUncheckedCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkUncheckedCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralRewards?: ReferralRewardUncheckedCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutEchoAppNestedInput
    currentReferralReward?: ReferralRewardUpdateOneWithoutCurrentForAppsNestedInput
    ReferralRewards?: ReferralRewardUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUpdateManyWithoutEchoAppNestedInput
  }

  export type EchoAppUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: NullableStringFieldUpdateOperationsInput | string | null
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUncheckedUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUncheckedUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUncheckedUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralRewards?: ReferralRewardUncheckedUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutEchoAppNestedInput
  }

  export type EchoAppCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: string | null
  }

  export type EchoAppUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
  }

  export type EchoAppUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AppMembershipCreateInput = {
    id?: string
    role: string
    status?: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalSpent: Decimal | DecimalJsLike | number | string
    amountSpent?: Decimal | DecimalJsLike | number | string
    referrer?: ReferralCodeCreateNestedOneWithoutAppMembershipsInput
    echoApp: EchoAppCreateNestedOneWithoutAppMembershipsInput
    user: UserCreateNestedOneWithoutAppMembershipsInput
  }

  export type AppMembershipUncheckedCreateInput = {
    id?: string
    userId: string
    echoAppId: string
    role: string
    status?: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalSpent: Decimal | DecimalJsLike | number | string
    amountSpent?: Decimal | DecimalJsLike | number | string
    referrerId?: string | null
  }

  export type AppMembershipUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amountSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referrer?: ReferralCodeUpdateOneWithoutAppMembershipsNestedInput
    echoApp?: EchoAppUpdateOneRequiredWithoutAppMembershipsNestedInput
    user?: UserUpdateOneRequiredWithoutAppMembershipsNestedInput
  }

  export type AppMembershipUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amountSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AppMembershipCreateManyInput = {
    id?: string
    userId: string
    echoAppId: string
    role: string
    status?: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalSpent: Decimal | DecimalJsLike | number | string
    amountSpent?: Decimal | DecimalJsLike | number | string
    referrerId?: string | null
  }

  export type AppMembershipUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amountSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type AppMembershipUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amountSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ApiKeyCreateInput = {
    id?: string
    keyHash: string
    name?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    lastUsed?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    scope?: string
    echoApp: EchoAppCreateNestedOneWithoutApiKeysInput
    user: UserCreateNestedOneWithoutApiKeysInput
    Transactions?: TransactionCreateNestedManyWithoutApiKeyInput
  }

  export type ApiKeyUncheckedCreateInput = {
    id?: string
    keyHash: string
    name?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    lastUsed?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    echoAppId: string
    scope?: string
    Transactions?: TransactionUncheckedCreateNestedManyWithoutApiKeyInput
  }

  export type ApiKeyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    keyHash?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    scope?: StringFieldUpdateOperationsInput | string
    echoApp?: EchoAppUpdateOneRequiredWithoutApiKeysNestedInput
    user?: UserUpdateOneRequiredWithoutApiKeysNestedInput
    Transactions?: TransactionUpdateManyWithoutApiKeyNestedInput
  }

  export type ApiKeyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    keyHash?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    scope?: StringFieldUpdateOperationsInput | string
    Transactions?: TransactionUncheckedUpdateManyWithoutApiKeyNestedInput
  }

  export type ApiKeyCreateManyInput = {
    id?: string
    keyHash: string
    name?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    lastUsed?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    echoAppId: string
    scope?: string
  }

  export type ApiKeyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    keyHash?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    scope?: StringFieldUpdateOperationsInput | string
  }

  export type ApiKeyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    keyHash?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    scope?: StringFieldUpdateOperationsInput | string
  }

  export type RefreshTokenCreateInput = {
    id?: string
    token: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    scope?: string
    echoApp: EchoAppCreateNestedOneWithoutRefreshTokensInput
    user: UserCreateNestedOneWithoutRefreshTokensInput
    session?: AppSessionCreateNestedOneWithoutRefreshTokensInput
  }

  export type RefreshTokenUncheckedCreateInput = {
    id?: string
    token: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    echoAppId: string
    scope?: string
    sessionId?: string | null
  }

  export type RefreshTokenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    scope?: StringFieldUpdateOperationsInput | string
    echoApp?: EchoAppUpdateOneRequiredWithoutRefreshTokensNestedInput
    user?: UserUpdateOneRequiredWithoutRefreshTokensNestedInput
    session?: AppSessionUpdateOneWithoutRefreshTokensNestedInput
  }

  export type RefreshTokenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    scope?: StringFieldUpdateOperationsInput | string
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RefreshTokenCreateManyInput = {
    id?: string
    token: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    echoAppId: string
    scope?: string
    sessionId?: string | null
  }

  export type RefreshTokenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    scope?: StringFieldUpdateOperationsInput | string
  }

  export type RefreshTokenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    scope?: StringFieldUpdateOperationsInput | string
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AppSessionCreateInput = {
    id?: string
    deviceName?: string | null
    userAgent?: string | null
    ipAddress?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastSeenAt?: Date | string | null
    revokedAt?: Date | string | null
    isArchived?: boolean
    user: UserCreateNestedOneWithoutAppSessionsInput
    echoApp: EchoAppCreateNestedOneWithoutAppSessionsInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutSessionInput
  }

  export type AppSessionUncheckedCreateInput = {
    id?: string
    userId: string
    echoAppId: string
    deviceName?: string | null
    userAgent?: string | null
    ipAddress?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastSeenAt?: Date | string | null
    revokedAt?: Date | string | null
    isArchived?: boolean
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutSessionInput
  }

  export type AppSessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceName?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutAppSessionsNestedInput
    echoApp?: EchoAppUpdateOneRequiredWithoutAppSessionsNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutSessionNestedInput
  }

  export type AppSessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    deviceName?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutSessionNestedInput
  }

  export type AppSessionCreateManyInput = {
    id?: string
    userId: string
    echoAppId: string
    deviceName?: string | null
    userAgent?: string | null
    ipAddress?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastSeenAt?: Date | string | null
    revokedAt?: Date | string | null
    isArchived?: boolean
  }

  export type AppSessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceName?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AppSessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    deviceName?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PaymentCreateInput = {
    id?: string
    paymentId: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    status: string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    spendPool?: SpendPoolCreateNestedOneWithoutPaymentsInput
    user: UserCreateNestedOneWithoutPaymentsInput
  }

  export type PaymentUncheckedCreateInput = {
    id?: string
    paymentId: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    status: string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    spendPoolId?: string | null
  }

  export type PaymentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    spendPool?: SpendPoolUpdateOneWithoutPaymentsNestedInput
    user?: UserUpdateOneRequiredWithoutPaymentsNestedInput
  }

  export type PaymentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentCreateManyInput = {
    id?: string
    paymentId: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    status: string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    spendPoolId?: string | null
  }

  export type PaymentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MarkUpCreateInput = {
    id?: string
    amount?: Decimal | DecimalJsLike | number | string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoApp: EchoAppCreateNestedOneWithoutMarkUpInput
    Transactions?: TransactionCreateNestedManyWithoutMarkUpInput
  }

  export type MarkUpUncheckedCreateInput = {
    id?: string
    amount?: Decimal | DecimalJsLike | number | string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoAppId: string
    Transactions?: TransactionUncheckedCreateNestedManyWithoutMarkUpInput
  }

  export type MarkUpUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoApp?: EchoAppUpdateOneRequiredWithoutMarkUpNestedInput
    Transactions?: TransactionUpdateManyWithoutMarkUpNestedInput
  }

  export type MarkUpUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    Transactions?: TransactionUncheckedUpdateManyWithoutMarkUpNestedInput
  }

  export type MarkUpCreateManyInput = {
    id?: string
    amount?: Decimal | DecimalJsLike | number | string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoAppId: string
  }

  export type MarkUpUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MarkUpUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
  }

  export type GithubLinkCreateInput = {
    id?: string
    githubId: number
    githubType: $Enums.GithubType
    githubUrl: string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoApp: EchoAppCreateNestedOneWithoutGithubLinkInput
    Transactions?: TransactionCreateNestedManyWithoutGithubLinkInput
  }

  export type GithubLinkUncheckedCreateInput = {
    id?: string
    githubId: number
    githubType: $Enums.GithubType
    githubUrl: string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoAppId: string
    Transactions?: TransactionUncheckedCreateNestedManyWithoutGithubLinkInput
  }

  export type GithubLinkUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    githubId?: IntFieldUpdateOperationsInput | number
    githubType?: EnumGithubTypeFieldUpdateOperationsInput | $Enums.GithubType
    githubUrl?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoApp?: EchoAppUpdateOneRequiredWithoutGithubLinkNestedInput
    Transactions?: TransactionUpdateManyWithoutGithubLinkNestedInput
  }

  export type GithubLinkUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    githubId?: IntFieldUpdateOperationsInput | number
    githubType?: EnumGithubTypeFieldUpdateOperationsInput | $Enums.GithubType
    githubUrl?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    Transactions?: TransactionUncheckedUpdateManyWithoutGithubLinkNestedInput
  }

  export type GithubLinkCreateManyInput = {
    id?: string
    githubId: number
    githubType: $Enums.GithubType
    githubUrl: string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoAppId: string
  }

  export type GithubLinkUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    githubId?: IntFieldUpdateOperationsInput | number
    githubType?: EnumGithubTypeFieldUpdateOperationsInput | $Enums.GithubType
    githubUrl?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GithubLinkUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    githubId?: IntFieldUpdateOperationsInput | number
    githubType?: EnumGithubTypeFieldUpdateOperationsInput | $Enums.GithubType
    githubUrl?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
  }

  export type TransactionCreateInput = {
    id?: string
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    apiKey?: ApiKeyCreateNestedOneWithoutTransactionsInput
    echoApp: EchoAppCreateNestedOneWithoutTransactionsInput
    githubLink?: GithubLinkCreateNestedOneWithoutTransactionsInput
    markUp?: MarkUpCreateNestedOneWithoutTransactionsInput
    spendPool?: SpendPoolCreateNestedOneWithoutTransactionsInput
    transactionMetadata?: TransactionMetadataCreateNestedOneWithoutTransactionsInput
    user: UserCreateNestedOneWithoutTransactionsInput
    userSpendPoolUsage?: UserSpendPoolUsageCreateNestedOneWithoutTransactionsInput
    referralCode?: ReferralCodeCreateNestedOneWithoutTransactionInput
    referrerReward?: ReferralRewardCreateNestedOneWithoutTransactionInput
  }

  export type TransactionUncheckedCreateInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    echoAppId: string
    apiKeyId?: string | null
    markUpId?: string | null
    githubLinkId?: string | null
    spendPoolId?: string | null
    userSpendPoolUsageId?: string | null
    referralCodeId?: string | null
    referrerRewardId?: string | null
  }

  export type TransactionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    apiKey?: ApiKeyUpdateOneWithoutTransactionsNestedInput
    echoApp?: EchoAppUpdateOneRequiredWithoutTransactionsNestedInput
    githubLink?: GithubLinkUpdateOneWithoutTransactionsNestedInput
    markUp?: MarkUpUpdateOneWithoutTransactionsNestedInput
    spendPool?: SpendPoolUpdateOneWithoutTransactionsNestedInput
    transactionMetadata?: TransactionMetadataUpdateOneWithoutTransactionsNestedInput
    user?: UserUpdateOneRequiredWithoutTransactionsNestedInput
    userSpendPoolUsage?: UserSpendPoolUsageUpdateOneWithoutTransactionsNestedInput
    referralCode?: ReferralCodeUpdateOneWithoutTransactionNestedInput
    referrerReward?: ReferralRewardUpdateOneWithoutTransactionNestedInput
  }

  export type TransactionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionCreateManyInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    echoAppId: string
    apiKeyId?: string | null
    markUpId?: string | null
    githubLinkId?: string | null
    spendPoolId?: string | null
    userSpendPoolUsageId?: string | null
    referralCodeId?: string | null
    referrerRewardId?: string | null
  }

  export type TransactionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransactionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SpendPoolCreateInput = {
    id?: string
    name: string
    description?: string | null
    totalPaid?: Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: Decimal | DecimalJsLike | number | string | null
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    payments?: PaymentCreateNestedManyWithoutSpendPoolInput
    echoApp: EchoAppCreateNestedOneWithoutSpendPoolsInput
    Transactions?: TransactionCreateNestedManyWithoutSpendPoolInput
    userUsage?: UserSpendPoolUsageCreateNestedManyWithoutSpendPoolInput
  }

  export type SpendPoolUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    totalPaid?: Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: Decimal | DecimalJsLike | number | string | null
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoAppId: string
    payments?: PaymentUncheckedCreateNestedManyWithoutSpendPoolInput
    Transactions?: TransactionUncheckedCreateNestedManyWithoutSpendPoolInput
    userUsage?: UserSpendPoolUsageUncheckedCreateNestedManyWithoutSpendPoolInput
  }

  export type SpendPoolUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    payments?: PaymentUpdateManyWithoutSpendPoolNestedInput
    echoApp?: EchoAppUpdateOneRequiredWithoutSpendPoolsNestedInput
    Transactions?: TransactionUpdateManyWithoutSpendPoolNestedInput
    userUsage?: UserSpendPoolUsageUpdateManyWithoutSpendPoolNestedInput
  }

  export type SpendPoolUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    payments?: PaymentUncheckedUpdateManyWithoutSpendPoolNestedInput
    Transactions?: TransactionUncheckedUpdateManyWithoutSpendPoolNestedInput
    userUsage?: UserSpendPoolUsageUncheckedUpdateManyWithoutSpendPoolNestedInput
  }

  export type SpendPoolCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    totalPaid?: Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: Decimal | DecimalJsLike | number | string | null
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoAppId: string
  }

  export type SpendPoolUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SpendPoolUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
  }

  export type UserSpendPoolUsageCreateInput = {
    id?: string
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Transactions?: TransactionCreateNestedManyWithoutUserSpendPoolUsageInput
    spendPool: SpendPoolCreateNestedOneWithoutUserUsageInput
    user: UserCreateNestedOneWithoutSpendPoolUsageInput
  }

  export type UserSpendPoolUsageUncheckedCreateInput = {
    id?: string
    userId: string
    spendPoolId: string
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Transactions?: TransactionUncheckedCreateNestedManyWithoutUserSpendPoolUsageInput
  }

  export type UserSpendPoolUsageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Transactions?: TransactionUpdateManyWithoutUserSpendPoolUsageNestedInput
    spendPool?: SpendPoolUpdateOneRequiredWithoutUserUsageNestedInput
    user?: UserUpdateOneRequiredWithoutSpendPoolUsageNestedInput
  }

  export type UserSpendPoolUsageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    spendPoolId?: StringFieldUpdateOperationsInput | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Transactions?: TransactionUncheckedUpdateManyWithoutUserSpendPoolUsageNestedInput
  }

  export type UserSpendPoolUsageCreateManyInput = {
    id?: string
    userId: string
    spendPoolId: string
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSpendPoolUsageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSpendPoolUsageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    spendPoolId?: StringFieldUpdateOperationsInput | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransactionMetadataCreateInput = {
    id?: string
    providerId: string
    provider: string
    model: string
    inputTokens: number
    outputTokens: number
    totalTokens: number
    toolCost?: Decimal | DecimalJsLike | number | string
    prompt?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    transactions?: TransactionCreateNestedManyWithoutTransactionMetadataInput
  }

  export type TransactionMetadataUncheckedCreateInput = {
    id?: string
    providerId: string
    provider: string
    model: string
    inputTokens: number
    outputTokens: number
    totalTokens: number
    toolCost?: Decimal | DecimalJsLike | number | string
    prompt?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    transactions?: TransactionUncheckedCreateNestedManyWithoutTransactionMetadataInput
  }

  export type TransactionMetadataUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    inputTokens?: IntFieldUpdateOperationsInput | number
    outputTokens?: IntFieldUpdateOperationsInput | number
    totalTokens?: IntFieldUpdateOperationsInput | number
    toolCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    prompt?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transactions?: TransactionUpdateManyWithoutTransactionMetadataNestedInput
  }

  export type TransactionMetadataUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    inputTokens?: IntFieldUpdateOperationsInput | number
    outputTokens?: IntFieldUpdateOperationsInput | number
    totalTokens?: IntFieldUpdateOperationsInput | number
    toolCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    prompt?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transactions?: TransactionUncheckedUpdateManyWithoutTransactionMetadataNestedInput
  }

  export type TransactionMetadataCreateManyInput = {
    id?: string
    providerId: string
    provider: string
    model: string
    inputTokens: number
    outputTokens: number
    totalTokens: number
    toolCost?: Decimal | DecimalJsLike | number | string
    prompt?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransactionMetadataUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    inputTokens?: IntFieldUpdateOperationsInput | number
    outputTokens?: IntFieldUpdateOperationsInput | number
    totalTokens?: IntFieldUpdateOperationsInput | number
    toolCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    prompt?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransactionMetadataUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    inputTokens?: IntFieldUpdateOperationsInput | number
    outputTokens?: IntFieldUpdateOperationsInput | number
    totalTokens?: IntFieldUpdateOperationsInput | number
    toolCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    prompt?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReferralCodeCreateInput = {
    id?: string
    code: string
    grantType: string
    grantAmount?: Decimal | DecimalJsLike | number | string | null
    reusable?: boolean
    expiresAt: Date | string
    isUsed?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    usedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appMemberships?: AppMembershipCreateNestedManyWithoutReferrerInput
    user?: UserCreateNestedOneWithoutReferralCodeInput
    echoApp?: EchoAppCreateNestedOneWithoutReferralCodeInput
    Transaction?: TransactionCreateNestedManyWithoutReferralCodeInput
  }

  export type ReferralCodeUncheckedCreateInput = {
    id?: string
    code: string
    userId?: string | null
    echoAppId?: string | null
    grantType: string
    grantAmount?: Decimal | DecimalJsLike | number | string | null
    reusable?: boolean
    expiresAt: Date | string
    isUsed?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    usedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutReferrerInput
    Transaction?: TransactionUncheckedCreateNestedManyWithoutReferralCodeInput
  }

  export type ReferralCodeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    grantType?: StringFieldUpdateOperationsInput | string
    grantAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reusable?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appMemberships?: AppMembershipUpdateManyWithoutReferrerNestedInput
    user?: UserUpdateOneWithoutReferralCodeNestedInput
    echoApp?: EchoAppUpdateOneWithoutReferralCodeNestedInput
    Transaction?: TransactionUpdateManyWithoutReferralCodeNestedInput
  }

  export type ReferralCodeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    echoAppId?: NullableStringFieldUpdateOperationsInput | string | null
    grantType?: StringFieldUpdateOperationsInput | string
    grantAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reusable?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutReferrerNestedInput
    Transaction?: TransactionUncheckedUpdateManyWithoutReferralCodeNestedInput
  }

  export type ReferralCodeCreateManyInput = {
    id?: string
    code: string
    userId?: string | null
    echoAppId?: string | null
    grantType: string
    grantAmount?: Decimal | DecimalJsLike | number | string | null
    reusable?: boolean
    expiresAt: Date | string
    isUsed?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    usedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReferralCodeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    grantType?: StringFieldUpdateOperationsInput | string
    grantAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reusable?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReferralCodeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    echoAppId?: NullableStringFieldUpdateOperationsInput | string | null
    grantType?: StringFieldUpdateOperationsInput | string
    grantAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reusable?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReferralRewardCreateInput = {
    id?: string
    amount?: Decimal | DecimalJsLike | number | string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoApp: EchoAppCreateNestedOneWithoutReferralRewardsInput
    currentForApps?: EchoAppCreateNestedManyWithoutCurrentReferralRewardInput
    Transaction?: TransactionCreateNestedManyWithoutReferrerRewardInput
  }

  export type ReferralRewardUncheckedCreateInput = {
    id?: string
    amount?: Decimal | DecimalJsLike | number | string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoAppId: string
    currentForApps?: EchoAppUncheckedCreateNestedManyWithoutCurrentReferralRewardInput
    Transaction?: TransactionUncheckedCreateNestedManyWithoutReferrerRewardInput
  }

  export type ReferralRewardUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoApp?: EchoAppUpdateOneRequiredWithoutReferralRewardsNestedInput
    currentForApps?: EchoAppUpdateManyWithoutCurrentReferralRewardNestedInput
    Transaction?: TransactionUpdateManyWithoutReferrerRewardNestedInput
  }

  export type ReferralRewardUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    currentForApps?: EchoAppUncheckedUpdateManyWithoutCurrentReferralRewardNestedInput
    Transaction?: TransactionUncheckedUpdateManyWithoutReferrerRewardNestedInput
  }

  export type ReferralRewardCreateManyInput = {
    id?: string
    amount?: Decimal | DecimalJsLike | number | string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoAppId: string
  }

  export type ReferralRewardUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReferralRewardUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type AccountListRelationFilter = {
    every?: AccountWhereInput
    some?: AccountWhereInput
    none?: AccountWhereInput
  }

  export type SessionListRelationFilter = {
    every?: SessionWhereInput
    some?: SessionWhereInput
    none?: SessionWhereInput
  }

  export type ApiKeyListRelationFilter = {
    every?: ApiKeyWhereInput
    some?: ApiKeyWhereInput
    none?: ApiKeyWhereInput
  }

  export type AppMembershipListRelationFilter = {
    every?: AppMembershipWhereInput
    some?: AppMembershipWhereInput
    none?: AppMembershipWhereInput
  }

  export type PaymentListRelationFilter = {
    every?: PaymentWhereInput
    some?: PaymentWhereInput
    none?: PaymentWhereInput
  }

  export type RefreshTokenListRelationFilter = {
    every?: RefreshTokenWhereInput
    some?: RefreshTokenWhereInput
    none?: RefreshTokenWhereInput
  }

  export type TransactionListRelationFilter = {
    every?: TransactionWhereInput
    some?: TransactionWhereInput
    none?: TransactionWhereInput
  }

  export type UserSpendPoolUsageListRelationFilter = {
    every?: UserSpendPoolUsageWhereInput
    some?: UserSpendPoolUsageWhereInput
    none?: UserSpendPoolUsageWhereInput
  }

  export type ReferralCodeListRelationFilter = {
    every?: ReferralCodeWhereInput
    some?: ReferralCodeWhereInput
    none?: ReferralCodeWhereInput
  }

  export type AppSessionListRelationFilter = {
    every?: AppSessionWhereInput
    some?: AppSessionWhereInput
    none?: AppSessionWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AccountOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ApiKeyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AppMembershipOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaymentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RefreshTokenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TransactionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserSpendPoolUsageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReferralCodeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AppSessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    totalPaid?: SortOrder
    totalSpent?: SortOrder
    admin?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    totalPaid?: SortOrder
    totalSpent?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    totalPaid?: SortOrder
    totalSpent?: SortOrder
    admin?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    totalPaid?: SortOrder
    totalSpent?: SortOrder
    admin?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    totalPaid?: SortOrder
    totalSpent?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type AccountProviderProviderAccountIdCompoundUniqueInput = {
    provider: string
    providerAccountId: string
  }

  export type AccountCountOrderByAggregateInput = {
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AccountAvgOrderByAggregateInput = {
    expires_at?: SortOrder
  }

  export type AccountMaxOrderByAggregateInput = {
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AccountMinOrderByAggregateInput = {
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AccountSumOrderByAggregateInput = {
    expires_at?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type SessionCountOrderByAggregateInput = {
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SessionMaxOrderByAggregateInput = {
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SessionMinOrderByAggregateInput = {
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VerificationTokenIdentifierTokenCompoundUniqueInput = {
    identifier: string
    token: string
  }

  export type VerificationTokenCountOrderByAggregateInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type VerificationTokenMaxOrderByAggregateInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type VerificationTokenMinOrderByAggregateInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type UuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type MarkUpNullableScalarRelationFilter = {
    is?: MarkUpWhereInput | null
    isNot?: MarkUpWhereInput | null
  }

  export type GithubLinkNullableScalarRelationFilter = {
    is?: GithubLinkWhereInput | null
    isNot?: GithubLinkWhereInput | null
  }

  export type SpendPoolListRelationFilter = {
    every?: SpendPoolWhereInput
    some?: SpendPoolWhereInput
    none?: SpendPoolWhereInput
  }

  export type ReferralRewardNullableScalarRelationFilter = {
    is?: ReferralRewardWhereInput | null
    isNot?: ReferralRewardWhereInput | null
  }

  export type ReferralRewardListRelationFilter = {
    every?: ReferralRewardWhereInput
    some?: ReferralRewardWhereInput
    none?: ReferralRewardWhereInput
  }

  export type SpendPoolOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReferralRewardOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EchoAppCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    profilePictureUrl?: SortOrder
    bannerImageUrl?: SortOrder
    homepageUrl?: SortOrder
    isPublic?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    authorizedCallbackUrls?: SortOrder
    currentReferralRewardId?: SortOrder
  }

  export type EchoAppMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    profilePictureUrl?: SortOrder
    bannerImageUrl?: SortOrder
    homepageUrl?: SortOrder
    isPublic?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    currentReferralRewardId?: SortOrder
  }

  export type EchoAppMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    profilePictureUrl?: SortOrder
    bannerImageUrl?: SortOrder
    homepageUrl?: SortOrder
    isPublic?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    currentReferralRewardId?: SortOrder
  }

  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type ReferralCodeNullableScalarRelationFilter = {
    is?: ReferralCodeWhereInput | null
    isNot?: ReferralCodeWhereInput | null
  }

  export type EchoAppScalarRelationFilter = {
    is?: EchoAppWhereInput
    isNot?: EchoAppWhereInput
  }

  export type AppMembershipUserIdEchoAppIdCompoundUniqueInput = {
    userId: string
    echoAppId: string
  }

  export type AppMembershipCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    role?: SortOrder
    status?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    totalSpent?: SortOrder
    amountSpent?: SortOrder
    referrerId?: SortOrder
  }

  export type AppMembershipAvgOrderByAggregateInput = {
    totalSpent?: SortOrder
    amountSpent?: SortOrder
  }

  export type AppMembershipMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    role?: SortOrder
    status?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    totalSpent?: SortOrder
    amountSpent?: SortOrder
    referrerId?: SortOrder
  }

  export type AppMembershipMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    role?: SortOrder
    status?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    totalSpent?: SortOrder
    amountSpent?: SortOrder
    referrerId?: SortOrder
  }

  export type AppMembershipSumOrderByAggregateInput = {
    totalSpent?: SortOrder
    amountSpent?: SortOrder
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type ApiKeyCountOrderByAggregateInput = {
    id?: SortOrder
    keyHash?: SortOrder
    name?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    lastUsed?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    scope?: SortOrder
  }

  export type ApiKeyMaxOrderByAggregateInput = {
    id?: SortOrder
    keyHash?: SortOrder
    name?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    lastUsed?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    scope?: SortOrder
  }

  export type ApiKeyMinOrderByAggregateInput = {
    id?: SortOrder
    keyHash?: SortOrder
    name?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    lastUsed?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    scope?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type AppSessionNullableScalarRelationFilter = {
    is?: AppSessionWhereInput | null
    isNot?: AppSessionWhereInput | null
  }

  export type RefreshTokenCountOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    scope?: SortOrder
    sessionId?: SortOrder
  }

  export type RefreshTokenMaxOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    scope?: SortOrder
    sessionId?: SortOrder
  }

  export type RefreshTokenMinOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    scope?: SortOrder
    sessionId?: SortOrder
  }

  export type AppSessionCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    deviceName?: SortOrder
    userAgent?: SortOrder
    ipAddress?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastSeenAt?: SortOrder
    revokedAt?: SortOrder
    isArchived?: SortOrder
  }

  export type AppSessionMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    deviceName?: SortOrder
    userAgent?: SortOrder
    ipAddress?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastSeenAt?: SortOrder
    revokedAt?: SortOrder
    isArchived?: SortOrder
  }

  export type AppSessionMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    deviceName?: SortOrder
    userAgent?: SortOrder
    ipAddress?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastSeenAt?: SortOrder
    revokedAt?: SortOrder
    isArchived?: SortOrder
  }

  export type SpendPoolNullableScalarRelationFilter = {
    is?: SpendPoolWhereInput | null
    isNot?: SpendPoolWhereInput | null
  }

  export type PaymentCountOrderByAggregateInput = {
    id?: SortOrder
    paymentId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    description?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    spendPoolId?: SortOrder
  }

  export type PaymentAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type PaymentMaxOrderByAggregateInput = {
    id?: SortOrder
    paymentId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    description?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    spendPoolId?: SortOrder
  }

  export type PaymentMinOrderByAggregateInput = {
    id?: SortOrder
    paymentId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    description?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    spendPoolId?: SortOrder
  }

  export type PaymentSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type MarkUpCountOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
  }

  export type MarkUpAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type MarkUpMaxOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
  }

  export type MarkUpMinOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
  }

  export type MarkUpSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type EnumGithubTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.GithubType | EnumGithubTypeFieldRefInput<$PrismaModel>
    in?: $Enums.GithubType[] | ListEnumGithubTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.GithubType[] | ListEnumGithubTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumGithubTypeFilter<$PrismaModel> | $Enums.GithubType
  }

  export type GithubLinkCountOrderByAggregateInput = {
    id?: SortOrder
    githubId?: SortOrder
    githubType?: SortOrder
    githubUrl?: SortOrder
    description?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
  }

  export type GithubLinkAvgOrderByAggregateInput = {
    githubId?: SortOrder
  }

  export type GithubLinkMaxOrderByAggregateInput = {
    id?: SortOrder
    githubId?: SortOrder
    githubType?: SortOrder
    githubUrl?: SortOrder
    description?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
  }

  export type GithubLinkMinOrderByAggregateInput = {
    id?: SortOrder
    githubId?: SortOrder
    githubType?: SortOrder
    githubUrl?: SortOrder
    description?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
  }

  export type GithubLinkSumOrderByAggregateInput = {
    githubId?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type EnumGithubTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.GithubType | EnumGithubTypeFieldRefInput<$PrismaModel>
    in?: $Enums.GithubType[] | ListEnumGithubTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.GithubType[] | ListEnumGithubTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumGithubTypeWithAggregatesFilter<$PrismaModel> | $Enums.GithubType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGithubTypeFilter<$PrismaModel>
    _max?: NestedEnumGithubTypeFilter<$PrismaModel>
  }

  export type ApiKeyNullableScalarRelationFilter = {
    is?: ApiKeyWhereInput | null
    isNot?: ApiKeyWhereInput | null
  }

  export type TransactionMetadataNullableScalarRelationFilter = {
    is?: TransactionMetadataWhereInput | null
    isNot?: TransactionMetadataWhereInput | null
  }

  export type UserSpendPoolUsageNullableScalarRelationFilter = {
    is?: UserSpendPoolUsageWhereInput | null
    isNot?: UserSpendPoolUsageWhereInput | null
  }

  export type TransactionCountOrderByAggregateInput = {
    id?: SortOrder
    transactionMetadataId?: SortOrder
    totalCost?: SortOrder
    appProfit?: SortOrder
    markUpProfit?: SortOrder
    referralProfit?: SortOrder
    rawTransactionCost?: SortOrder
    status?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    apiKeyId?: SortOrder
    markUpId?: SortOrder
    githubLinkId?: SortOrder
    spendPoolId?: SortOrder
    userSpendPoolUsageId?: SortOrder
    referralCodeId?: SortOrder
    referrerRewardId?: SortOrder
  }

  export type TransactionAvgOrderByAggregateInput = {
    totalCost?: SortOrder
    appProfit?: SortOrder
    markUpProfit?: SortOrder
    referralProfit?: SortOrder
    rawTransactionCost?: SortOrder
  }

  export type TransactionMaxOrderByAggregateInput = {
    id?: SortOrder
    transactionMetadataId?: SortOrder
    totalCost?: SortOrder
    appProfit?: SortOrder
    markUpProfit?: SortOrder
    referralProfit?: SortOrder
    rawTransactionCost?: SortOrder
    status?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    apiKeyId?: SortOrder
    markUpId?: SortOrder
    githubLinkId?: SortOrder
    spendPoolId?: SortOrder
    userSpendPoolUsageId?: SortOrder
    referralCodeId?: SortOrder
    referrerRewardId?: SortOrder
  }

  export type TransactionMinOrderByAggregateInput = {
    id?: SortOrder
    transactionMetadataId?: SortOrder
    totalCost?: SortOrder
    appProfit?: SortOrder
    markUpProfit?: SortOrder
    referralProfit?: SortOrder
    rawTransactionCost?: SortOrder
    status?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    apiKeyId?: SortOrder
    markUpId?: SortOrder
    githubLinkId?: SortOrder
    spendPoolId?: SortOrder
    userSpendPoolUsageId?: SortOrder
    referralCodeId?: SortOrder
    referrerRewardId?: SortOrder
  }

  export type TransactionSumOrderByAggregateInput = {
    totalCost?: SortOrder
    appProfit?: SortOrder
    markUpProfit?: SortOrder
    referralProfit?: SortOrder
    rawTransactionCost?: SortOrder
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type SpendPoolCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    totalPaid?: SortOrder
    perUserSpendLimit?: SortOrder
    totalSpent?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
  }

  export type SpendPoolAvgOrderByAggregateInput = {
    totalPaid?: SortOrder
    perUserSpendLimit?: SortOrder
    totalSpent?: SortOrder
  }

  export type SpendPoolMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    totalPaid?: SortOrder
    perUserSpendLimit?: SortOrder
    totalSpent?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
  }

  export type SpendPoolMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    totalPaid?: SortOrder
    perUserSpendLimit?: SortOrder
    totalSpent?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
  }

  export type SpendPoolSumOrderByAggregateInput = {
    totalPaid?: SortOrder
    perUserSpendLimit?: SortOrder
    totalSpent?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type SpendPoolScalarRelationFilter = {
    is?: SpendPoolWhereInput
    isNot?: SpendPoolWhereInput
  }

  export type UserSpendPoolUsageUserIdSpendPoolIdCompoundUniqueInput = {
    userId: string
    spendPoolId: string
  }

  export type UserSpendPoolUsageCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    spendPoolId?: SortOrder
    totalSpent?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSpendPoolUsageAvgOrderByAggregateInput = {
    totalSpent?: SortOrder
  }

  export type UserSpendPoolUsageMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    spendPoolId?: SortOrder
    totalSpent?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSpendPoolUsageMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    spendPoolId?: SortOrder
    totalSpent?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSpendPoolUsageSumOrderByAggregateInput = {
    totalSpent?: SortOrder
  }

  export type TransactionMetadataCountOrderByAggregateInput = {
    id?: SortOrder
    providerId?: SortOrder
    provider?: SortOrder
    model?: SortOrder
    inputTokens?: SortOrder
    outputTokens?: SortOrder
    totalTokens?: SortOrder
    toolCost?: SortOrder
    prompt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TransactionMetadataAvgOrderByAggregateInput = {
    inputTokens?: SortOrder
    outputTokens?: SortOrder
    totalTokens?: SortOrder
    toolCost?: SortOrder
  }

  export type TransactionMetadataMaxOrderByAggregateInput = {
    id?: SortOrder
    providerId?: SortOrder
    provider?: SortOrder
    model?: SortOrder
    inputTokens?: SortOrder
    outputTokens?: SortOrder
    totalTokens?: SortOrder
    toolCost?: SortOrder
    prompt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TransactionMetadataMinOrderByAggregateInput = {
    id?: SortOrder
    providerId?: SortOrder
    provider?: SortOrder
    model?: SortOrder
    inputTokens?: SortOrder
    outputTokens?: SortOrder
    totalTokens?: SortOrder
    toolCost?: SortOrder
    prompt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TransactionMetadataSumOrderByAggregateInput = {
    inputTokens?: SortOrder
    outputTokens?: SortOrder
    totalTokens?: SortOrder
    toolCost?: SortOrder
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type EchoAppNullableScalarRelationFilter = {
    is?: EchoAppWhereInput | null
    isNot?: EchoAppWhereInput | null
  }

  export type ReferralCodeCountOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    grantType?: SortOrder
    grantAmount?: SortOrder
    reusable?: SortOrder
    expiresAt?: SortOrder
    isUsed?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    usedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReferralCodeAvgOrderByAggregateInput = {
    grantAmount?: SortOrder
  }

  export type ReferralCodeMaxOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    grantType?: SortOrder
    grantAmount?: SortOrder
    reusable?: SortOrder
    expiresAt?: SortOrder
    isUsed?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    usedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReferralCodeMinOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    userId?: SortOrder
    echoAppId?: SortOrder
    grantType?: SortOrder
    grantAmount?: SortOrder
    reusable?: SortOrder
    expiresAt?: SortOrder
    isUsed?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    usedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReferralCodeSumOrderByAggregateInput = {
    grantAmount?: SortOrder
  }

  export type EchoAppListRelationFilter = {
    every?: EchoAppWhereInput
    some?: EchoAppWhereInput
    none?: EchoAppWhereInput
  }

  export type EchoAppOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReferralRewardCountOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
  }

  export type ReferralRewardAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type ReferralRewardMaxOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
  }

  export type ReferralRewardMinOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    echoAppId?: SortOrder
  }

  export type ReferralRewardSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type AccountCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type SessionCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type ApiKeyCreateNestedManyWithoutUserInput = {
    create?: XOR<ApiKeyCreateWithoutUserInput, ApiKeyUncheckedCreateWithoutUserInput> | ApiKeyCreateWithoutUserInput[] | ApiKeyUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ApiKeyCreateOrConnectWithoutUserInput | ApiKeyCreateOrConnectWithoutUserInput[]
    createMany?: ApiKeyCreateManyUserInputEnvelope
    connect?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
  }

  export type AppMembershipCreateNestedManyWithoutUserInput = {
    create?: XOR<AppMembershipCreateWithoutUserInput, AppMembershipUncheckedCreateWithoutUserInput> | AppMembershipCreateWithoutUserInput[] | AppMembershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AppMembershipCreateOrConnectWithoutUserInput | AppMembershipCreateOrConnectWithoutUserInput[]
    createMany?: AppMembershipCreateManyUserInputEnvelope
    connect?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
  }

  export type PaymentCreateNestedManyWithoutUserInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type RefreshTokenCreateNestedManyWithoutUserInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type TransactionCreateNestedManyWithoutUserInput = {
    create?: XOR<TransactionCreateWithoutUserInput, TransactionUncheckedCreateWithoutUserInput> | TransactionCreateWithoutUserInput[] | TransactionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutUserInput | TransactionCreateOrConnectWithoutUserInput[]
    createMany?: TransactionCreateManyUserInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type UserSpendPoolUsageCreateNestedManyWithoutUserInput = {
    create?: XOR<UserSpendPoolUsageCreateWithoutUserInput, UserSpendPoolUsageUncheckedCreateWithoutUserInput> | UserSpendPoolUsageCreateWithoutUserInput[] | UserSpendPoolUsageUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSpendPoolUsageCreateOrConnectWithoutUserInput | UserSpendPoolUsageCreateOrConnectWithoutUserInput[]
    createMany?: UserSpendPoolUsageCreateManyUserInputEnvelope
    connect?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
  }

  export type ReferralCodeCreateNestedManyWithoutUserInput = {
    create?: XOR<ReferralCodeCreateWithoutUserInput, ReferralCodeUncheckedCreateWithoutUserInput> | ReferralCodeCreateWithoutUserInput[] | ReferralCodeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReferralCodeCreateOrConnectWithoutUserInput | ReferralCodeCreateOrConnectWithoutUserInput[]
    createMany?: ReferralCodeCreateManyUserInputEnvelope
    connect?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
  }

  export type AppSessionCreateNestedManyWithoutUserInput = {
    create?: XOR<AppSessionCreateWithoutUserInput, AppSessionUncheckedCreateWithoutUserInput> | AppSessionCreateWithoutUserInput[] | AppSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AppSessionCreateOrConnectWithoutUserInput | AppSessionCreateOrConnectWithoutUserInput[]
    createMany?: AppSessionCreateManyUserInputEnvelope
    connect?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
  }

  export type AccountUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type SessionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type ApiKeyUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ApiKeyCreateWithoutUserInput, ApiKeyUncheckedCreateWithoutUserInput> | ApiKeyCreateWithoutUserInput[] | ApiKeyUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ApiKeyCreateOrConnectWithoutUserInput | ApiKeyCreateOrConnectWithoutUserInput[]
    createMany?: ApiKeyCreateManyUserInputEnvelope
    connect?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
  }

  export type AppMembershipUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AppMembershipCreateWithoutUserInput, AppMembershipUncheckedCreateWithoutUserInput> | AppMembershipCreateWithoutUserInput[] | AppMembershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AppMembershipCreateOrConnectWithoutUserInput | AppMembershipCreateOrConnectWithoutUserInput[]
    createMany?: AppMembershipCreateManyUserInputEnvelope
    connect?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type RefreshTokenUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type TransactionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<TransactionCreateWithoutUserInput, TransactionUncheckedCreateWithoutUserInput> | TransactionCreateWithoutUserInput[] | TransactionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutUserInput | TransactionCreateOrConnectWithoutUserInput[]
    createMany?: TransactionCreateManyUserInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type UserSpendPoolUsageUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserSpendPoolUsageCreateWithoutUserInput, UserSpendPoolUsageUncheckedCreateWithoutUserInput> | UserSpendPoolUsageCreateWithoutUserInput[] | UserSpendPoolUsageUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSpendPoolUsageCreateOrConnectWithoutUserInput | UserSpendPoolUsageCreateOrConnectWithoutUserInput[]
    createMany?: UserSpendPoolUsageCreateManyUserInputEnvelope
    connect?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
  }

  export type ReferralCodeUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ReferralCodeCreateWithoutUserInput, ReferralCodeUncheckedCreateWithoutUserInput> | ReferralCodeCreateWithoutUserInput[] | ReferralCodeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReferralCodeCreateOrConnectWithoutUserInput | ReferralCodeCreateOrConnectWithoutUserInput[]
    createMany?: ReferralCodeCreateManyUserInputEnvelope
    connect?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
  }

  export type AppSessionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AppSessionCreateWithoutUserInput, AppSessionUncheckedCreateWithoutUserInput> | AppSessionCreateWithoutUserInput[] | AppSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AppSessionCreateOrConnectWithoutUserInput | AppSessionCreateOrConnectWithoutUserInput[]
    createMany?: AppSessionCreateManyUserInputEnvelope
    connect?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type AccountUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type SessionUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type ApiKeyUpdateManyWithoutUserNestedInput = {
    create?: XOR<ApiKeyCreateWithoutUserInput, ApiKeyUncheckedCreateWithoutUserInput> | ApiKeyCreateWithoutUserInput[] | ApiKeyUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ApiKeyCreateOrConnectWithoutUserInput | ApiKeyCreateOrConnectWithoutUserInput[]
    upsert?: ApiKeyUpsertWithWhereUniqueWithoutUserInput | ApiKeyUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ApiKeyCreateManyUserInputEnvelope
    set?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    disconnect?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    delete?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    connect?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    update?: ApiKeyUpdateWithWhereUniqueWithoutUserInput | ApiKeyUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ApiKeyUpdateManyWithWhereWithoutUserInput | ApiKeyUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ApiKeyScalarWhereInput | ApiKeyScalarWhereInput[]
  }

  export type AppMembershipUpdateManyWithoutUserNestedInput = {
    create?: XOR<AppMembershipCreateWithoutUserInput, AppMembershipUncheckedCreateWithoutUserInput> | AppMembershipCreateWithoutUserInput[] | AppMembershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AppMembershipCreateOrConnectWithoutUserInput | AppMembershipCreateOrConnectWithoutUserInput[]
    upsert?: AppMembershipUpsertWithWhereUniqueWithoutUserInput | AppMembershipUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AppMembershipCreateManyUserInputEnvelope
    set?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    disconnect?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    delete?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    connect?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    update?: AppMembershipUpdateWithWhereUniqueWithoutUserInput | AppMembershipUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AppMembershipUpdateManyWithWhereWithoutUserInput | AppMembershipUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AppMembershipScalarWhereInput | AppMembershipScalarWhereInput[]
  }

  export type PaymentUpdateManyWithoutUserNestedInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutUserInput | PaymentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutUserInput | PaymentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutUserInput | PaymentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type RefreshTokenUpdateManyWithoutUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutUserInput | RefreshTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutUserInput | RefreshTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutUserInput | RefreshTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type TransactionUpdateManyWithoutUserNestedInput = {
    create?: XOR<TransactionCreateWithoutUserInput, TransactionUncheckedCreateWithoutUserInput> | TransactionCreateWithoutUserInput[] | TransactionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutUserInput | TransactionCreateOrConnectWithoutUserInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutUserInput | TransactionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: TransactionCreateManyUserInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutUserInput | TransactionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutUserInput | TransactionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type UserSpendPoolUsageUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserSpendPoolUsageCreateWithoutUserInput, UserSpendPoolUsageUncheckedCreateWithoutUserInput> | UserSpendPoolUsageCreateWithoutUserInput[] | UserSpendPoolUsageUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSpendPoolUsageCreateOrConnectWithoutUserInput | UserSpendPoolUsageCreateOrConnectWithoutUserInput[]
    upsert?: UserSpendPoolUsageUpsertWithWhereUniqueWithoutUserInput | UserSpendPoolUsageUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserSpendPoolUsageCreateManyUserInputEnvelope
    set?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
    disconnect?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
    delete?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
    connect?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
    update?: UserSpendPoolUsageUpdateWithWhereUniqueWithoutUserInput | UserSpendPoolUsageUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserSpendPoolUsageUpdateManyWithWhereWithoutUserInput | UserSpendPoolUsageUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserSpendPoolUsageScalarWhereInput | UserSpendPoolUsageScalarWhereInput[]
  }

  export type ReferralCodeUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReferralCodeCreateWithoutUserInput, ReferralCodeUncheckedCreateWithoutUserInput> | ReferralCodeCreateWithoutUserInput[] | ReferralCodeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReferralCodeCreateOrConnectWithoutUserInput | ReferralCodeCreateOrConnectWithoutUserInput[]
    upsert?: ReferralCodeUpsertWithWhereUniqueWithoutUserInput | ReferralCodeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReferralCodeCreateManyUserInputEnvelope
    set?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
    disconnect?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
    delete?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
    connect?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
    update?: ReferralCodeUpdateWithWhereUniqueWithoutUserInput | ReferralCodeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReferralCodeUpdateManyWithWhereWithoutUserInput | ReferralCodeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReferralCodeScalarWhereInput | ReferralCodeScalarWhereInput[]
  }

  export type AppSessionUpdateManyWithoutUserNestedInput = {
    create?: XOR<AppSessionCreateWithoutUserInput, AppSessionUncheckedCreateWithoutUserInput> | AppSessionCreateWithoutUserInput[] | AppSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AppSessionCreateOrConnectWithoutUserInput | AppSessionCreateOrConnectWithoutUserInput[]
    upsert?: AppSessionUpsertWithWhereUniqueWithoutUserInput | AppSessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AppSessionCreateManyUserInputEnvelope
    set?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
    disconnect?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
    delete?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
    connect?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
    update?: AppSessionUpdateWithWhereUniqueWithoutUserInput | AppSessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AppSessionUpdateManyWithWhereWithoutUserInput | AppSessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AppSessionScalarWhereInput | AppSessionScalarWhereInput[]
  }

  export type AccountUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type SessionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type ApiKeyUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ApiKeyCreateWithoutUserInput, ApiKeyUncheckedCreateWithoutUserInput> | ApiKeyCreateWithoutUserInput[] | ApiKeyUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ApiKeyCreateOrConnectWithoutUserInput | ApiKeyCreateOrConnectWithoutUserInput[]
    upsert?: ApiKeyUpsertWithWhereUniqueWithoutUserInput | ApiKeyUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ApiKeyCreateManyUserInputEnvelope
    set?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    disconnect?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    delete?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    connect?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    update?: ApiKeyUpdateWithWhereUniqueWithoutUserInput | ApiKeyUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ApiKeyUpdateManyWithWhereWithoutUserInput | ApiKeyUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ApiKeyScalarWhereInput | ApiKeyScalarWhereInput[]
  }

  export type AppMembershipUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AppMembershipCreateWithoutUserInput, AppMembershipUncheckedCreateWithoutUserInput> | AppMembershipCreateWithoutUserInput[] | AppMembershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AppMembershipCreateOrConnectWithoutUserInput | AppMembershipCreateOrConnectWithoutUserInput[]
    upsert?: AppMembershipUpsertWithWhereUniqueWithoutUserInput | AppMembershipUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AppMembershipCreateManyUserInputEnvelope
    set?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    disconnect?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    delete?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    connect?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    update?: AppMembershipUpdateWithWhereUniqueWithoutUserInput | AppMembershipUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AppMembershipUpdateManyWithWhereWithoutUserInput | AppMembershipUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AppMembershipScalarWhereInput | AppMembershipScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutUserInput | PaymentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutUserInput | PaymentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutUserInput | PaymentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type RefreshTokenUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutUserInput | RefreshTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutUserInput | RefreshTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutUserInput | RefreshTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type TransactionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<TransactionCreateWithoutUserInput, TransactionUncheckedCreateWithoutUserInput> | TransactionCreateWithoutUserInput[] | TransactionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutUserInput | TransactionCreateOrConnectWithoutUserInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutUserInput | TransactionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: TransactionCreateManyUserInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutUserInput | TransactionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutUserInput | TransactionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type UserSpendPoolUsageUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserSpendPoolUsageCreateWithoutUserInput, UserSpendPoolUsageUncheckedCreateWithoutUserInput> | UserSpendPoolUsageCreateWithoutUserInput[] | UserSpendPoolUsageUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSpendPoolUsageCreateOrConnectWithoutUserInput | UserSpendPoolUsageCreateOrConnectWithoutUserInput[]
    upsert?: UserSpendPoolUsageUpsertWithWhereUniqueWithoutUserInput | UserSpendPoolUsageUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserSpendPoolUsageCreateManyUserInputEnvelope
    set?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
    disconnect?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
    delete?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
    connect?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
    update?: UserSpendPoolUsageUpdateWithWhereUniqueWithoutUserInput | UserSpendPoolUsageUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserSpendPoolUsageUpdateManyWithWhereWithoutUserInput | UserSpendPoolUsageUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserSpendPoolUsageScalarWhereInput | UserSpendPoolUsageScalarWhereInput[]
  }

  export type ReferralCodeUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReferralCodeCreateWithoutUserInput, ReferralCodeUncheckedCreateWithoutUserInput> | ReferralCodeCreateWithoutUserInput[] | ReferralCodeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReferralCodeCreateOrConnectWithoutUserInput | ReferralCodeCreateOrConnectWithoutUserInput[]
    upsert?: ReferralCodeUpsertWithWhereUniqueWithoutUserInput | ReferralCodeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReferralCodeCreateManyUserInputEnvelope
    set?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
    disconnect?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
    delete?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
    connect?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
    update?: ReferralCodeUpdateWithWhereUniqueWithoutUserInput | ReferralCodeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReferralCodeUpdateManyWithWhereWithoutUserInput | ReferralCodeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReferralCodeScalarWhereInput | ReferralCodeScalarWhereInput[]
  }

  export type AppSessionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AppSessionCreateWithoutUserInput, AppSessionUncheckedCreateWithoutUserInput> | AppSessionCreateWithoutUserInput[] | AppSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AppSessionCreateOrConnectWithoutUserInput | AppSessionCreateOrConnectWithoutUserInput[]
    upsert?: AppSessionUpsertWithWhereUniqueWithoutUserInput | AppSessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AppSessionCreateManyUserInputEnvelope
    set?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
    disconnect?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
    delete?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
    connect?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
    update?: AppSessionUpdateWithWhereUniqueWithoutUserInput | AppSessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AppSessionUpdateManyWithWhereWithoutUserInput | AppSessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AppSessionScalarWhereInput | AppSessionScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutAccountsInput = {
    create?: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountsInput
    connect?: UserWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutAccountsNestedInput = {
    create?: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountsInput
    upsert?: UserUpsertWithoutAccountsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAccountsInput, UserUpdateWithoutAccountsInput>, UserUncheckedUpdateWithoutAccountsInput>
  }

  export type UserCreateNestedOneWithoutSessionsInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    upsert?: UserUpsertWithoutSessionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSessionsInput, UserUpdateWithoutSessionsInput>, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type EchoAppCreateauthorizedCallbackUrlsInput = {
    set: string[]
  }

  export type ApiKeyCreateNestedManyWithoutEchoAppInput = {
    create?: XOR<ApiKeyCreateWithoutEchoAppInput, ApiKeyUncheckedCreateWithoutEchoAppInput> | ApiKeyCreateWithoutEchoAppInput[] | ApiKeyUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: ApiKeyCreateOrConnectWithoutEchoAppInput | ApiKeyCreateOrConnectWithoutEchoAppInput[]
    createMany?: ApiKeyCreateManyEchoAppInputEnvelope
    connect?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
  }

  export type TransactionCreateNestedManyWithoutEchoAppInput = {
    create?: XOR<TransactionCreateWithoutEchoAppInput, TransactionUncheckedCreateWithoutEchoAppInput> | TransactionCreateWithoutEchoAppInput[] | TransactionUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutEchoAppInput | TransactionCreateOrConnectWithoutEchoAppInput[]
    createMany?: TransactionCreateManyEchoAppInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type RefreshTokenCreateNestedManyWithoutEchoAppInput = {
    create?: XOR<RefreshTokenCreateWithoutEchoAppInput, RefreshTokenUncheckedCreateWithoutEchoAppInput> | RefreshTokenCreateWithoutEchoAppInput[] | RefreshTokenUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutEchoAppInput | RefreshTokenCreateOrConnectWithoutEchoAppInput[]
    createMany?: RefreshTokenCreateManyEchoAppInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type AppMembershipCreateNestedManyWithoutEchoAppInput = {
    create?: XOR<AppMembershipCreateWithoutEchoAppInput, AppMembershipUncheckedCreateWithoutEchoAppInput> | AppMembershipCreateWithoutEchoAppInput[] | AppMembershipUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: AppMembershipCreateOrConnectWithoutEchoAppInput | AppMembershipCreateOrConnectWithoutEchoAppInput[]
    createMany?: AppMembershipCreateManyEchoAppInputEnvelope
    connect?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
  }

  export type MarkUpCreateNestedOneWithoutEchoAppInput = {
    create?: XOR<MarkUpCreateWithoutEchoAppInput, MarkUpUncheckedCreateWithoutEchoAppInput>
    connectOrCreate?: MarkUpCreateOrConnectWithoutEchoAppInput
    connect?: MarkUpWhereUniqueInput
  }

  export type GithubLinkCreateNestedOneWithoutEchoAppInput = {
    create?: XOR<GithubLinkCreateWithoutEchoAppInput, GithubLinkUncheckedCreateWithoutEchoAppInput>
    connectOrCreate?: GithubLinkCreateOrConnectWithoutEchoAppInput
    connect?: GithubLinkWhereUniqueInput
  }

  export type SpendPoolCreateNestedManyWithoutEchoAppInput = {
    create?: XOR<SpendPoolCreateWithoutEchoAppInput, SpendPoolUncheckedCreateWithoutEchoAppInput> | SpendPoolCreateWithoutEchoAppInput[] | SpendPoolUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: SpendPoolCreateOrConnectWithoutEchoAppInput | SpendPoolCreateOrConnectWithoutEchoAppInput[]
    createMany?: SpendPoolCreateManyEchoAppInputEnvelope
    connect?: SpendPoolWhereUniqueInput | SpendPoolWhereUniqueInput[]
  }

  export type ReferralCodeCreateNestedManyWithoutEchoAppInput = {
    create?: XOR<ReferralCodeCreateWithoutEchoAppInput, ReferralCodeUncheckedCreateWithoutEchoAppInput> | ReferralCodeCreateWithoutEchoAppInput[] | ReferralCodeUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: ReferralCodeCreateOrConnectWithoutEchoAppInput | ReferralCodeCreateOrConnectWithoutEchoAppInput[]
    createMany?: ReferralCodeCreateManyEchoAppInputEnvelope
    connect?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
  }

  export type ReferralRewardCreateNestedOneWithoutCurrentForAppsInput = {
    create?: XOR<ReferralRewardCreateWithoutCurrentForAppsInput, ReferralRewardUncheckedCreateWithoutCurrentForAppsInput>
    connectOrCreate?: ReferralRewardCreateOrConnectWithoutCurrentForAppsInput
    connect?: ReferralRewardWhereUniqueInput
  }

  export type ReferralRewardCreateNestedManyWithoutEchoAppInput = {
    create?: XOR<ReferralRewardCreateWithoutEchoAppInput, ReferralRewardUncheckedCreateWithoutEchoAppInput> | ReferralRewardCreateWithoutEchoAppInput[] | ReferralRewardUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: ReferralRewardCreateOrConnectWithoutEchoAppInput | ReferralRewardCreateOrConnectWithoutEchoAppInput[]
    createMany?: ReferralRewardCreateManyEchoAppInputEnvelope
    connect?: ReferralRewardWhereUniqueInput | ReferralRewardWhereUniqueInput[]
  }

  export type AppSessionCreateNestedManyWithoutEchoAppInput = {
    create?: XOR<AppSessionCreateWithoutEchoAppInput, AppSessionUncheckedCreateWithoutEchoAppInput> | AppSessionCreateWithoutEchoAppInput[] | AppSessionUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: AppSessionCreateOrConnectWithoutEchoAppInput | AppSessionCreateOrConnectWithoutEchoAppInput[]
    createMany?: AppSessionCreateManyEchoAppInputEnvelope
    connect?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
  }

  export type ApiKeyUncheckedCreateNestedManyWithoutEchoAppInput = {
    create?: XOR<ApiKeyCreateWithoutEchoAppInput, ApiKeyUncheckedCreateWithoutEchoAppInput> | ApiKeyCreateWithoutEchoAppInput[] | ApiKeyUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: ApiKeyCreateOrConnectWithoutEchoAppInput | ApiKeyCreateOrConnectWithoutEchoAppInput[]
    createMany?: ApiKeyCreateManyEchoAppInputEnvelope
    connect?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
  }

  export type TransactionUncheckedCreateNestedManyWithoutEchoAppInput = {
    create?: XOR<TransactionCreateWithoutEchoAppInput, TransactionUncheckedCreateWithoutEchoAppInput> | TransactionCreateWithoutEchoAppInput[] | TransactionUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutEchoAppInput | TransactionCreateOrConnectWithoutEchoAppInput[]
    createMany?: TransactionCreateManyEchoAppInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type RefreshTokenUncheckedCreateNestedManyWithoutEchoAppInput = {
    create?: XOR<RefreshTokenCreateWithoutEchoAppInput, RefreshTokenUncheckedCreateWithoutEchoAppInput> | RefreshTokenCreateWithoutEchoAppInput[] | RefreshTokenUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutEchoAppInput | RefreshTokenCreateOrConnectWithoutEchoAppInput[]
    createMany?: RefreshTokenCreateManyEchoAppInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type AppMembershipUncheckedCreateNestedManyWithoutEchoAppInput = {
    create?: XOR<AppMembershipCreateWithoutEchoAppInput, AppMembershipUncheckedCreateWithoutEchoAppInput> | AppMembershipCreateWithoutEchoAppInput[] | AppMembershipUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: AppMembershipCreateOrConnectWithoutEchoAppInput | AppMembershipCreateOrConnectWithoutEchoAppInput[]
    createMany?: AppMembershipCreateManyEchoAppInputEnvelope
    connect?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
  }

  export type MarkUpUncheckedCreateNestedOneWithoutEchoAppInput = {
    create?: XOR<MarkUpCreateWithoutEchoAppInput, MarkUpUncheckedCreateWithoutEchoAppInput>
    connectOrCreate?: MarkUpCreateOrConnectWithoutEchoAppInput
    connect?: MarkUpWhereUniqueInput
  }

  export type GithubLinkUncheckedCreateNestedOneWithoutEchoAppInput = {
    create?: XOR<GithubLinkCreateWithoutEchoAppInput, GithubLinkUncheckedCreateWithoutEchoAppInput>
    connectOrCreate?: GithubLinkCreateOrConnectWithoutEchoAppInput
    connect?: GithubLinkWhereUniqueInput
  }

  export type SpendPoolUncheckedCreateNestedManyWithoutEchoAppInput = {
    create?: XOR<SpendPoolCreateWithoutEchoAppInput, SpendPoolUncheckedCreateWithoutEchoAppInput> | SpendPoolCreateWithoutEchoAppInput[] | SpendPoolUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: SpendPoolCreateOrConnectWithoutEchoAppInput | SpendPoolCreateOrConnectWithoutEchoAppInput[]
    createMany?: SpendPoolCreateManyEchoAppInputEnvelope
    connect?: SpendPoolWhereUniqueInput | SpendPoolWhereUniqueInput[]
  }

  export type ReferralCodeUncheckedCreateNestedManyWithoutEchoAppInput = {
    create?: XOR<ReferralCodeCreateWithoutEchoAppInput, ReferralCodeUncheckedCreateWithoutEchoAppInput> | ReferralCodeCreateWithoutEchoAppInput[] | ReferralCodeUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: ReferralCodeCreateOrConnectWithoutEchoAppInput | ReferralCodeCreateOrConnectWithoutEchoAppInput[]
    createMany?: ReferralCodeCreateManyEchoAppInputEnvelope
    connect?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
  }

  export type ReferralRewardUncheckedCreateNestedManyWithoutEchoAppInput = {
    create?: XOR<ReferralRewardCreateWithoutEchoAppInput, ReferralRewardUncheckedCreateWithoutEchoAppInput> | ReferralRewardCreateWithoutEchoAppInput[] | ReferralRewardUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: ReferralRewardCreateOrConnectWithoutEchoAppInput | ReferralRewardCreateOrConnectWithoutEchoAppInput[]
    createMany?: ReferralRewardCreateManyEchoAppInputEnvelope
    connect?: ReferralRewardWhereUniqueInput | ReferralRewardWhereUniqueInput[]
  }

  export type AppSessionUncheckedCreateNestedManyWithoutEchoAppInput = {
    create?: XOR<AppSessionCreateWithoutEchoAppInput, AppSessionUncheckedCreateWithoutEchoAppInput> | AppSessionCreateWithoutEchoAppInput[] | AppSessionUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: AppSessionCreateOrConnectWithoutEchoAppInput | AppSessionCreateOrConnectWithoutEchoAppInput[]
    createMany?: AppSessionCreateManyEchoAppInputEnvelope
    connect?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
  }

  export type EchoAppUpdateauthorizedCallbackUrlsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type ApiKeyUpdateManyWithoutEchoAppNestedInput = {
    create?: XOR<ApiKeyCreateWithoutEchoAppInput, ApiKeyUncheckedCreateWithoutEchoAppInput> | ApiKeyCreateWithoutEchoAppInput[] | ApiKeyUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: ApiKeyCreateOrConnectWithoutEchoAppInput | ApiKeyCreateOrConnectWithoutEchoAppInput[]
    upsert?: ApiKeyUpsertWithWhereUniqueWithoutEchoAppInput | ApiKeyUpsertWithWhereUniqueWithoutEchoAppInput[]
    createMany?: ApiKeyCreateManyEchoAppInputEnvelope
    set?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    disconnect?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    delete?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    connect?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    update?: ApiKeyUpdateWithWhereUniqueWithoutEchoAppInput | ApiKeyUpdateWithWhereUniqueWithoutEchoAppInput[]
    updateMany?: ApiKeyUpdateManyWithWhereWithoutEchoAppInput | ApiKeyUpdateManyWithWhereWithoutEchoAppInput[]
    deleteMany?: ApiKeyScalarWhereInput | ApiKeyScalarWhereInput[]
  }

  export type TransactionUpdateManyWithoutEchoAppNestedInput = {
    create?: XOR<TransactionCreateWithoutEchoAppInput, TransactionUncheckedCreateWithoutEchoAppInput> | TransactionCreateWithoutEchoAppInput[] | TransactionUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutEchoAppInput | TransactionCreateOrConnectWithoutEchoAppInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutEchoAppInput | TransactionUpsertWithWhereUniqueWithoutEchoAppInput[]
    createMany?: TransactionCreateManyEchoAppInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutEchoAppInput | TransactionUpdateWithWhereUniqueWithoutEchoAppInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutEchoAppInput | TransactionUpdateManyWithWhereWithoutEchoAppInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type RefreshTokenUpdateManyWithoutEchoAppNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutEchoAppInput, RefreshTokenUncheckedCreateWithoutEchoAppInput> | RefreshTokenCreateWithoutEchoAppInput[] | RefreshTokenUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutEchoAppInput | RefreshTokenCreateOrConnectWithoutEchoAppInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutEchoAppInput | RefreshTokenUpsertWithWhereUniqueWithoutEchoAppInput[]
    createMany?: RefreshTokenCreateManyEchoAppInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutEchoAppInput | RefreshTokenUpdateWithWhereUniqueWithoutEchoAppInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutEchoAppInput | RefreshTokenUpdateManyWithWhereWithoutEchoAppInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type AppMembershipUpdateManyWithoutEchoAppNestedInput = {
    create?: XOR<AppMembershipCreateWithoutEchoAppInput, AppMembershipUncheckedCreateWithoutEchoAppInput> | AppMembershipCreateWithoutEchoAppInput[] | AppMembershipUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: AppMembershipCreateOrConnectWithoutEchoAppInput | AppMembershipCreateOrConnectWithoutEchoAppInput[]
    upsert?: AppMembershipUpsertWithWhereUniqueWithoutEchoAppInput | AppMembershipUpsertWithWhereUniqueWithoutEchoAppInput[]
    createMany?: AppMembershipCreateManyEchoAppInputEnvelope
    set?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    disconnect?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    delete?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    connect?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    update?: AppMembershipUpdateWithWhereUniqueWithoutEchoAppInput | AppMembershipUpdateWithWhereUniqueWithoutEchoAppInput[]
    updateMany?: AppMembershipUpdateManyWithWhereWithoutEchoAppInput | AppMembershipUpdateManyWithWhereWithoutEchoAppInput[]
    deleteMany?: AppMembershipScalarWhereInput | AppMembershipScalarWhereInput[]
  }

  export type MarkUpUpdateOneWithoutEchoAppNestedInput = {
    create?: XOR<MarkUpCreateWithoutEchoAppInput, MarkUpUncheckedCreateWithoutEchoAppInput>
    connectOrCreate?: MarkUpCreateOrConnectWithoutEchoAppInput
    upsert?: MarkUpUpsertWithoutEchoAppInput
    disconnect?: MarkUpWhereInput | boolean
    delete?: MarkUpWhereInput | boolean
    connect?: MarkUpWhereUniqueInput
    update?: XOR<XOR<MarkUpUpdateToOneWithWhereWithoutEchoAppInput, MarkUpUpdateWithoutEchoAppInput>, MarkUpUncheckedUpdateWithoutEchoAppInput>
  }

  export type GithubLinkUpdateOneWithoutEchoAppNestedInput = {
    create?: XOR<GithubLinkCreateWithoutEchoAppInput, GithubLinkUncheckedCreateWithoutEchoAppInput>
    connectOrCreate?: GithubLinkCreateOrConnectWithoutEchoAppInput
    upsert?: GithubLinkUpsertWithoutEchoAppInput
    disconnect?: GithubLinkWhereInput | boolean
    delete?: GithubLinkWhereInput | boolean
    connect?: GithubLinkWhereUniqueInput
    update?: XOR<XOR<GithubLinkUpdateToOneWithWhereWithoutEchoAppInput, GithubLinkUpdateWithoutEchoAppInput>, GithubLinkUncheckedUpdateWithoutEchoAppInput>
  }

  export type SpendPoolUpdateManyWithoutEchoAppNestedInput = {
    create?: XOR<SpendPoolCreateWithoutEchoAppInput, SpendPoolUncheckedCreateWithoutEchoAppInput> | SpendPoolCreateWithoutEchoAppInput[] | SpendPoolUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: SpendPoolCreateOrConnectWithoutEchoAppInput | SpendPoolCreateOrConnectWithoutEchoAppInput[]
    upsert?: SpendPoolUpsertWithWhereUniqueWithoutEchoAppInput | SpendPoolUpsertWithWhereUniqueWithoutEchoAppInput[]
    createMany?: SpendPoolCreateManyEchoAppInputEnvelope
    set?: SpendPoolWhereUniqueInput | SpendPoolWhereUniqueInput[]
    disconnect?: SpendPoolWhereUniqueInput | SpendPoolWhereUniqueInput[]
    delete?: SpendPoolWhereUniqueInput | SpendPoolWhereUniqueInput[]
    connect?: SpendPoolWhereUniqueInput | SpendPoolWhereUniqueInput[]
    update?: SpendPoolUpdateWithWhereUniqueWithoutEchoAppInput | SpendPoolUpdateWithWhereUniqueWithoutEchoAppInput[]
    updateMany?: SpendPoolUpdateManyWithWhereWithoutEchoAppInput | SpendPoolUpdateManyWithWhereWithoutEchoAppInput[]
    deleteMany?: SpendPoolScalarWhereInput | SpendPoolScalarWhereInput[]
  }

  export type ReferralCodeUpdateManyWithoutEchoAppNestedInput = {
    create?: XOR<ReferralCodeCreateWithoutEchoAppInput, ReferralCodeUncheckedCreateWithoutEchoAppInput> | ReferralCodeCreateWithoutEchoAppInput[] | ReferralCodeUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: ReferralCodeCreateOrConnectWithoutEchoAppInput | ReferralCodeCreateOrConnectWithoutEchoAppInput[]
    upsert?: ReferralCodeUpsertWithWhereUniqueWithoutEchoAppInput | ReferralCodeUpsertWithWhereUniqueWithoutEchoAppInput[]
    createMany?: ReferralCodeCreateManyEchoAppInputEnvelope
    set?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
    disconnect?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
    delete?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
    connect?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
    update?: ReferralCodeUpdateWithWhereUniqueWithoutEchoAppInput | ReferralCodeUpdateWithWhereUniqueWithoutEchoAppInput[]
    updateMany?: ReferralCodeUpdateManyWithWhereWithoutEchoAppInput | ReferralCodeUpdateManyWithWhereWithoutEchoAppInput[]
    deleteMany?: ReferralCodeScalarWhereInput | ReferralCodeScalarWhereInput[]
  }

  export type ReferralRewardUpdateOneWithoutCurrentForAppsNestedInput = {
    create?: XOR<ReferralRewardCreateWithoutCurrentForAppsInput, ReferralRewardUncheckedCreateWithoutCurrentForAppsInput>
    connectOrCreate?: ReferralRewardCreateOrConnectWithoutCurrentForAppsInput
    upsert?: ReferralRewardUpsertWithoutCurrentForAppsInput
    disconnect?: ReferralRewardWhereInput | boolean
    delete?: ReferralRewardWhereInput | boolean
    connect?: ReferralRewardWhereUniqueInput
    update?: XOR<XOR<ReferralRewardUpdateToOneWithWhereWithoutCurrentForAppsInput, ReferralRewardUpdateWithoutCurrentForAppsInput>, ReferralRewardUncheckedUpdateWithoutCurrentForAppsInput>
  }

  export type ReferralRewardUpdateManyWithoutEchoAppNestedInput = {
    create?: XOR<ReferralRewardCreateWithoutEchoAppInput, ReferralRewardUncheckedCreateWithoutEchoAppInput> | ReferralRewardCreateWithoutEchoAppInput[] | ReferralRewardUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: ReferralRewardCreateOrConnectWithoutEchoAppInput | ReferralRewardCreateOrConnectWithoutEchoAppInput[]
    upsert?: ReferralRewardUpsertWithWhereUniqueWithoutEchoAppInput | ReferralRewardUpsertWithWhereUniqueWithoutEchoAppInput[]
    createMany?: ReferralRewardCreateManyEchoAppInputEnvelope
    set?: ReferralRewardWhereUniqueInput | ReferralRewardWhereUniqueInput[]
    disconnect?: ReferralRewardWhereUniqueInput | ReferralRewardWhereUniqueInput[]
    delete?: ReferralRewardWhereUniqueInput | ReferralRewardWhereUniqueInput[]
    connect?: ReferralRewardWhereUniqueInput | ReferralRewardWhereUniqueInput[]
    update?: ReferralRewardUpdateWithWhereUniqueWithoutEchoAppInput | ReferralRewardUpdateWithWhereUniqueWithoutEchoAppInput[]
    updateMany?: ReferralRewardUpdateManyWithWhereWithoutEchoAppInput | ReferralRewardUpdateManyWithWhereWithoutEchoAppInput[]
    deleteMany?: ReferralRewardScalarWhereInput | ReferralRewardScalarWhereInput[]
  }

  export type AppSessionUpdateManyWithoutEchoAppNestedInput = {
    create?: XOR<AppSessionCreateWithoutEchoAppInput, AppSessionUncheckedCreateWithoutEchoAppInput> | AppSessionCreateWithoutEchoAppInput[] | AppSessionUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: AppSessionCreateOrConnectWithoutEchoAppInput | AppSessionCreateOrConnectWithoutEchoAppInput[]
    upsert?: AppSessionUpsertWithWhereUniqueWithoutEchoAppInput | AppSessionUpsertWithWhereUniqueWithoutEchoAppInput[]
    createMany?: AppSessionCreateManyEchoAppInputEnvelope
    set?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
    disconnect?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
    delete?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
    connect?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
    update?: AppSessionUpdateWithWhereUniqueWithoutEchoAppInput | AppSessionUpdateWithWhereUniqueWithoutEchoAppInput[]
    updateMany?: AppSessionUpdateManyWithWhereWithoutEchoAppInput | AppSessionUpdateManyWithWhereWithoutEchoAppInput[]
    deleteMany?: AppSessionScalarWhereInput | AppSessionScalarWhereInput[]
  }

  export type ApiKeyUncheckedUpdateManyWithoutEchoAppNestedInput = {
    create?: XOR<ApiKeyCreateWithoutEchoAppInput, ApiKeyUncheckedCreateWithoutEchoAppInput> | ApiKeyCreateWithoutEchoAppInput[] | ApiKeyUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: ApiKeyCreateOrConnectWithoutEchoAppInput | ApiKeyCreateOrConnectWithoutEchoAppInput[]
    upsert?: ApiKeyUpsertWithWhereUniqueWithoutEchoAppInput | ApiKeyUpsertWithWhereUniqueWithoutEchoAppInput[]
    createMany?: ApiKeyCreateManyEchoAppInputEnvelope
    set?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    disconnect?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    delete?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    connect?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    update?: ApiKeyUpdateWithWhereUniqueWithoutEchoAppInput | ApiKeyUpdateWithWhereUniqueWithoutEchoAppInput[]
    updateMany?: ApiKeyUpdateManyWithWhereWithoutEchoAppInput | ApiKeyUpdateManyWithWhereWithoutEchoAppInput[]
    deleteMany?: ApiKeyScalarWhereInput | ApiKeyScalarWhereInput[]
  }

  export type TransactionUncheckedUpdateManyWithoutEchoAppNestedInput = {
    create?: XOR<TransactionCreateWithoutEchoAppInput, TransactionUncheckedCreateWithoutEchoAppInput> | TransactionCreateWithoutEchoAppInput[] | TransactionUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutEchoAppInput | TransactionCreateOrConnectWithoutEchoAppInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutEchoAppInput | TransactionUpsertWithWhereUniqueWithoutEchoAppInput[]
    createMany?: TransactionCreateManyEchoAppInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutEchoAppInput | TransactionUpdateWithWhereUniqueWithoutEchoAppInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutEchoAppInput | TransactionUpdateManyWithWhereWithoutEchoAppInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type RefreshTokenUncheckedUpdateManyWithoutEchoAppNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutEchoAppInput, RefreshTokenUncheckedCreateWithoutEchoAppInput> | RefreshTokenCreateWithoutEchoAppInput[] | RefreshTokenUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutEchoAppInput | RefreshTokenCreateOrConnectWithoutEchoAppInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutEchoAppInput | RefreshTokenUpsertWithWhereUniqueWithoutEchoAppInput[]
    createMany?: RefreshTokenCreateManyEchoAppInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutEchoAppInput | RefreshTokenUpdateWithWhereUniqueWithoutEchoAppInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutEchoAppInput | RefreshTokenUpdateManyWithWhereWithoutEchoAppInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type AppMembershipUncheckedUpdateManyWithoutEchoAppNestedInput = {
    create?: XOR<AppMembershipCreateWithoutEchoAppInput, AppMembershipUncheckedCreateWithoutEchoAppInput> | AppMembershipCreateWithoutEchoAppInput[] | AppMembershipUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: AppMembershipCreateOrConnectWithoutEchoAppInput | AppMembershipCreateOrConnectWithoutEchoAppInput[]
    upsert?: AppMembershipUpsertWithWhereUniqueWithoutEchoAppInput | AppMembershipUpsertWithWhereUniqueWithoutEchoAppInput[]
    createMany?: AppMembershipCreateManyEchoAppInputEnvelope
    set?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    disconnect?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    delete?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    connect?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    update?: AppMembershipUpdateWithWhereUniqueWithoutEchoAppInput | AppMembershipUpdateWithWhereUniqueWithoutEchoAppInput[]
    updateMany?: AppMembershipUpdateManyWithWhereWithoutEchoAppInput | AppMembershipUpdateManyWithWhereWithoutEchoAppInput[]
    deleteMany?: AppMembershipScalarWhereInput | AppMembershipScalarWhereInput[]
  }

  export type MarkUpUncheckedUpdateOneWithoutEchoAppNestedInput = {
    create?: XOR<MarkUpCreateWithoutEchoAppInput, MarkUpUncheckedCreateWithoutEchoAppInput>
    connectOrCreate?: MarkUpCreateOrConnectWithoutEchoAppInput
    upsert?: MarkUpUpsertWithoutEchoAppInput
    disconnect?: MarkUpWhereInput | boolean
    delete?: MarkUpWhereInput | boolean
    connect?: MarkUpWhereUniqueInput
    update?: XOR<XOR<MarkUpUpdateToOneWithWhereWithoutEchoAppInput, MarkUpUpdateWithoutEchoAppInput>, MarkUpUncheckedUpdateWithoutEchoAppInput>
  }

  export type GithubLinkUncheckedUpdateOneWithoutEchoAppNestedInput = {
    create?: XOR<GithubLinkCreateWithoutEchoAppInput, GithubLinkUncheckedCreateWithoutEchoAppInput>
    connectOrCreate?: GithubLinkCreateOrConnectWithoutEchoAppInput
    upsert?: GithubLinkUpsertWithoutEchoAppInput
    disconnect?: GithubLinkWhereInput | boolean
    delete?: GithubLinkWhereInput | boolean
    connect?: GithubLinkWhereUniqueInput
    update?: XOR<XOR<GithubLinkUpdateToOneWithWhereWithoutEchoAppInput, GithubLinkUpdateWithoutEchoAppInput>, GithubLinkUncheckedUpdateWithoutEchoAppInput>
  }

  export type SpendPoolUncheckedUpdateManyWithoutEchoAppNestedInput = {
    create?: XOR<SpendPoolCreateWithoutEchoAppInput, SpendPoolUncheckedCreateWithoutEchoAppInput> | SpendPoolCreateWithoutEchoAppInput[] | SpendPoolUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: SpendPoolCreateOrConnectWithoutEchoAppInput | SpendPoolCreateOrConnectWithoutEchoAppInput[]
    upsert?: SpendPoolUpsertWithWhereUniqueWithoutEchoAppInput | SpendPoolUpsertWithWhereUniqueWithoutEchoAppInput[]
    createMany?: SpendPoolCreateManyEchoAppInputEnvelope
    set?: SpendPoolWhereUniqueInput | SpendPoolWhereUniqueInput[]
    disconnect?: SpendPoolWhereUniqueInput | SpendPoolWhereUniqueInput[]
    delete?: SpendPoolWhereUniqueInput | SpendPoolWhereUniqueInput[]
    connect?: SpendPoolWhereUniqueInput | SpendPoolWhereUniqueInput[]
    update?: SpendPoolUpdateWithWhereUniqueWithoutEchoAppInput | SpendPoolUpdateWithWhereUniqueWithoutEchoAppInput[]
    updateMany?: SpendPoolUpdateManyWithWhereWithoutEchoAppInput | SpendPoolUpdateManyWithWhereWithoutEchoAppInput[]
    deleteMany?: SpendPoolScalarWhereInput | SpendPoolScalarWhereInput[]
  }

  export type ReferralCodeUncheckedUpdateManyWithoutEchoAppNestedInput = {
    create?: XOR<ReferralCodeCreateWithoutEchoAppInput, ReferralCodeUncheckedCreateWithoutEchoAppInput> | ReferralCodeCreateWithoutEchoAppInput[] | ReferralCodeUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: ReferralCodeCreateOrConnectWithoutEchoAppInput | ReferralCodeCreateOrConnectWithoutEchoAppInput[]
    upsert?: ReferralCodeUpsertWithWhereUniqueWithoutEchoAppInput | ReferralCodeUpsertWithWhereUniqueWithoutEchoAppInput[]
    createMany?: ReferralCodeCreateManyEchoAppInputEnvelope
    set?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
    disconnect?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
    delete?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
    connect?: ReferralCodeWhereUniqueInput | ReferralCodeWhereUniqueInput[]
    update?: ReferralCodeUpdateWithWhereUniqueWithoutEchoAppInput | ReferralCodeUpdateWithWhereUniqueWithoutEchoAppInput[]
    updateMany?: ReferralCodeUpdateManyWithWhereWithoutEchoAppInput | ReferralCodeUpdateManyWithWhereWithoutEchoAppInput[]
    deleteMany?: ReferralCodeScalarWhereInput | ReferralCodeScalarWhereInput[]
  }

  export type ReferralRewardUncheckedUpdateManyWithoutEchoAppNestedInput = {
    create?: XOR<ReferralRewardCreateWithoutEchoAppInput, ReferralRewardUncheckedCreateWithoutEchoAppInput> | ReferralRewardCreateWithoutEchoAppInput[] | ReferralRewardUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: ReferralRewardCreateOrConnectWithoutEchoAppInput | ReferralRewardCreateOrConnectWithoutEchoAppInput[]
    upsert?: ReferralRewardUpsertWithWhereUniqueWithoutEchoAppInput | ReferralRewardUpsertWithWhereUniqueWithoutEchoAppInput[]
    createMany?: ReferralRewardCreateManyEchoAppInputEnvelope
    set?: ReferralRewardWhereUniqueInput | ReferralRewardWhereUniqueInput[]
    disconnect?: ReferralRewardWhereUniqueInput | ReferralRewardWhereUniqueInput[]
    delete?: ReferralRewardWhereUniqueInput | ReferralRewardWhereUniqueInput[]
    connect?: ReferralRewardWhereUniqueInput | ReferralRewardWhereUniqueInput[]
    update?: ReferralRewardUpdateWithWhereUniqueWithoutEchoAppInput | ReferralRewardUpdateWithWhereUniqueWithoutEchoAppInput[]
    updateMany?: ReferralRewardUpdateManyWithWhereWithoutEchoAppInput | ReferralRewardUpdateManyWithWhereWithoutEchoAppInput[]
    deleteMany?: ReferralRewardScalarWhereInput | ReferralRewardScalarWhereInput[]
  }

  export type AppSessionUncheckedUpdateManyWithoutEchoAppNestedInput = {
    create?: XOR<AppSessionCreateWithoutEchoAppInput, AppSessionUncheckedCreateWithoutEchoAppInput> | AppSessionCreateWithoutEchoAppInput[] | AppSessionUncheckedCreateWithoutEchoAppInput[]
    connectOrCreate?: AppSessionCreateOrConnectWithoutEchoAppInput | AppSessionCreateOrConnectWithoutEchoAppInput[]
    upsert?: AppSessionUpsertWithWhereUniqueWithoutEchoAppInput | AppSessionUpsertWithWhereUniqueWithoutEchoAppInput[]
    createMany?: AppSessionCreateManyEchoAppInputEnvelope
    set?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
    disconnect?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
    delete?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
    connect?: AppSessionWhereUniqueInput | AppSessionWhereUniqueInput[]
    update?: AppSessionUpdateWithWhereUniqueWithoutEchoAppInput | AppSessionUpdateWithWhereUniqueWithoutEchoAppInput[]
    updateMany?: AppSessionUpdateManyWithWhereWithoutEchoAppInput | AppSessionUpdateManyWithWhereWithoutEchoAppInput[]
    deleteMany?: AppSessionScalarWhereInput | AppSessionScalarWhereInput[]
  }

  export type ReferralCodeCreateNestedOneWithoutAppMembershipsInput = {
    create?: XOR<ReferralCodeCreateWithoutAppMembershipsInput, ReferralCodeUncheckedCreateWithoutAppMembershipsInput>
    connectOrCreate?: ReferralCodeCreateOrConnectWithoutAppMembershipsInput
    connect?: ReferralCodeWhereUniqueInput
  }

  export type EchoAppCreateNestedOneWithoutAppMembershipsInput = {
    create?: XOR<EchoAppCreateWithoutAppMembershipsInput, EchoAppUncheckedCreateWithoutAppMembershipsInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutAppMembershipsInput
    connect?: EchoAppWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAppMembershipsInput = {
    create?: XOR<UserCreateWithoutAppMembershipsInput, UserUncheckedCreateWithoutAppMembershipsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAppMembershipsInput
    connect?: UserWhereUniqueInput
  }

  export type ReferralCodeUpdateOneWithoutAppMembershipsNestedInput = {
    create?: XOR<ReferralCodeCreateWithoutAppMembershipsInput, ReferralCodeUncheckedCreateWithoutAppMembershipsInput>
    connectOrCreate?: ReferralCodeCreateOrConnectWithoutAppMembershipsInput
    upsert?: ReferralCodeUpsertWithoutAppMembershipsInput
    disconnect?: ReferralCodeWhereInput | boolean
    delete?: ReferralCodeWhereInput | boolean
    connect?: ReferralCodeWhereUniqueInput
    update?: XOR<XOR<ReferralCodeUpdateToOneWithWhereWithoutAppMembershipsInput, ReferralCodeUpdateWithoutAppMembershipsInput>, ReferralCodeUncheckedUpdateWithoutAppMembershipsInput>
  }

  export type EchoAppUpdateOneRequiredWithoutAppMembershipsNestedInput = {
    create?: XOR<EchoAppCreateWithoutAppMembershipsInput, EchoAppUncheckedCreateWithoutAppMembershipsInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutAppMembershipsInput
    upsert?: EchoAppUpsertWithoutAppMembershipsInput
    connect?: EchoAppWhereUniqueInput
    update?: XOR<XOR<EchoAppUpdateToOneWithWhereWithoutAppMembershipsInput, EchoAppUpdateWithoutAppMembershipsInput>, EchoAppUncheckedUpdateWithoutAppMembershipsInput>
  }

  export type UserUpdateOneRequiredWithoutAppMembershipsNestedInput = {
    create?: XOR<UserCreateWithoutAppMembershipsInput, UserUncheckedCreateWithoutAppMembershipsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAppMembershipsInput
    upsert?: UserUpsertWithoutAppMembershipsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAppMembershipsInput, UserUpdateWithoutAppMembershipsInput>, UserUncheckedUpdateWithoutAppMembershipsInput>
  }

  export type EchoAppCreateNestedOneWithoutApiKeysInput = {
    create?: XOR<EchoAppCreateWithoutApiKeysInput, EchoAppUncheckedCreateWithoutApiKeysInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutApiKeysInput
    connect?: EchoAppWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutApiKeysInput = {
    create?: XOR<UserCreateWithoutApiKeysInput, UserUncheckedCreateWithoutApiKeysInput>
    connectOrCreate?: UserCreateOrConnectWithoutApiKeysInput
    connect?: UserWhereUniqueInput
  }

  export type TransactionCreateNestedManyWithoutApiKeyInput = {
    create?: XOR<TransactionCreateWithoutApiKeyInput, TransactionUncheckedCreateWithoutApiKeyInput> | TransactionCreateWithoutApiKeyInput[] | TransactionUncheckedCreateWithoutApiKeyInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutApiKeyInput | TransactionCreateOrConnectWithoutApiKeyInput[]
    createMany?: TransactionCreateManyApiKeyInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type TransactionUncheckedCreateNestedManyWithoutApiKeyInput = {
    create?: XOR<TransactionCreateWithoutApiKeyInput, TransactionUncheckedCreateWithoutApiKeyInput> | TransactionCreateWithoutApiKeyInput[] | TransactionUncheckedCreateWithoutApiKeyInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutApiKeyInput | TransactionCreateOrConnectWithoutApiKeyInput[]
    createMany?: TransactionCreateManyApiKeyInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type EchoAppUpdateOneRequiredWithoutApiKeysNestedInput = {
    create?: XOR<EchoAppCreateWithoutApiKeysInput, EchoAppUncheckedCreateWithoutApiKeysInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutApiKeysInput
    upsert?: EchoAppUpsertWithoutApiKeysInput
    connect?: EchoAppWhereUniqueInput
    update?: XOR<XOR<EchoAppUpdateToOneWithWhereWithoutApiKeysInput, EchoAppUpdateWithoutApiKeysInput>, EchoAppUncheckedUpdateWithoutApiKeysInput>
  }

  export type UserUpdateOneRequiredWithoutApiKeysNestedInput = {
    create?: XOR<UserCreateWithoutApiKeysInput, UserUncheckedCreateWithoutApiKeysInput>
    connectOrCreate?: UserCreateOrConnectWithoutApiKeysInput
    upsert?: UserUpsertWithoutApiKeysInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutApiKeysInput, UserUpdateWithoutApiKeysInput>, UserUncheckedUpdateWithoutApiKeysInput>
  }

  export type TransactionUpdateManyWithoutApiKeyNestedInput = {
    create?: XOR<TransactionCreateWithoutApiKeyInput, TransactionUncheckedCreateWithoutApiKeyInput> | TransactionCreateWithoutApiKeyInput[] | TransactionUncheckedCreateWithoutApiKeyInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutApiKeyInput | TransactionCreateOrConnectWithoutApiKeyInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutApiKeyInput | TransactionUpsertWithWhereUniqueWithoutApiKeyInput[]
    createMany?: TransactionCreateManyApiKeyInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutApiKeyInput | TransactionUpdateWithWhereUniqueWithoutApiKeyInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutApiKeyInput | TransactionUpdateManyWithWhereWithoutApiKeyInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type TransactionUncheckedUpdateManyWithoutApiKeyNestedInput = {
    create?: XOR<TransactionCreateWithoutApiKeyInput, TransactionUncheckedCreateWithoutApiKeyInput> | TransactionCreateWithoutApiKeyInput[] | TransactionUncheckedCreateWithoutApiKeyInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutApiKeyInput | TransactionCreateOrConnectWithoutApiKeyInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutApiKeyInput | TransactionUpsertWithWhereUniqueWithoutApiKeyInput[]
    createMany?: TransactionCreateManyApiKeyInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutApiKeyInput | TransactionUpdateWithWhereUniqueWithoutApiKeyInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutApiKeyInput | TransactionUpdateManyWithWhereWithoutApiKeyInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type EchoAppCreateNestedOneWithoutRefreshTokensInput = {
    create?: XOR<EchoAppCreateWithoutRefreshTokensInput, EchoAppUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutRefreshTokensInput
    connect?: EchoAppWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutRefreshTokensInput = {
    create?: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: UserCreateOrConnectWithoutRefreshTokensInput
    connect?: UserWhereUniqueInput
  }

  export type AppSessionCreateNestedOneWithoutRefreshTokensInput = {
    create?: XOR<AppSessionCreateWithoutRefreshTokensInput, AppSessionUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: AppSessionCreateOrConnectWithoutRefreshTokensInput
    connect?: AppSessionWhereUniqueInput
  }

  export type EchoAppUpdateOneRequiredWithoutRefreshTokensNestedInput = {
    create?: XOR<EchoAppCreateWithoutRefreshTokensInput, EchoAppUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutRefreshTokensInput
    upsert?: EchoAppUpsertWithoutRefreshTokensInput
    connect?: EchoAppWhereUniqueInput
    update?: XOR<XOR<EchoAppUpdateToOneWithWhereWithoutRefreshTokensInput, EchoAppUpdateWithoutRefreshTokensInput>, EchoAppUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type UserUpdateOneRequiredWithoutRefreshTokensNestedInput = {
    create?: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: UserCreateOrConnectWithoutRefreshTokensInput
    upsert?: UserUpsertWithoutRefreshTokensInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRefreshTokensInput, UserUpdateWithoutRefreshTokensInput>, UserUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type AppSessionUpdateOneWithoutRefreshTokensNestedInput = {
    create?: XOR<AppSessionCreateWithoutRefreshTokensInput, AppSessionUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: AppSessionCreateOrConnectWithoutRefreshTokensInput
    upsert?: AppSessionUpsertWithoutRefreshTokensInput
    disconnect?: AppSessionWhereInput | boolean
    delete?: AppSessionWhereInput | boolean
    connect?: AppSessionWhereUniqueInput
    update?: XOR<XOR<AppSessionUpdateToOneWithWhereWithoutRefreshTokensInput, AppSessionUpdateWithoutRefreshTokensInput>, AppSessionUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type UserCreateNestedOneWithoutAppSessionsInput = {
    create?: XOR<UserCreateWithoutAppSessionsInput, UserUncheckedCreateWithoutAppSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAppSessionsInput
    connect?: UserWhereUniqueInput
  }

  export type EchoAppCreateNestedOneWithoutAppSessionsInput = {
    create?: XOR<EchoAppCreateWithoutAppSessionsInput, EchoAppUncheckedCreateWithoutAppSessionsInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutAppSessionsInput
    connect?: EchoAppWhereUniqueInput
  }

  export type RefreshTokenCreateNestedManyWithoutSessionInput = {
    create?: XOR<RefreshTokenCreateWithoutSessionInput, RefreshTokenUncheckedCreateWithoutSessionInput> | RefreshTokenCreateWithoutSessionInput[] | RefreshTokenUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutSessionInput | RefreshTokenCreateOrConnectWithoutSessionInput[]
    createMany?: RefreshTokenCreateManySessionInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type RefreshTokenUncheckedCreateNestedManyWithoutSessionInput = {
    create?: XOR<RefreshTokenCreateWithoutSessionInput, RefreshTokenUncheckedCreateWithoutSessionInput> | RefreshTokenCreateWithoutSessionInput[] | RefreshTokenUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutSessionInput | RefreshTokenCreateOrConnectWithoutSessionInput[]
    createMany?: RefreshTokenCreateManySessionInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutAppSessionsNestedInput = {
    create?: XOR<UserCreateWithoutAppSessionsInput, UserUncheckedCreateWithoutAppSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAppSessionsInput
    upsert?: UserUpsertWithoutAppSessionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAppSessionsInput, UserUpdateWithoutAppSessionsInput>, UserUncheckedUpdateWithoutAppSessionsInput>
  }

  export type EchoAppUpdateOneRequiredWithoutAppSessionsNestedInput = {
    create?: XOR<EchoAppCreateWithoutAppSessionsInput, EchoAppUncheckedCreateWithoutAppSessionsInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutAppSessionsInput
    upsert?: EchoAppUpsertWithoutAppSessionsInput
    connect?: EchoAppWhereUniqueInput
    update?: XOR<XOR<EchoAppUpdateToOneWithWhereWithoutAppSessionsInput, EchoAppUpdateWithoutAppSessionsInput>, EchoAppUncheckedUpdateWithoutAppSessionsInput>
  }

  export type RefreshTokenUpdateManyWithoutSessionNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutSessionInput, RefreshTokenUncheckedCreateWithoutSessionInput> | RefreshTokenCreateWithoutSessionInput[] | RefreshTokenUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutSessionInput | RefreshTokenCreateOrConnectWithoutSessionInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutSessionInput | RefreshTokenUpsertWithWhereUniqueWithoutSessionInput[]
    createMany?: RefreshTokenCreateManySessionInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutSessionInput | RefreshTokenUpdateWithWhereUniqueWithoutSessionInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutSessionInput | RefreshTokenUpdateManyWithWhereWithoutSessionInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type RefreshTokenUncheckedUpdateManyWithoutSessionNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutSessionInput, RefreshTokenUncheckedCreateWithoutSessionInput> | RefreshTokenCreateWithoutSessionInput[] | RefreshTokenUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutSessionInput | RefreshTokenCreateOrConnectWithoutSessionInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutSessionInput | RefreshTokenUpsertWithWhereUniqueWithoutSessionInput[]
    createMany?: RefreshTokenCreateManySessionInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutSessionInput | RefreshTokenUpdateWithWhereUniqueWithoutSessionInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutSessionInput | RefreshTokenUpdateManyWithWhereWithoutSessionInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type SpendPoolCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<SpendPoolCreateWithoutPaymentsInput, SpendPoolUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: SpendPoolCreateOrConnectWithoutPaymentsInput
    connect?: SpendPoolWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPaymentsInput
    connect?: UserWhereUniqueInput
  }

  export type SpendPoolUpdateOneWithoutPaymentsNestedInput = {
    create?: XOR<SpendPoolCreateWithoutPaymentsInput, SpendPoolUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: SpendPoolCreateOrConnectWithoutPaymentsInput
    upsert?: SpendPoolUpsertWithoutPaymentsInput
    disconnect?: SpendPoolWhereInput | boolean
    delete?: SpendPoolWhereInput | boolean
    connect?: SpendPoolWhereUniqueInput
    update?: XOR<XOR<SpendPoolUpdateToOneWithWhereWithoutPaymentsInput, SpendPoolUpdateWithoutPaymentsInput>, SpendPoolUncheckedUpdateWithoutPaymentsInput>
  }

  export type UserUpdateOneRequiredWithoutPaymentsNestedInput = {
    create?: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPaymentsInput
    upsert?: UserUpsertWithoutPaymentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPaymentsInput, UserUpdateWithoutPaymentsInput>, UserUncheckedUpdateWithoutPaymentsInput>
  }

  export type EchoAppCreateNestedOneWithoutMarkUpInput = {
    create?: XOR<EchoAppCreateWithoutMarkUpInput, EchoAppUncheckedCreateWithoutMarkUpInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutMarkUpInput
    connect?: EchoAppWhereUniqueInput
  }

  export type TransactionCreateNestedManyWithoutMarkUpInput = {
    create?: XOR<TransactionCreateWithoutMarkUpInput, TransactionUncheckedCreateWithoutMarkUpInput> | TransactionCreateWithoutMarkUpInput[] | TransactionUncheckedCreateWithoutMarkUpInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutMarkUpInput | TransactionCreateOrConnectWithoutMarkUpInput[]
    createMany?: TransactionCreateManyMarkUpInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type TransactionUncheckedCreateNestedManyWithoutMarkUpInput = {
    create?: XOR<TransactionCreateWithoutMarkUpInput, TransactionUncheckedCreateWithoutMarkUpInput> | TransactionCreateWithoutMarkUpInput[] | TransactionUncheckedCreateWithoutMarkUpInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutMarkUpInput | TransactionCreateOrConnectWithoutMarkUpInput[]
    createMany?: TransactionCreateManyMarkUpInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type EchoAppUpdateOneRequiredWithoutMarkUpNestedInput = {
    create?: XOR<EchoAppCreateWithoutMarkUpInput, EchoAppUncheckedCreateWithoutMarkUpInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutMarkUpInput
    upsert?: EchoAppUpsertWithoutMarkUpInput
    connect?: EchoAppWhereUniqueInput
    update?: XOR<XOR<EchoAppUpdateToOneWithWhereWithoutMarkUpInput, EchoAppUpdateWithoutMarkUpInput>, EchoAppUncheckedUpdateWithoutMarkUpInput>
  }

  export type TransactionUpdateManyWithoutMarkUpNestedInput = {
    create?: XOR<TransactionCreateWithoutMarkUpInput, TransactionUncheckedCreateWithoutMarkUpInput> | TransactionCreateWithoutMarkUpInput[] | TransactionUncheckedCreateWithoutMarkUpInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutMarkUpInput | TransactionCreateOrConnectWithoutMarkUpInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutMarkUpInput | TransactionUpsertWithWhereUniqueWithoutMarkUpInput[]
    createMany?: TransactionCreateManyMarkUpInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutMarkUpInput | TransactionUpdateWithWhereUniqueWithoutMarkUpInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutMarkUpInput | TransactionUpdateManyWithWhereWithoutMarkUpInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type TransactionUncheckedUpdateManyWithoutMarkUpNestedInput = {
    create?: XOR<TransactionCreateWithoutMarkUpInput, TransactionUncheckedCreateWithoutMarkUpInput> | TransactionCreateWithoutMarkUpInput[] | TransactionUncheckedCreateWithoutMarkUpInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutMarkUpInput | TransactionCreateOrConnectWithoutMarkUpInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutMarkUpInput | TransactionUpsertWithWhereUniqueWithoutMarkUpInput[]
    createMany?: TransactionCreateManyMarkUpInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutMarkUpInput | TransactionUpdateWithWhereUniqueWithoutMarkUpInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutMarkUpInput | TransactionUpdateManyWithWhereWithoutMarkUpInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type EchoAppCreateNestedOneWithoutGithubLinkInput = {
    create?: XOR<EchoAppCreateWithoutGithubLinkInput, EchoAppUncheckedCreateWithoutGithubLinkInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutGithubLinkInput
    connect?: EchoAppWhereUniqueInput
  }

  export type TransactionCreateNestedManyWithoutGithubLinkInput = {
    create?: XOR<TransactionCreateWithoutGithubLinkInput, TransactionUncheckedCreateWithoutGithubLinkInput> | TransactionCreateWithoutGithubLinkInput[] | TransactionUncheckedCreateWithoutGithubLinkInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutGithubLinkInput | TransactionCreateOrConnectWithoutGithubLinkInput[]
    createMany?: TransactionCreateManyGithubLinkInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type TransactionUncheckedCreateNestedManyWithoutGithubLinkInput = {
    create?: XOR<TransactionCreateWithoutGithubLinkInput, TransactionUncheckedCreateWithoutGithubLinkInput> | TransactionCreateWithoutGithubLinkInput[] | TransactionUncheckedCreateWithoutGithubLinkInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutGithubLinkInput | TransactionCreateOrConnectWithoutGithubLinkInput[]
    createMany?: TransactionCreateManyGithubLinkInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumGithubTypeFieldUpdateOperationsInput = {
    set?: $Enums.GithubType
  }

  export type EchoAppUpdateOneRequiredWithoutGithubLinkNestedInput = {
    create?: XOR<EchoAppCreateWithoutGithubLinkInput, EchoAppUncheckedCreateWithoutGithubLinkInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutGithubLinkInput
    upsert?: EchoAppUpsertWithoutGithubLinkInput
    connect?: EchoAppWhereUniqueInput
    update?: XOR<XOR<EchoAppUpdateToOneWithWhereWithoutGithubLinkInput, EchoAppUpdateWithoutGithubLinkInput>, EchoAppUncheckedUpdateWithoutGithubLinkInput>
  }

  export type TransactionUpdateManyWithoutGithubLinkNestedInput = {
    create?: XOR<TransactionCreateWithoutGithubLinkInput, TransactionUncheckedCreateWithoutGithubLinkInput> | TransactionCreateWithoutGithubLinkInput[] | TransactionUncheckedCreateWithoutGithubLinkInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutGithubLinkInput | TransactionCreateOrConnectWithoutGithubLinkInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutGithubLinkInput | TransactionUpsertWithWhereUniqueWithoutGithubLinkInput[]
    createMany?: TransactionCreateManyGithubLinkInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutGithubLinkInput | TransactionUpdateWithWhereUniqueWithoutGithubLinkInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutGithubLinkInput | TransactionUpdateManyWithWhereWithoutGithubLinkInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type TransactionUncheckedUpdateManyWithoutGithubLinkNestedInput = {
    create?: XOR<TransactionCreateWithoutGithubLinkInput, TransactionUncheckedCreateWithoutGithubLinkInput> | TransactionCreateWithoutGithubLinkInput[] | TransactionUncheckedCreateWithoutGithubLinkInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutGithubLinkInput | TransactionCreateOrConnectWithoutGithubLinkInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutGithubLinkInput | TransactionUpsertWithWhereUniqueWithoutGithubLinkInput[]
    createMany?: TransactionCreateManyGithubLinkInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutGithubLinkInput | TransactionUpdateWithWhereUniqueWithoutGithubLinkInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutGithubLinkInput | TransactionUpdateManyWithWhereWithoutGithubLinkInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type ApiKeyCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<ApiKeyCreateWithoutTransactionsInput, ApiKeyUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: ApiKeyCreateOrConnectWithoutTransactionsInput
    connect?: ApiKeyWhereUniqueInput
  }

  export type EchoAppCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<EchoAppCreateWithoutTransactionsInput, EchoAppUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutTransactionsInput
    connect?: EchoAppWhereUniqueInput
  }

  export type GithubLinkCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<GithubLinkCreateWithoutTransactionsInput, GithubLinkUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: GithubLinkCreateOrConnectWithoutTransactionsInput
    connect?: GithubLinkWhereUniqueInput
  }

  export type MarkUpCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<MarkUpCreateWithoutTransactionsInput, MarkUpUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: MarkUpCreateOrConnectWithoutTransactionsInput
    connect?: MarkUpWhereUniqueInput
  }

  export type SpendPoolCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<SpendPoolCreateWithoutTransactionsInput, SpendPoolUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: SpendPoolCreateOrConnectWithoutTransactionsInput
    connect?: SpendPoolWhereUniqueInput
  }

  export type TransactionMetadataCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<TransactionMetadataCreateWithoutTransactionsInput, TransactionMetadataUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: TransactionMetadataCreateOrConnectWithoutTransactionsInput
    connect?: TransactionMetadataWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<UserCreateWithoutTransactionsInput, UserUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTransactionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserSpendPoolUsageCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<UserSpendPoolUsageCreateWithoutTransactionsInput, UserSpendPoolUsageUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: UserSpendPoolUsageCreateOrConnectWithoutTransactionsInput
    connect?: UserSpendPoolUsageWhereUniqueInput
  }

  export type ReferralCodeCreateNestedOneWithoutTransactionInput = {
    create?: XOR<ReferralCodeCreateWithoutTransactionInput, ReferralCodeUncheckedCreateWithoutTransactionInput>
    connectOrCreate?: ReferralCodeCreateOrConnectWithoutTransactionInput
    connect?: ReferralCodeWhereUniqueInput
  }

  export type ReferralRewardCreateNestedOneWithoutTransactionInput = {
    create?: XOR<ReferralRewardCreateWithoutTransactionInput, ReferralRewardUncheckedCreateWithoutTransactionInput>
    connectOrCreate?: ReferralRewardCreateOrConnectWithoutTransactionInput
    connect?: ReferralRewardWhereUniqueInput
  }

  export type ApiKeyUpdateOneWithoutTransactionsNestedInput = {
    create?: XOR<ApiKeyCreateWithoutTransactionsInput, ApiKeyUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: ApiKeyCreateOrConnectWithoutTransactionsInput
    upsert?: ApiKeyUpsertWithoutTransactionsInput
    disconnect?: ApiKeyWhereInput | boolean
    delete?: ApiKeyWhereInput | boolean
    connect?: ApiKeyWhereUniqueInput
    update?: XOR<XOR<ApiKeyUpdateToOneWithWhereWithoutTransactionsInput, ApiKeyUpdateWithoutTransactionsInput>, ApiKeyUncheckedUpdateWithoutTransactionsInput>
  }

  export type EchoAppUpdateOneRequiredWithoutTransactionsNestedInput = {
    create?: XOR<EchoAppCreateWithoutTransactionsInput, EchoAppUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutTransactionsInput
    upsert?: EchoAppUpsertWithoutTransactionsInput
    connect?: EchoAppWhereUniqueInput
    update?: XOR<XOR<EchoAppUpdateToOneWithWhereWithoutTransactionsInput, EchoAppUpdateWithoutTransactionsInput>, EchoAppUncheckedUpdateWithoutTransactionsInput>
  }

  export type GithubLinkUpdateOneWithoutTransactionsNestedInput = {
    create?: XOR<GithubLinkCreateWithoutTransactionsInput, GithubLinkUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: GithubLinkCreateOrConnectWithoutTransactionsInput
    upsert?: GithubLinkUpsertWithoutTransactionsInput
    disconnect?: GithubLinkWhereInput | boolean
    delete?: GithubLinkWhereInput | boolean
    connect?: GithubLinkWhereUniqueInput
    update?: XOR<XOR<GithubLinkUpdateToOneWithWhereWithoutTransactionsInput, GithubLinkUpdateWithoutTransactionsInput>, GithubLinkUncheckedUpdateWithoutTransactionsInput>
  }

  export type MarkUpUpdateOneWithoutTransactionsNestedInput = {
    create?: XOR<MarkUpCreateWithoutTransactionsInput, MarkUpUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: MarkUpCreateOrConnectWithoutTransactionsInput
    upsert?: MarkUpUpsertWithoutTransactionsInput
    disconnect?: MarkUpWhereInput | boolean
    delete?: MarkUpWhereInput | boolean
    connect?: MarkUpWhereUniqueInput
    update?: XOR<XOR<MarkUpUpdateToOneWithWhereWithoutTransactionsInput, MarkUpUpdateWithoutTransactionsInput>, MarkUpUncheckedUpdateWithoutTransactionsInput>
  }

  export type SpendPoolUpdateOneWithoutTransactionsNestedInput = {
    create?: XOR<SpendPoolCreateWithoutTransactionsInput, SpendPoolUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: SpendPoolCreateOrConnectWithoutTransactionsInput
    upsert?: SpendPoolUpsertWithoutTransactionsInput
    disconnect?: SpendPoolWhereInput | boolean
    delete?: SpendPoolWhereInput | boolean
    connect?: SpendPoolWhereUniqueInput
    update?: XOR<XOR<SpendPoolUpdateToOneWithWhereWithoutTransactionsInput, SpendPoolUpdateWithoutTransactionsInput>, SpendPoolUncheckedUpdateWithoutTransactionsInput>
  }

  export type TransactionMetadataUpdateOneWithoutTransactionsNestedInput = {
    create?: XOR<TransactionMetadataCreateWithoutTransactionsInput, TransactionMetadataUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: TransactionMetadataCreateOrConnectWithoutTransactionsInput
    upsert?: TransactionMetadataUpsertWithoutTransactionsInput
    disconnect?: TransactionMetadataWhereInput | boolean
    delete?: TransactionMetadataWhereInput | boolean
    connect?: TransactionMetadataWhereUniqueInput
    update?: XOR<XOR<TransactionMetadataUpdateToOneWithWhereWithoutTransactionsInput, TransactionMetadataUpdateWithoutTransactionsInput>, TransactionMetadataUncheckedUpdateWithoutTransactionsInput>
  }

  export type UserUpdateOneRequiredWithoutTransactionsNestedInput = {
    create?: XOR<UserCreateWithoutTransactionsInput, UserUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTransactionsInput
    upsert?: UserUpsertWithoutTransactionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTransactionsInput, UserUpdateWithoutTransactionsInput>, UserUncheckedUpdateWithoutTransactionsInput>
  }

  export type UserSpendPoolUsageUpdateOneWithoutTransactionsNestedInput = {
    create?: XOR<UserSpendPoolUsageCreateWithoutTransactionsInput, UserSpendPoolUsageUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: UserSpendPoolUsageCreateOrConnectWithoutTransactionsInput
    upsert?: UserSpendPoolUsageUpsertWithoutTransactionsInput
    disconnect?: UserSpendPoolUsageWhereInput | boolean
    delete?: UserSpendPoolUsageWhereInput | boolean
    connect?: UserSpendPoolUsageWhereUniqueInput
    update?: XOR<XOR<UserSpendPoolUsageUpdateToOneWithWhereWithoutTransactionsInput, UserSpendPoolUsageUpdateWithoutTransactionsInput>, UserSpendPoolUsageUncheckedUpdateWithoutTransactionsInput>
  }

  export type ReferralCodeUpdateOneWithoutTransactionNestedInput = {
    create?: XOR<ReferralCodeCreateWithoutTransactionInput, ReferralCodeUncheckedCreateWithoutTransactionInput>
    connectOrCreate?: ReferralCodeCreateOrConnectWithoutTransactionInput
    upsert?: ReferralCodeUpsertWithoutTransactionInput
    disconnect?: ReferralCodeWhereInput | boolean
    delete?: ReferralCodeWhereInput | boolean
    connect?: ReferralCodeWhereUniqueInput
    update?: XOR<XOR<ReferralCodeUpdateToOneWithWhereWithoutTransactionInput, ReferralCodeUpdateWithoutTransactionInput>, ReferralCodeUncheckedUpdateWithoutTransactionInput>
  }

  export type ReferralRewardUpdateOneWithoutTransactionNestedInput = {
    create?: XOR<ReferralRewardCreateWithoutTransactionInput, ReferralRewardUncheckedCreateWithoutTransactionInput>
    connectOrCreate?: ReferralRewardCreateOrConnectWithoutTransactionInput
    upsert?: ReferralRewardUpsertWithoutTransactionInput
    disconnect?: ReferralRewardWhereInput | boolean
    delete?: ReferralRewardWhereInput | boolean
    connect?: ReferralRewardWhereUniqueInput
    update?: XOR<XOR<ReferralRewardUpdateToOneWithWhereWithoutTransactionInput, ReferralRewardUpdateWithoutTransactionInput>, ReferralRewardUncheckedUpdateWithoutTransactionInput>
  }

  export type PaymentCreateNestedManyWithoutSpendPoolInput = {
    create?: XOR<PaymentCreateWithoutSpendPoolInput, PaymentUncheckedCreateWithoutSpendPoolInput> | PaymentCreateWithoutSpendPoolInput[] | PaymentUncheckedCreateWithoutSpendPoolInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutSpendPoolInput | PaymentCreateOrConnectWithoutSpendPoolInput[]
    createMany?: PaymentCreateManySpendPoolInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type EchoAppCreateNestedOneWithoutSpendPoolsInput = {
    create?: XOR<EchoAppCreateWithoutSpendPoolsInput, EchoAppUncheckedCreateWithoutSpendPoolsInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutSpendPoolsInput
    connect?: EchoAppWhereUniqueInput
  }

  export type TransactionCreateNestedManyWithoutSpendPoolInput = {
    create?: XOR<TransactionCreateWithoutSpendPoolInput, TransactionUncheckedCreateWithoutSpendPoolInput> | TransactionCreateWithoutSpendPoolInput[] | TransactionUncheckedCreateWithoutSpendPoolInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutSpendPoolInput | TransactionCreateOrConnectWithoutSpendPoolInput[]
    createMany?: TransactionCreateManySpendPoolInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type UserSpendPoolUsageCreateNestedManyWithoutSpendPoolInput = {
    create?: XOR<UserSpendPoolUsageCreateWithoutSpendPoolInput, UserSpendPoolUsageUncheckedCreateWithoutSpendPoolInput> | UserSpendPoolUsageCreateWithoutSpendPoolInput[] | UserSpendPoolUsageUncheckedCreateWithoutSpendPoolInput[]
    connectOrCreate?: UserSpendPoolUsageCreateOrConnectWithoutSpendPoolInput | UserSpendPoolUsageCreateOrConnectWithoutSpendPoolInput[]
    createMany?: UserSpendPoolUsageCreateManySpendPoolInputEnvelope
    connect?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedManyWithoutSpendPoolInput = {
    create?: XOR<PaymentCreateWithoutSpendPoolInput, PaymentUncheckedCreateWithoutSpendPoolInput> | PaymentCreateWithoutSpendPoolInput[] | PaymentUncheckedCreateWithoutSpendPoolInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutSpendPoolInput | PaymentCreateOrConnectWithoutSpendPoolInput[]
    createMany?: PaymentCreateManySpendPoolInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type TransactionUncheckedCreateNestedManyWithoutSpendPoolInput = {
    create?: XOR<TransactionCreateWithoutSpendPoolInput, TransactionUncheckedCreateWithoutSpendPoolInput> | TransactionCreateWithoutSpendPoolInput[] | TransactionUncheckedCreateWithoutSpendPoolInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutSpendPoolInput | TransactionCreateOrConnectWithoutSpendPoolInput[]
    createMany?: TransactionCreateManySpendPoolInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type UserSpendPoolUsageUncheckedCreateNestedManyWithoutSpendPoolInput = {
    create?: XOR<UserSpendPoolUsageCreateWithoutSpendPoolInput, UserSpendPoolUsageUncheckedCreateWithoutSpendPoolInput> | UserSpendPoolUsageCreateWithoutSpendPoolInput[] | UserSpendPoolUsageUncheckedCreateWithoutSpendPoolInput[]
    connectOrCreate?: UserSpendPoolUsageCreateOrConnectWithoutSpendPoolInput | UserSpendPoolUsageCreateOrConnectWithoutSpendPoolInput[]
    createMany?: UserSpendPoolUsageCreateManySpendPoolInputEnvelope
    connect?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type PaymentUpdateManyWithoutSpendPoolNestedInput = {
    create?: XOR<PaymentCreateWithoutSpendPoolInput, PaymentUncheckedCreateWithoutSpendPoolInput> | PaymentCreateWithoutSpendPoolInput[] | PaymentUncheckedCreateWithoutSpendPoolInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutSpendPoolInput | PaymentCreateOrConnectWithoutSpendPoolInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutSpendPoolInput | PaymentUpsertWithWhereUniqueWithoutSpendPoolInput[]
    createMany?: PaymentCreateManySpendPoolInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutSpendPoolInput | PaymentUpdateWithWhereUniqueWithoutSpendPoolInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutSpendPoolInput | PaymentUpdateManyWithWhereWithoutSpendPoolInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type EchoAppUpdateOneRequiredWithoutSpendPoolsNestedInput = {
    create?: XOR<EchoAppCreateWithoutSpendPoolsInput, EchoAppUncheckedCreateWithoutSpendPoolsInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutSpendPoolsInput
    upsert?: EchoAppUpsertWithoutSpendPoolsInput
    connect?: EchoAppWhereUniqueInput
    update?: XOR<XOR<EchoAppUpdateToOneWithWhereWithoutSpendPoolsInput, EchoAppUpdateWithoutSpendPoolsInput>, EchoAppUncheckedUpdateWithoutSpendPoolsInput>
  }

  export type TransactionUpdateManyWithoutSpendPoolNestedInput = {
    create?: XOR<TransactionCreateWithoutSpendPoolInput, TransactionUncheckedCreateWithoutSpendPoolInput> | TransactionCreateWithoutSpendPoolInput[] | TransactionUncheckedCreateWithoutSpendPoolInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutSpendPoolInput | TransactionCreateOrConnectWithoutSpendPoolInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutSpendPoolInput | TransactionUpsertWithWhereUniqueWithoutSpendPoolInput[]
    createMany?: TransactionCreateManySpendPoolInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutSpendPoolInput | TransactionUpdateWithWhereUniqueWithoutSpendPoolInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutSpendPoolInput | TransactionUpdateManyWithWhereWithoutSpendPoolInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type UserSpendPoolUsageUpdateManyWithoutSpendPoolNestedInput = {
    create?: XOR<UserSpendPoolUsageCreateWithoutSpendPoolInput, UserSpendPoolUsageUncheckedCreateWithoutSpendPoolInput> | UserSpendPoolUsageCreateWithoutSpendPoolInput[] | UserSpendPoolUsageUncheckedCreateWithoutSpendPoolInput[]
    connectOrCreate?: UserSpendPoolUsageCreateOrConnectWithoutSpendPoolInput | UserSpendPoolUsageCreateOrConnectWithoutSpendPoolInput[]
    upsert?: UserSpendPoolUsageUpsertWithWhereUniqueWithoutSpendPoolInput | UserSpendPoolUsageUpsertWithWhereUniqueWithoutSpendPoolInput[]
    createMany?: UserSpendPoolUsageCreateManySpendPoolInputEnvelope
    set?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
    disconnect?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
    delete?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
    connect?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
    update?: UserSpendPoolUsageUpdateWithWhereUniqueWithoutSpendPoolInput | UserSpendPoolUsageUpdateWithWhereUniqueWithoutSpendPoolInput[]
    updateMany?: UserSpendPoolUsageUpdateManyWithWhereWithoutSpendPoolInput | UserSpendPoolUsageUpdateManyWithWhereWithoutSpendPoolInput[]
    deleteMany?: UserSpendPoolUsageScalarWhereInput | UserSpendPoolUsageScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateManyWithoutSpendPoolNestedInput = {
    create?: XOR<PaymentCreateWithoutSpendPoolInput, PaymentUncheckedCreateWithoutSpendPoolInput> | PaymentCreateWithoutSpendPoolInput[] | PaymentUncheckedCreateWithoutSpendPoolInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutSpendPoolInput | PaymentCreateOrConnectWithoutSpendPoolInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutSpendPoolInput | PaymentUpsertWithWhereUniqueWithoutSpendPoolInput[]
    createMany?: PaymentCreateManySpendPoolInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutSpendPoolInput | PaymentUpdateWithWhereUniqueWithoutSpendPoolInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutSpendPoolInput | PaymentUpdateManyWithWhereWithoutSpendPoolInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type TransactionUncheckedUpdateManyWithoutSpendPoolNestedInput = {
    create?: XOR<TransactionCreateWithoutSpendPoolInput, TransactionUncheckedCreateWithoutSpendPoolInput> | TransactionCreateWithoutSpendPoolInput[] | TransactionUncheckedCreateWithoutSpendPoolInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutSpendPoolInput | TransactionCreateOrConnectWithoutSpendPoolInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutSpendPoolInput | TransactionUpsertWithWhereUniqueWithoutSpendPoolInput[]
    createMany?: TransactionCreateManySpendPoolInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutSpendPoolInput | TransactionUpdateWithWhereUniqueWithoutSpendPoolInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutSpendPoolInput | TransactionUpdateManyWithWhereWithoutSpendPoolInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type UserSpendPoolUsageUncheckedUpdateManyWithoutSpendPoolNestedInput = {
    create?: XOR<UserSpendPoolUsageCreateWithoutSpendPoolInput, UserSpendPoolUsageUncheckedCreateWithoutSpendPoolInput> | UserSpendPoolUsageCreateWithoutSpendPoolInput[] | UserSpendPoolUsageUncheckedCreateWithoutSpendPoolInput[]
    connectOrCreate?: UserSpendPoolUsageCreateOrConnectWithoutSpendPoolInput | UserSpendPoolUsageCreateOrConnectWithoutSpendPoolInput[]
    upsert?: UserSpendPoolUsageUpsertWithWhereUniqueWithoutSpendPoolInput | UserSpendPoolUsageUpsertWithWhereUniqueWithoutSpendPoolInput[]
    createMany?: UserSpendPoolUsageCreateManySpendPoolInputEnvelope
    set?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
    disconnect?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
    delete?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
    connect?: UserSpendPoolUsageWhereUniqueInput | UserSpendPoolUsageWhereUniqueInput[]
    update?: UserSpendPoolUsageUpdateWithWhereUniqueWithoutSpendPoolInput | UserSpendPoolUsageUpdateWithWhereUniqueWithoutSpendPoolInput[]
    updateMany?: UserSpendPoolUsageUpdateManyWithWhereWithoutSpendPoolInput | UserSpendPoolUsageUpdateManyWithWhereWithoutSpendPoolInput[]
    deleteMany?: UserSpendPoolUsageScalarWhereInput | UserSpendPoolUsageScalarWhereInput[]
  }

  export type TransactionCreateNestedManyWithoutUserSpendPoolUsageInput = {
    create?: XOR<TransactionCreateWithoutUserSpendPoolUsageInput, TransactionUncheckedCreateWithoutUserSpendPoolUsageInput> | TransactionCreateWithoutUserSpendPoolUsageInput[] | TransactionUncheckedCreateWithoutUserSpendPoolUsageInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutUserSpendPoolUsageInput | TransactionCreateOrConnectWithoutUserSpendPoolUsageInput[]
    createMany?: TransactionCreateManyUserSpendPoolUsageInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type SpendPoolCreateNestedOneWithoutUserUsageInput = {
    create?: XOR<SpendPoolCreateWithoutUserUsageInput, SpendPoolUncheckedCreateWithoutUserUsageInput>
    connectOrCreate?: SpendPoolCreateOrConnectWithoutUserUsageInput
    connect?: SpendPoolWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSpendPoolUsageInput = {
    create?: XOR<UserCreateWithoutSpendPoolUsageInput, UserUncheckedCreateWithoutSpendPoolUsageInput>
    connectOrCreate?: UserCreateOrConnectWithoutSpendPoolUsageInput
    connect?: UserWhereUniqueInput
  }

  export type TransactionUncheckedCreateNestedManyWithoutUserSpendPoolUsageInput = {
    create?: XOR<TransactionCreateWithoutUserSpendPoolUsageInput, TransactionUncheckedCreateWithoutUserSpendPoolUsageInput> | TransactionCreateWithoutUserSpendPoolUsageInput[] | TransactionUncheckedCreateWithoutUserSpendPoolUsageInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutUserSpendPoolUsageInput | TransactionCreateOrConnectWithoutUserSpendPoolUsageInput[]
    createMany?: TransactionCreateManyUserSpendPoolUsageInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type TransactionUpdateManyWithoutUserSpendPoolUsageNestedInput = {
    create?: XOR<TransactionCreateWithoutUserSpendPoolUsageInput, TransactionUncheckedCreateWithoutUserSpendPoolUsageInput> | TransactionCreateWithoutUserSpendPoolUsageInput[] | TransactionUncheckedCreateWithoutUserSpendPoolUsageInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutUserSpendPoolUsageInput | TransactionCreateOrConnectWithoutUserSpendPoolUsageInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutUserSpendPoolUsageInput | TransactionUpsertWithWhereUniqueWithoutUserSpendPoolUsageInput[]
    createMany?: TransactionCreateManyUserSpendPoolUsageInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutUserSpendPoolUsageInput | TransactionUpdateWithWhereUniqueWithoutUserSpendPoolUsageInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutUserSpendPoolUsageInput | TransactionUpdateManyWithWhereWithoutUserSpendPoolUsageInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type SpendPoolUpdateOneRequiredWithoutUserUsageNestedInput = {
    create?: XOR<SpendPoolCreateWithoutUserUsageInput, SpendPoolUncheckedCreateWithoutUserUsageInput>
    connectOrCreate?: SpendPoolCreateOrConnectWithoutUserUsageInput
    upsert?: SpendPoolUpsertWithoutUserUsageInput
    connect?: SpendPoolWhereUniqueInput
    update?: XOR<XOR<SpendPoolUpdateToOneWithWhereWithoutUserUsageInput, SpendPoolUpdateWithoutUserUsageInput>, SpendPoolUncheckedUpdateWithoutUserUsageInput>
  }

  export type UserUpdateOneRequiredWithoutSpendPoolUsageNestedInput = {
    create?: XOR<UserCreateWithoutSpendPoolUsageInput, UserUncheckedCreateWithoutSpendPoolUsageInput>
    connectOrCreate?: UserCreateOrConnectWithoutSpendPoolUsageInput
    upsert?: UserUpsertWithoutSpendPoolUsageInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSpendPoolUsageInput, UserUpdateWithoutSpendPoolUsageInput>, UserUncheckedUpdateWithoutSpendPoolUsageInput>
  }

  export type TransactionUncheckedUpdateManyWithoutUserSpendPoolUsageNestedInput = {
    create?: XOR<TransactionCreateWithoutUserSpendPoolUsageInput, TransactionUncheckedCreateWithoutUserSpendPoolUsageInput> | TransactionCreateWithoutUserSpendPoolUsageInput[] | TransactionUncheckedCreateWithoutUserSpendPoolUsageInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutUserSpendPoolUsageInput | TransactionCreateOrConnectWithoutUserSpendPoolUsageInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutUserSpendPoolUsageInput | TransactionUpsertWithWhereUniqueWithoutUserSpendPoolUsageInput[]
    createMany?: TransactionCreateManyUserSpendPoolUsageInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutUserSpendPoolUsageInput | TransactionUpdateWithWhereUniqueWithoutUserSpendPoolUsageInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutUserSpendPoolUsageInput | TransactionUpdateManyWithWhereWithoutUserSpendPoolUsageInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type TransactionCreateNestedManyWithoutTransactionMetadataInput = {
    create?: XOR<TransactionCreateWithoutTransactionMetadataInput, TransactionUncheckedCreateWithoutTransactionMetadataInput> | TransactionCreateWithoutTransactionMetadataInput[] | TransactionUncheckedCreateWithoutTransactionMetadataInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutTransactionMetadataInput | TransactionCreateOrConnectWithoutTransactionMetadataInput[]
    createMany?: TransactionCreateManyTransactionMetadataInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type TransactionUncheckedCreateNestedManyWithoutTransactionMetadataInput = {
    create?: XOR<TransactionCreateWithoutTransactionMetadataInput, TransactionUncheckedCreateWithoutTransactionMetadataInput> | TransactionCreateWithoutTransactionMetadataInput[] | TransactionUncheckedCreateWithoutTransactionMetadataInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutTransactionMetadataInput | TransactionCreateOrConnectWithoutTransactionMetadataInput[]
    createMany?: TransactionCreateManyTransactionMetadataInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type TransactionUpdateManyWithoutTransactionMetadataNestedInput = {
    create?: XOR<TransactionCreateWithoutTransactionMetadataInput, TransactionUncheckedCreateWithoutTransactionMetadataInput> | TransactionCreateWithoutTransactionMetadataInput[] | TransactionUncheckedCreateWithoutTransactionMetadataInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutTransactionMetadataInput | TransactionCreateOrConnectWithoutTransactionMetadataInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutTransactionMetadataInput | TransactionUpsertWithWhereUniqueWithoutTransactionMetadataInput[]
    createMany?: TransactionCreateManyTransactionMetadataInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutTransactionMetadataInput | TransactionUpdateWithWhereUniqueWithoutTransactionMetadataInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutTransactionMetadataInput | TransactionUpdateManyWithWhereWithoutTransactionMetadataInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type TransactionUncheckedUpdateManyWithoutTransactionMetadataNestedInput = {
    create?: XOR<TransactionCreateWithoutTransactionMetadataInput, TransactionUncheckedCreateWithoutTransactionMetadataInput> | TransactionCreateWithoutTransactionMetadataInput[] | TransactionUncheckedCreateWithoutTransactionMetadataInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutTransactionMetadataInput | TransactionCreateOrConnectWithoutTransactionMetadataInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutTransactionMetadataInput | TransactionUpsertWithWhereUniqueWithoutTransactionMetadataInput[]
    createMany?: TransactionCreateManyTransactionMetadataInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutTransactionMetadataInput | TransactionUpdateWithWhereUniqueWithoutTransactionMetadataInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutTransactionMetadataInput | TransactionUpdateManyWithWhereWithoutTransactionMetadataInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type AppMembershipCreateNestedManyWithoutReferrerInput = {
    create?: XOR<AppMembershipCreateWithoutReferrerInput, AppMembershipUncheckedCreateWithoutReferrerInput> | AppMembershipCreateWithoutReferrerInput[] | AppMembershipUncheckedCreateWithoutReferrerInput[]
    connectOrCreate?: AppMembershipCreateOrConnectWithoutReferrerInput | AppMembershipCreateOrConnectWithoutReferrerInput[]
    createMany?: AppMembershipCreateManyReferrerInputEnvelope
    connect?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutReferralCodeInput = {
    create?: XOR<UserCreateWithoutReferralCodeInput, UserUncheckedCreateWithoutReferralCodeInput>
    connectOrCreate?: UserCreateOrConnectWithoutReferralCodeInput
    connect?: UserWhereUniqueInput
  }

  export type EchoAppCreateNestedOneWithoutReferralCodeInput = {
    create?: XOR<EchoAppCreateWithoutReferralCodeInput, EchoAppUncheckedCreateWithoutReferralCodeInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutReferralCodeInput
    connect?: EchoAppWhereUniqueInput
  }

  export type TransactionCreateNestedManyWithoutReferralCodeInput = {
    create?: XOR<TransactionCreateWithoutReferralCodeInput, TransactionUncheckedCreateWithoutReferralCodeInput> | TransactionCreateWithoutReferralCodeInput[] | TransactionUncheckedCreateWithoutReferralCodeInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutReferralCodeInput | TransactionCreateOrConnectWithoutReferralCodeInput[]
    createMany?: TransactionCreateManyReferralCodeInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type AppMembershipUncheckedCreateNestedManyWithoutReferrerInput = {
    create?: XOR<AppMembershipCreateWithoutReferrerInput, AppMembershipUncheckedCreateWithoutReferrerInput> | AppMembershipCreateWithoutReferrerInput[] | AppMembershipUncheckedCreateWithoutReferrerInput[]
    connectOrCreate?: AppMembershipCreateOrConnectWithoutReferrerInput | AppMembershipCreateOrConnectWithoutReferrerInput[]
    createMany?: AppMembershipCreateManyReferrerInputEnvelope
    connect?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
  }

  export type TransactionUncheckedCreateNestedManyWithoutReferralCodeInput = {
    create?: XOR<TransactionCreateWithoutReferralCodeInput, TransactionUncheckedCreateWithoutReferralCodeInput> | TransactionCreateWithoutReferralCodeInput[] | TransactionUncheckedCreateWithoutReferralCodeInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutReferralCodeInput | TransactionCreateOrConnectWithoutReferralCodeInput[]
    createMany?: TransactionCreateManyReferralCodeInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type AppMembershipUpdateManyWithoutReferrerNestedInput = {
    create?: XOR<AppMembershipCreateWithoutReferrerInput, AppMembershipUncheckedCreateWithoutReferrerInput> | AppMembershipCreateWithoutReferrerInput[] | AppMembershipUncheckedCreateWithoutReferrerInput[]
    connectOrCreate?: AppMembershipCreateOrConnectWithoutReferrerInput | AppMembershipCreateOrConnectWithoutReferrerInput[]
    upsert?: AppMembershipUpsertWithWhereUniqueWithoutReferrerInput | AppMembershipUpsertWithWhereUniqueWithoutReferrerInput[]
    createMany?: AppMembershipCreateManyReferrerInputEnvelope
    set?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    disconnect?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    delete?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    connect?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    update?: AppMembershipUpdateWithWhereUniqueWithoutReferrerInput | AppMembershipUpdateWithWhereUniqueWithoutReferrerInput[]
    updateMany?: AppMembershipUpdateManyWithWhereWithoutReferrerInput | AppMembershipUpdateManyWithWhereWithoutReferrerInput[]
    deleteMany?: AppMembershipScalarWhereInput | AppMembershipScalarWhereInput[]
  }

  export type UserUpdateOneWithoutReferralCodeNestedInput = {
    create?: XOR<UserCreateWithoutReferralCodeInput, UserUncheckedCreateWithoutReferralCodeInput>
    connectOrCreate?: UserCreateOrConnectWithoutReferralCodeInput
    upsert?: UserUpsertWithoutReferralCodeInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReferralCodeInput, UserUpdateWithoutReferralCodeInput>, UserUncheckedUpdateWithoutReferralCodeInput>
  }

  export type EchoAppUpdateOneWithoutReferralCodeNestedInput = {
    create?: XOR<EchoAppCreateWithoutReferralCodeInput, EchoAppUncheckedCreateWithoutReferralCodeInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutReferralCodeInput
    upsert?: EchoAppUpsertWithoutReferralCodeInput
    disconnect?: EchoAppWhereInput | boolean
    delete?: EchoAppWhereInput | boolean
    connect?: EchoAppWhereUniqueInput
    update?: XOR<XOR<EchoAppUpdateToOneWithWhereWithoutReferralCodeInput, EchoAppUpdateWithoutReferralCodeInput>, EchoAppUncheckedUpdateWithoutReferralCodeInput>
  }

  export type TransactionUpdateManyWithoutReferralCodeNestedInput = {
    create?: XOR<TransactionCreateWithoutReferralCodeInput, TransactionUncheckedCreateWithoutReferralCodeInput> | TransactionCreateWithoutReferralCodeInput[] | TransactionUncheckedCreateWithoutReferralCodeInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutReferralCodeInput | TransactionCreateOrConnectWithoutReferralCodeInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutReferralCodeInput | TransactionUpsertWithWhereUniqueWithoutReferralCodeInput[]
    createMany?: TransactionCreateManyReferralCodeInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutReferralCodeInput | TransactionUpdateWithWhereUniqueWithoutReferralCodeInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutReferralCodeInput | TransactionUpdateManyWithWhereWithoutReferralCodeInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type AppMembershipUncheckedUpdateManyWithoutReferrerNestedInput = {
    create?: XOR<AppMembershipCreateWithoutReferrerInput, AppMembershipUncheckedCreateWithoutReferrerInput> | AppMembershipCreateWithoutReferrerInput[] | AppMembershipUncheckedCreateWithoutReferrerInput[]
    connectOrCreate?: AppMembershipCreateOrConnectWithoutReferrerInput | AppMembershipCreateOrConnectWithoutReferrerInput[]
    upsert?: AppMembershipUpsertWithWhereUniqueWithoutReferrerInput | AppMembershipUpsertWithWhereUniqueWithoutReferrerInput[]
    createMany?: AppMembershipCreateManyReferrerInputEnvelope
    set?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    disconnect?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    delete?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    connect?: AppMembershipWhereUniqueInput | AppMembershipWhereUniqueInput[]
    update?: AppMembershipUpdateWithWhereUniqueWithoutReferrerInput | AppMembershipUpdateWithWhereUniqueWithoutReferrerInput[]
    updateMany?: AppMembershipUpdateManyWithWhereWithoutReferrerInput | AppMembershipUpdateManyWithWhereWithoutReferrerInput[]
    deleteMany?: AppMembershipScalarWhereInput | AppMembershipScalarWhereInput[]
  }

  export type TransactionUncheckedUpdateManyWithoutReferralCodeNestedInput = {
    create?: XOR<TransactionCreateWithoutReferralCodeInput, TransactionUncheckedCreateWithoutReferralCodeInput> | TransactionCreateWithoutReferralCodeInput[] | TransactionUncheckedCreateWithoutReferralCodeInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutReferralCodeInput | TransactionCreateOrConnectWithoutReferralCodeInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutReferralCodeInput | TransactionUpsertWithWhereUniqueWithoutReferralCodeInput[]
    createMany?: TransactionCreateManyReferralCodeInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutReferralCodeInput | TransactionUpdateWithWhereUniqueWithoutReferralCodeInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutReferralCodeInput | TransactionUpdateManyWithWhereWithoutReferralCodeInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type EchoAppCreateNestedOneWithoutReferralRewardsInput = {
    create?: XOR<EchoAppCreateWithoutReferralRewardsInput, EchoAppUncheckedCreateWithoutReferralRewardsInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutReferralRewardsInput
    connect?: EchoAppWhereUniqueInput
  }

  export type EchoAppCreateNestedManyWithoutCurrentReferralRewardInput = {
    create?: XOR<EchoAppCreateWithoutCurrentReferralRewardInput, EchoAppUncheckedCreateWithoutCurrentReferralRewardInput> | EchoAppCreateWithoutCurrentReferralRewardInput[] | EchoAppUncheckedCreateWithoutCurrentReferralRewardInput[]
    connectOrCreate?: EchoAppCreateOrConnectWithoutCurrentReferralRewardInput | EchoAppCreateOrConnectWithoutCurrentReferralRewardInput[]
    createMany?: EchoAppCreateManyCurrentReferralRewardInputEnvelope
    connect?: EchoAppWhereUniqueInput | EchoAppWhereUniqueInput[]
  }

  export type TransactionCreateNestedManyWithoutReferrerRewardInput = {
    create?: XOR<TransactionCreateWithoutReferrerRewardInput, TransactionUncheckedCreateWithoutReferrerRewardInput> | TransactionCreateWithoutReferrerRewardInput[] | TransactionUncheckedCreateWithoutReferrerRewardInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutReferrerRewardInput | TransactionCreateOrConnectWithoutReferrerRewardInput[]
    createMany?: TransactionCreateManyReferrerRewardInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type EchoAppUncheckedCreateNestedManyWithoutCurrentReferralRewardInput = {
    create?: XOR<EchoAppCreateWithoutCurrentReferralRewardInput, EchoAppUncheckedCreateWithoutCurrentReferralRewardInput> | EchoAppCreateWithoutCurrentReferralRewardInput[] | EchoAppUncheckedCreateWithoutCurrentReferralRewardInput[]
    connectOrCreate?: EchoAppCreateOrConnectWithoutCurrentReferralRewardInput | EchoAppCreateOrConnectWithoutCurrentReferralRewardInput[]
    createMany?: EchoAppCreateManyCurrentReferralRewardInputEnvelope
    connect?: EchoAppWhereUniqueInput | EchoAppWhereUniqueInput[]
  }

  export type TransactionUncheckedCreateNestedManyWithoutReferrerRewardInput = {
    create?: XOR<TransactionCreateWithoutReferrerRewardInput, TransactionUncheckedCreateWithoutReferrerRewardInput> | TransactionCreateWithoutReferrerRewardInput[] | TransactionUncheckedCreateWithoutReferrerRewardInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutReferrerRewardInput | TransactionCreateOrConnectWithoutReferrerRewardInput[]
    createMany?: TransactionCreateManyReferrerRewardInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type EchoAppUpdateOneRequiredWithoutReferralRewardsNestedInput = {
    create?: XOR<EchoAppCreateWithoutReferralRewardsInput, EchoAppUncheckedCreateWithoutReferralRewardsInput>
    connectOrCreate?: EchoAppCreateOrConnectWithoutReferralRewardsInput
    upsert?: EchoAppUpsertWithoutReferralRewardsInput
    connect?: EchoAppWhereUniqueInput
    update?: XOR<XOR<EchoAppUpdateToOneWithWhereWithoutReferralRewardsInput, EchoAppUpdateWithoutReferralRewardsInput>, EchoAppUncheckedUpdateWithoutReferralRewardsInput>
  }

  export type EchoAppUpdateManyWithoutCurrentReferralRewardNestedInput = {
    create?: XOR<EchoAppCreateWithoutCurrentReferralRewardInput, EchoAppUncheckedCreateWithoutCurrentReferralRewardInput> | EchoAppCreateWithoutCurrentReferralRewardInput[] | EchoAppUncheckedCreateWithoutCurrentReferralRewardInput[]
    connectOrCreate?: EchoAppCreateOrConnectWithoutCurrentReferralRewardInput | EchoAppCreateOrConnectWithoutCurrentReferralRewardInput[]
    upsert?: EchoAppUpsertWithWhereUniqueWithoutCurrentReferralRewardInput | EchoAppUpsertWithWhereUniqueWithoutCurrentReferralRewardInput[]
    createMany?: EchoAppCreateManyCurrentReferralRewardInputEnvelope
    set?: EchoAppWhereUniqueInput | EchoAppWhereUniqueInput[]
    disconnect?: EchoAppWhereUniqueInput | EchoAppWhereUniqueInput[]
    delete?: EchoAppWhereUniqueInput | EchoAppWhereUniqueInput[]
    connect?: EchoAppWhereUniqueInput | EchoAppWhereUniqueInput[]
    update?: EchoAppUpdateWithWhereUniqueWithoutCurrentReferralRewardInput | EchoAppUpdateWithWhereUniqueWithoutCurrentReferralRewardInput[]
    updateMany?: EchoAppUpdateManyWithWhereWithoutCurrentReferralRewardInput | EchoAppUpdateManyWithWhereWithoutCurrentReferralRewardInput[]
    deleteMany?: EchoAppScalarWhereInput | EchoAppScalarWhereInput[]
  }

  export type TransactionUpdateManyWithoutReferrerRewardNestedInput = {
    create?: XOR<TransactionCreateWithoutReferrerRewardInput, TransactionUncheckedCreateWithoutReferrerRewardInput> | TransactionCreateWithoutReferrerRewardInput[] | TransactionUncheckedCreateWithoutReferrerRewardInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutReferrerRewardInput | TransactionCreateOrConnectWithoutReferrerRewardInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutReferrerRewardInput | TransactionUpsertWithWhereUniqueWithoutReferrerRewardInput[]
    createMany?: TransactionCreateManyReferrerRewardInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutReferrerRewardInput | TransactionUpdateWithWhereUniqueWithoutReferrerRewardInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutReferrerRewardInput | TransactionUpdateManyWithWhereWithoutReferrerRewardInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type EchoAppUncheckedUpdateManyWithoutCurrentReferralRewardNestedInput = {
    create?: XOR<EchoAppCreateWithoutCurrentReferralRewardInput, EchoAppUncheckedCreateWithoutCurrentReferralRewardInput> | EchoAppCreateWithoutCurrentReferralRewardInput[] | EchoAppUncheckedCreateWithoutCurrentReferralRewardInput[]
    connectOrCreate?: EchoAppCreateOrConnectWithoutCurrentReferralRewardInput | EchoAppCreateOrConnectWithoutCurrentReferralRewardInput[]
    upsert?: EchoAppUpsertWithWhereUniqueWithoutCurrentReferralRewardInput | EchoAppUpsertWithWhereUniqueWithoutCurrentReferralRewardInput[]
    createMany?: EchoAppCreateManyCurrentReferralRewardInputEnvelope
    set?: EchoAppWhereUniqueInput | EchoAppWhereUniqueInput[]
    disconnect?: EchoAppWhereUniqueInput | EchoAppWhereUniqueInput[]
    delete?: EchoAppWhereUniqueInput | EchoAppWhereUniqueInput[]
    connect?: EchoAppWhereUniqueInput | EchoAppWhereUniqueInput[]
    update?: EchoAppUpdateWithWhereUniqueWithoutCurrentReferralRewardInput | EchoAppUpdateWithWhereUniqueWithoutCurrentReferralRewardInput[]
    updateMany?: EchoAppUpdateManyWithWhereWithoutCurrentReferralRewardInput | EchoAppUpdateManyWithWhereWithoutCurrentReferralRewardInput[]
    deleteMany?: EchoAppScalarWhereInput | EchoAppScalarWhereInput[]
  }

  export type TransactionUncheckedUpdateManyWithoutReferrerRewardNestedInput = {
    create?: XOR<TransactionCreateWithoutReferrerRewardInput, TransactionUncheckedCreateWithoutReferrerRewardInput> | TransactionCreateWithoutReferrerRewardInput[] | TransactionUncheckedCreateWithoutReferrerRewardInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutReferrerRewardInput | TransactionCreateOrConnectWithoutReferrerRewardInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutReferrerRewardInput | TransactionUpsertWithWhereUniqueWithoutReferrerRewardInput[]
    createMany?: TransactionCreateManyReferrerRewardInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutReferrerRewardInput | TransactionUpdateWithWhereUniqueWithoutReferrerRewardInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutReferrerRewardInput | TransactionUpdateManyWithWhereWithoutReferrerRewardInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedUuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumGithubTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.GithubType | EnumGithubTypeFieldRefInput<$PrismaModel>
    in?: $Enums.GithubType[] | ListEnumGithubTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.GithubType[] | ListEnumGithubTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumGithubTypeFilter<$PrismaModel> | $Enums.GithubType
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumGithubTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.GithubType | EnumGithubTypeFieldRefInput<$PrismaModel>
    in?: $Enums.GithubType[] | ListEnumGithubTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.GithubType[] | ListEnumGithubTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumGithubTypeWithAggregatesFilter<$PrismaModel> | $Enums.GithubType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGithubTypeFilter<$PrismaModel>
    _max?: NestedEnumGithubTypeFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type AccountCreateWithoutUserInput = {
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AccountUncheckedCreateWithoutUserInput = {
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AccountCreateOrConnectWithoutUserInput = {
    where: AccountWhereUniqueInput
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountCreateManyUserInputEnvelope = {
    data: AccountCreateManyUserInput | AccountCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SessionCreateWithoutUserInput = {
    sessionToken: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionUncheckedCreateWithoutUserInput = {
    sessionToken: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionCreateOrConnectWithoutUserInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionCreateManyUserInputEnvelope = {
    data: SessionCreateManyUserInput | SessionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ApiKeyCreateWithoutUserInput = {
    id?: string
    keyHash: string
    name?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    lastUsed?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    scope?: string
    echoApp: EchoAppCreateNestedOneWithoutApiKeysInput
    Transactions?: TransactionCreateNestedManyWithoutApiKeyInput
  }

  export type ApiKeyUncheckedCreateWithoutUserInput = {
    id?: string
    keyHash: string
    name?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    lastUsed?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    echoAppId: string
    scope?: string
    Transactions?: TransactionUncheckedCreateNestedManyWithoutApiKeyInput
  }

  export type ApiKeyCreateOrConnectWithoutUserInput = {
    where: ApiKeyWhereUniqueInput
    create: XOR<ApiKeyCreateWithoutUserInput, ApiKeyUncheckedCreateWithoutUserInput>
  }

  export type ApiKeyCreateManyUserInputEnvelope = {
    data: ApiKeyCreateManyUserInput | ApiKeyCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AppMembershipCreateWithoutUserInput = {
    id?: string
    role: string
    status?: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalSpent: Decimal | DecimalJsLike | number | string
    amountSpent?: Decimal | DecimalJsLike | number | string
    referrer?: ReferralCodeCreateNestedOneWithoutAppMembershipsInput
    echoApp: EchoAppCreateNestedOneWithoutAppMembershipsInput
  }

  export type AppMembershipUncheckedCreateWithoutUserInput = {
    id?: string
    echoAppId: string
    role: string
    status?: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalSpent: Decimal | DecimalJsLike | number | string
    amountSpent?: Decimal | DecimalJsLike | number | string
    referrerId?: string | null
  }

  export type AppMembershipCreateOrConnectWithoutUserInput = {
    where: AppMembershipWhereUniqueInput
    create: XOR<AppMembershipCreateWithoutUserInput, AppMembershipUncheckedCreateWithoutUserInput>
  }

  export type AppMembershipCreateManyUserInputEnvelope = {
    data: AppMembershipCreateManyUserInput | AppMembershipCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PaymentCreateWithoutUserInput = {
    id?: string
    paymentId: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    status: string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    spendPool?: SpendPoolCreateNestedOneWithoutPaymentsInput
  }

  export type PaymentUncheckedCreateWithoutUserInput = {
    id?: string
    paymentId: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    status: string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    spendPoolId?: string | null
  }

  export type PaymentCreateOrConnectWithoutUserInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput>
  }

  export type PaymentCreateManyUserInputEnvelope = {
    data: PaymentCreateManyUserInput | PaymentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type RefreshTokenCreateWithoutUserInput = {
    id?: string
    token: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    scope?: string
    echoApp: EchoAppCreateNestedOneWithoutRefreshTokensInput
    session?: AppSessionCreateNestedOneWithoutRefreshTokensInput
  }

  export type RefreshTokenUncheckedCreateWithoutUserInput = {
    id?: string
    token: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    echoAppId: string
    scope?: string
    sessionId?: string | null
  }

  export type RefreshTokenCreateOrConnectWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    create: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput>
  }

  export type RefreshTokenCreateManyUserInputEnvelope = {
    data: RefreshTokenCreateManyUserInput | RefreshTokenCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type TransactionCreateWithoutUserInput = {
    id?: string
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    apiKey?: ApiKeyCreateNestedOneWithoutTransactionsInput
    echoApp: EchoAppCreateNestedOneWithoutTransactionsInput
    githubLink?: GithubLinkCreateNestedOneWithoutTransactionsInput
    markUp?: MarkUpCreateNestedOneWithoutTransactionsInput
    spendPool?: SpendPoolCreateNestedOneWithoutTransactionsInput
    transactionMetadata?: TransactionMetadataCreateNestedOneWithoutTransactionsInput
    userSpendPoolUsage?: UserSpendPoolUsageCreateNestedOneWithoutTransactionsInput
    referralCode?: ReferralCodeCreateNestedOneWithoutTransactionInput
    referrerReward?: ReferralRewardCreateNestedOneWithoutTransactionInput
  }

  export type TransactionUncheckedCreateWithoutUserInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    echoAppId: string
    apiKeyId?: string | null
    markUpId?: string | null
    githubLinkId?: string | null
    spendPoolId?: string | null
    userSpendPoolUsageId?: string | null
    referralCodeId?: string | null
    referrerRewardId?: string | null
  }

  export type TransactionCreateOrConnectWithoutUserInput = {
    where: TransactionWhereUniqueInput
    create: XOR<TransactionCreateWithoutUserInput, TransactionUncheckedCreateWithoutUserInput>
  }

  export type TransactionCreateManyUserInputEnvelope = {
    data: TransactionCreateManyUserInput | TransactionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserSpendPoolUsageCreateWithoutUserInput = {
    id?: string
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Transactions?: TransactionCreateNestedManyWithoutUserSpendPoolUsageInput
    spendPool: SpendPoolCreateNestedOneWithoutUserUsageInput
  }

  export type UserSpendPoolUsageUncheckedCreateWithoutUserInput = {
    id?: string
    spendPoolId: string
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Transactions?: TransactionUncheckedCreateNestedManyWithoutUserSpendPoolUsageInput
  }

  export type UserSpendPoolUsageCreateOrConnectWithoutUserInput = {
    where: UserSpendPoolUsageWhereUniqueInput
    create: XOR<UserSpendPoolUsageCreateWithoutUserInput, UserSpendPoolUsageUncheckedCreateWithoutUserInput>
  }

  export type UserSpendPoolUsageCreateManyUserInputEnvelope = {
    data: UserSpendPoolUsageCreateManyUserInput | UserSpendPoolUsageCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ReferralCodeCreateWithoutUserInput = {
    id?: string
    code: string
    grantType: string
    grantAmount?: Decimal | DecimalJsLike | number | string | null
    reusable?: boolean
    expiresAt: Date | string
    isUsed?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    usedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appMemberships?: AppMembershipCreateNestedManyWithoutReferrerInput
    echoApp?: EchoAppCreateNestedOneWithoutReferralCodeInput
    Transaction?: TransactionCreateNestedManyWithoutReferralCodeInput
  }

  export type ReferralCodeUncheckedCreateWithoutUserInput = {
    id?: string
    code: string
    echoAppId?: string | null
    grantType: string
    grantAmount?: Decimal | DecimalJsLike | number | string | null
    reusable?: boolean
    expiresAt: Date | string
    isUsed?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    usedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutReferrerInput
    Transaction?: TransactionUncheckedCreateNestedManyWithoutReferralCodeInput
  }

  export type ReferralCodeCreateOrConnectWithoutUserInput = {
    where: ReferralCodeWhereUniqueInput
    create: XOR<ReferralCodeCreateWithoutUserInput, ReferralCodeUncheckedCreateWithoutUserInput>
  }

  export type ReferralCodeCreateManyUserInputEnvelope = {
    data: ReferralCodeCreateManyUserInput | ReferralCodeCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AppSessionCreateWithoutUserInput = {
    id?: string
    deviceName?: string | null
    userAgent?: string | null
    ipAddress?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastSeenAt?: Date | string | null
    revokedAt?: Date | string | null
    isArchived?: boolean
    echoApp: EchoAppCreateNestedOneWithoutAppSessionsInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutSessionInput
  }

  export type AppSessionUncheckedCreateWithoutUserInput = {
    id?: string
    echoAppId: string
    deviceName?: string | null
    userAgent?: string | null
    ipAddress?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastSeenAt?: Date | string | null
    revokedAt?: Date | string | null
    isArchived?: boolean
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutSessionInput
  }

  export type AppSessionCreateOrConnectWithoutUserInput = {
    where: AppSessionWhereUniqueInput
    create: XOR<AppSessionCreateWithoutUserInput, AppSessionUncheckedCreateWithoutUserInput>
  }

  export type AppSessionCreateManyUserInputEnvelope = {
    data: AppSessionCreateManyUserInput | AppSessionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AccountUpsertWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    update: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountUpdateWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    data: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
  }

  export type AccountUpdateManyWithWhereWithoutUserInput = {
    where: AccountScalarWhereInput
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyWithoutUserInput>
  }

  export type AccountScalarWhereInput = {
    AND?: AccountScalarWhereInput | AccountScalarWhereInput[]
    OR?: AccountScalarWhereInput[]
    NOT?: AccountScalarWhereInput | AccountScalarWhereInput[]
    userId?: UuidFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    createdAt?: DateTimeFilter<"Account"> | Date | string
    updatedAt?: DateTimeFilter<"Account"> | Date | string
  }

  export type SessionUpsertWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    update: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionUpdateWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    data: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
  }

  export type SessionUpdateManyWithWhereWithoutUserInput = {
    where: SessionScalarWhereInput
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyWithoutUserInput>
  }

  export type SessionScalarWhereInput = {
    AND?: SessionScalarWhereInput | SessionScalarWhereInput[]
    OR?: SessionScalarWhereInput[]
    NOT?: SessionScalarWhereInput | SessionScalarWhereInput[]
    sessionToken?: StringFilter<"Session"> | string
    userId?: UuidFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
  }

  export type ApiKeyUpsertWithWhereUniqueWithoutUserInput = {
    where: ApiKeyWhereUniqueInput
    update: XOR<ApiKeyUpdateWithoutUserInput, ApiKeyUncheckedUpdateWithoutUserInput>
    create: XOR<ApiKeyCreateWithoutUserInput, ApiKeyUncheckedCreateWithoutUserInput>
  }

  export type ApiKeyUpdateWithWhereUniqueWithoutUserInput = {
    where: ApiKeyWhereUniqueInput
    data: XOR<ApiKeyUpdateWithoutUserInput, ApiKeyUncheckedUpdateWithoutUserInput>
  }

  export type ApiKeyUpdateManyWithWhereWithoutUserInput = {
    where: ApiKeyScalarWhereInput
    data: XOR<ApiKeyUpdateManyMutationInput, ApiKeyUncheckedUpdateManyWithoutUserInput>
  }

  export type ApiKeyScalarWhereInput = {
    AND?: ApiKeyScalarWhereInput | ApiKeyScalarWhereInput[]
    OR?: ApiKeyScalarWhereInput[]
    NOT?: ApiKeyScalarWhereInput | ApiKeyScalarWhereInput[]
    id?: UuidFilter<"ApiKey"> | string
    keyHash?: StringFilter<"ApiKey"> | string
    name?: StringNullableFilter<"ApiKey"> | string | null
    isArchived?: BoolFilter<"ApiKey"> | boolean
    archivedAt?: DateTimeNullableFilter<"ApiKey"> | Date | string | null
    lastUsed?: DateTimeNullableFilter<"ApiKey"> | Date | string | null
    metadata?: JsonNullableFilter<"ApiKey">
    createdAt?: DateTimeFilter<"ApiKey"> | Date | string
    updatedAt?: DateTimeFilter<"ApiKey"> | Date | string
    userId?: UuidFilter<"ApiKey"> | string
    echoAppId?: UuidFilter<"ApiKey"> | string
    scope?: StringFilter<"ApiKey"> | string
  }

  export type AppMembershipUpsertWithWhereUniqueWithoutUserInput = {
    where: AppMembershipWhereUniqueInput
    update: XOR<AppMembershipUpdateWithoutUserInput, AppMembershipUncheckedUpdateWithoutUserInput>
    create: XOR<AppMembershipCreateWithoutUserInput, AppMembershipUncheckedCreateWithoutUserInput>
  }

  export type AppMembershipUpdateWithWhereUniqueWithoutUserInput = {
    where: AppMembershipWhereUniqueInput
    data: XOR<AppMembershipUpdateWithoutUserInput, AppMembershipUncheckedUpdateWithoutUserInput>
  }

  export type AppMembershipUpdateManyWithWhereWithoutUserInput = {
    where: AppMembershipScalarWhereInput
    data: XOR<AppMembershipUpdateManyMutationInput, AppMembershipUncheckedUpdateManyWithoutUserInput>
  }

  export type AppMembershipScalarWhereInput = {
    AND?: AppMembershipScalarWhereInput | AppMembershipScalarWhereInput[]
    OR?: AppMembershipScalarWhereInput[]
    NOT?: AppMembershipScalarWhereInput | AppMembershipScalarWhereInput[]
    id?: UuidFilter<"AppMembership"> | string
    userId?: UuidFilter<"AppMembership"> | string
    echoAppId?: UuidFilter<"AppMembership"> | string
    role?: StringFilter<"AppMembership"> | string
    status?: StringFilter<"AppMembership"> | string
    isArchived?: BoolFilter<"AppMembership"> | boolean
    archivedAt?: DateTimeNullableFilter<"AppMembership"> | Date | string | null
    createdAt?: DateTimeFilter<"AppMembership"> | Date | string
    updatedAt?: DateTimeFilter<"AppMembership"> | Date | string
    totalSpent?: DecimalFilter<"AppMembership"> | Decimal | DecimalJsLike | number | string
    amountSpent?: DecimalFilter<"AppMembership"> | Decimal | DecimalJsLike | number | string
    referrerId?: UuidNullableFilter<"AppMembership"> | string | null
  }

  export type PaymentUpsertWithWhereUniqueWithoutUserInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutUserInput, PaymentUncheckedUpdateWithoutUserInput>
    create: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutUserInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutUserInput, PaymentUncheckedUpdateWithoutUserInput>
  }

  export type PaymentUpdateManyWithWhereWithoutUserInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutUserInput>
  }

  export type PaymentScalarWhereInput = {
    AND?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    OR?: PaymentScalarWhereInput[]
    NOT?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    id?: UuidFilter<"Payment"> | string
    paymentId?: StringFilter<"Payment"> | string
    amount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Payment"> | string
    status?: StringFilter<"Payment"> | string
    description?: StringNullableFilter<"Payment"> | string | null
    isArchived?: BoolFilter<"Payment"> | boolean
    archivedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    userId?: UuidFilter<"Payment"> | string
    spendPoolId?: UuidNullableFilter<"Payment"> | string | null
  }

  export type RefreshTokenUpsertWithWhereUniqueWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    update: XOR<RefreshTokenUpdateWithoutUserInput, RefreshTokenUncheckedUpdateWithoutUserInput>
    create: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput>
  }

  export type RefreshTokenUpdateWithWhereUniqueWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    data: XOR<RefreshTokenUpdateWithoutUserInput, RefreshTokenUncheckedUpdateWithoutUserInput>
  }

  export type RefreshTokenUpdateManyWithWhereWithoutUserInput = {
    where: RefreshTokenScalarWhereInput
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyWithoutUserInput>
  }

  export type RefreshTokenScalarWhereInput = {
    AND?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    OR?: RefreshTokenScalarWhereInput[]
    NOT?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    id?: UuidFilter<"RefreshToken"> | string
    token?: StringFilter<"RefreshToken"> | string
    isArchived?: BoolFilter<"RefreshToken"> | boolean
    archivedAt?: DateTimeNullableFilter<"RefreshToken"> | Date | string | null
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    updatedAt?: DateTimeFilter<"RefreshToken"> | Date | string
    userId?: UuidFilter<"RefreshToken"> | string
    echoAppId?: UuidFilter<"RefreshToken"> | string
    scope?: StringFilter<"RefreshToken"> | string
    sessionId?: UuidNullableFilter<"RefreshToken"> | string | null
  }

  export type TransactionUpsertWithWhereUniqueWithoutUserInput = {
    where: TransactionWhereUniqueInput
    update: XOR<TransactionUpdateWithoutUserInput, TransactionUncheckedUpdateWithoutUserInput>
    create: XOR<TransactionCreateWithoutUserInput, TransactionUncheckedCreateWithoutUserInput>
  }

  export type TransactionUpdateWithWhereUniqueWithoutUserInput = {
    where: TransactionWhereUniqueInput
    data: XOR<TransactionUpdateWithoutUserInput, TransactionUncheckedUpdateWithoutUserInput>
  }

  export type TransactionUpdateManyWithWhereWithoutUserInput = {
    where: TransactionScalarWhereInput
    data: XOR<TransactionUpdateManyMutationInput, TransactionUncheckedUpdateManyWithoutUserInput>
  }

  export type TransactionScalarWhereInput = {
    AND?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
    OR?: TransactionScalarWhereInput[]
    NOT?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
    id?: UuidFilter<"Transaction"> | string
    transactionMetadataId?: UuidNullableFilter<"Transaction"> | string | null
    totalCost?: DecimalFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFilter<"Transaction"> | Decimal | DecimalJsLike | number | string
    status?: StringNullableFilter<"Transaction"> | string | null
    isArchived?: BoolFilter<"Transaction"> | boolean
    archivedAt?: DateTimeNullableFilter<"Transaction"> | Date | string | null
    createdAt?: DateTimeFilter<"Transaction"> | Date | string
    userId?: UuidFilter<"Transaction"> | string
    echoAppId?: UuidFilter<"Transaction"> | string
    apiKeyId?: UuidNullableFilter<"Transaction"> | string | null
    markUpId?: UuidNullableFilter<"Transaction"> | string | null
    githubLinkId?: UuidNullableFilter<"Transaction"> | string | null
    spendPoolId?: UuidNullableFilter<"Transaction"> | string | null
    userSpendPoolUsageId?: UuidNullableFilter<"Transaction"> | string | null
    referralCodeId?: UuidNullableFilter<"Transaction"> | string | null
    referrerRewardId?: UuidNullableFilter<"Transaction"> | string | null
  }

  export type UserSpendPoolUsageUpsertWithWhereUniqueWithoutUserInput = {
    where: UserSpendPoolUsageWhereUniqueInput
    update: XOR<UserSpendPoolUsageUpdateWithoutUserInput, UserSpendPoolUsageUncheckedUpdateWithoutUserInput>
    create: XOR<UserSpendPoolUsageCreateWithoutUserInput, UserSpendPoolUsageUncheckedCreateWithoutUserInput>
  }

  export type UserSpendPoolUsageUpdateWithWhereUniqueWithoutUserInput = {
    where: UserSpendPoolUsageWhereUniqueInput
    data: XOR<UserSpendPoolUsageUpdateWithoutUserInput, UserSpendPoolUsageUncheckedUpdateWithoutUserInput>
  }

  export type UserSpendPoolUsageUpdateManyWithWhereWithoutUserInput = {
    where: UserSpendPoolUsageScalarWhereInput
    data: XOR<UserSpendPoolUsageUpdateManyMutationInput, UserSpendPoolUsageUncheckedUpdateManyWithoutUserInput>
  }

  export type UserSpendPoolUsageScalarWhereInput = {
    AND?: UserSpendPoolUsageScalarWhereInput | UserSpendPoolUsageScalarWhereInput[]
    OR?: UserSpendPoolUsageScalarWhereInput[]
    NOT?: UserSpendPoolUsageScalarWhereInput | UserSpendPoolUsageScalarWhereInput[]
    id?: UuidFilter<"UserSpendPoolUsage"> | string
    userId?: UuidFilter<"UserSpendPoolUsage"> | string
    spendPoolId?: UuidFilter<"UserSpendPoolUsage"> | string
    totalSpent?: DecimalFilter<"UserSpendPoolUsage"> | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFilter<"UserSpendPoolUsage"> | boolean
    archivedAt?: DateTimeNullableFilter<"UserSpendPoolUsage"> | Date | string | null
    createdAt?: DateTimeFilter<"UserSpendPoolUsage"> | Date | string
    updatedAt?: DateTimeFilter<"UserSpendPoolUsage"> | Date | string
  }

  export type ReferralCodeUpsertWithWhereUniqueWithoutUserInput = {
    where: ReferralCodeWhereUniqueInput
    update: XOR<ReferralCodeUpdateWithoutUserInput, ReferralCodeUncheckedUpdateWithoutUserInput>
    create: XOR<ReferralCodeCreateWithoutUserInput, ReferralCodeUncheckedCreateWithoutUserInput>
  }

  export type ReferralCodeUpdateWithWhereUniqueWithoutUserInput = {
    where: ReferralCodeWhereUniqueInput
    data: XOR<ReferralCodeUpdateWithoutUserInput, ReferralCodeUncheckedUpdateWithoutUserInput>
  }

  export type ReferralCodeUpdateManyWithWhereWithoutUserInput = {
    where: ReferralCodeScalarWhereInput
    data: XOR<ReferralCodeUpdateManyMutationInput, ReferralCodeUncheckedUpdateManyWithoutUserInput>
  }

  export type ReferralCodeScalarWhereInput = {
    AND?: ReferralCodeScalarWhereInput | ReferralCodeScalarWhereInput[]
    OR?: ReferralCodeScalarWhereInput[]
    NOT?: ReferralCodeScalarWhereInput | ReferralCodeScalarWhereInput[]
    id?: UuidFilter<"ReferralCode"> | string
    code?: StringFilter<"ReferralCode"> | string
    userId?: UuidNullableFilter<"ReferralCode"> | string | null
    echoAppId?: UuidNullableFilter<"ReferralCode"> | string | null
    grantType?: StringFilter<"ReferralCode"> | string
    grantAmount?: DecimalNullableFilter<"ReferralCode"> | Decimal | DecimalJsLike | number | string | null
    reusable?: BoolFilter<"ReferralCode"> | boolean
    expiresAt?: DateTimeFilter<"ReferralCode"> | Date | string
    isUsed?: BoolFilter<"ReferralCode"> | boolean
    isArchived?: BoolFilter<"ReferralCode"> | boolean
    archivedAt?: DateTimeNullableFilter<"ReferralCode"> | Date | string | null
    usedAt?: DateTimeNullableFilter<"ReferralCode"> | Date | string | null
    createdAt?: DateTimeFilter<"ReferralCode"> | Date | string
    updatedAt?: DateTimeFilter<"ReferralCode"> | Date | string
  }

  export type AppSessionUpsertWithWhereUniqueWithoutUserInput = {
    where: AppSessionWhereUniqueInput
    update: XOR<AppSessionUpdateWithoutUserInput, AppSessionUncheckedUpdateWithoutUserInput>
    create: XOR<AppSessionCreateWithoutUserInput, AppSessionUncheckedCreateWithoutUserInput>
  }

  export type AppSessionUpdateWithWhereUniqueWithoutUserInput = {
    where: AppSessionWhereUniqueInput
    data: XOR<AppSessionUpdateWithoutUserInput, AppSessionUncheckedUpdateWithoutUserInput>
  }

  export type AppSessionUpdateManyWithWhereWithoutUserInput = {
    where: AppSessionScalarWhereInput
    data: XOR<AppSessionUpdateManyMutationInput, AppSessionUncheckedUpdateManyWithoutUserInput>
  }

  export type AppSessionScalarWhereInput = {
    AND?: AppSessionScalarWhereInput | AppSessionScalarWhereInput[]
    OR?: AppSessionScalarWhereInput[]
    NOT?: AppSessionScalarWhereInput | AppSessionScalarWhereInput[]
    id?: UuidFilter<"AppSession"> | string
    userId?: UuidFilter<"AppSession"> | string
    echoAppId?: UuidFilter<"AppSession"> | string
    deviceName?: StringNullableFilter<"AppSession"> | string | null
    userAgent?: StringNullableFilter<"AppSession"> | string | null
    ipAddress?: StringNullableFilter<"AppSession"> | string | null
    createdAt?: DateTimeFilter<"AppSession"> | Date | string
    updatedAt?: DateTimeFilter<"AppSession"> | Date | string
    lastSeenAt?: DateTimeNullableFilter<"AppSession"> | Date | string | null
    revokedAt?: DateTimeNullableFilter<"AppSession"> | Date | string | null
    isArchived?: BoolFilter<"AppSession"> | boolean
  }

  export type UserCreateWithoutAccountsInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    sessions?: SessionCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    transactions?: TransactionCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutUserInput
    appSessions?: AppSessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAccountsInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    transactions?: TransactionUncheckedCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutUserInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAccountsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
  }

  export type UserUpsertWithoutAccountsInput = {
    update: XOR<UserUpdateWithoutAccountsInput, UserUncheckedUpdateWithoutAccountsInput>
    create: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAccountsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAccountsInput, UserUncheckedUpdateWithoutAccountsInput>
  }

  export type UserUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    sessions?: SessionUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    transactions?: TransactionUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    transactions?: TransactionUncheckedUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutSessionsInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    transactions?: TransactionCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutUserInput
    appSessions?: AppSessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSessionsInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    transactions?: TransactionUncheckedCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutUserInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSessionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
  }

  export type UserUpsertWithoutSessionsInput = {
    update: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSessionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    transactions?: TransactionUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    transactions?: TransactionUncheckedUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ApiKeyCreateWithoutEchoAppInput = {
    id?: string
    keyHash: string
    name?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    lastUsed?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    scope?: string
    user: UserCreateNestedOneWithoutApiKeysInput
    Transactions?: TransactionCreateNestedManyWithoutApiKeyInput
  }

  export type ApiKeyUncheckedCreateWithoutEchoAppInput = {
    id?: string
    keyHash: string
    name?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    lastUsed?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    scope?: string
    Transactions?: TransactionUncheckedCreateNestedManyWithoutApiKeyInput
  }

  export type ApiKeyCreateOrConnectWithoutEchoAppInput = {
    where: ApiKeyWhereUniqueInput
    create: XOR<ApiKeyCreateWithoutEchoAppInput, ApiKeyUncheckedCreateWithoutEchoAppInput>
  }

  export type ApiKeyCreateManyEchoAppInputEnvelope = {
    data: ApiKeyCreateManyEchoAppInput | ApiKeyCreateManyEchoAppInput[]
    skipDuplicates?: boolean
  }

  export type TransactionCreateWithoutEchoAppInput = {
    id?: string
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    apiKey?: ApiKeyCreateNestedOneWithoutTransactionsInput
    githubLink?: GithubLinkCreateNestedOneWithoutTransactionsInput
    markUp?: MarkUpCreateNestedOneWithoutTransactionsInput
    spendPool?: SpendPoolCreateNestedOneWithoutTransactionsInput
    transactionMetadata?: TransactionMetadataCreateNestedOneWithoutTransactionsInput
    user: UserCreateNestedOneWithoutTransactionsInput
    userSpendPoolUsage?: UserSpendPoolUsageCreateNestedOneWithoutTransactionsInput
    referralCode?: ReferralCodeCreateNestedOneWithoutTransactionInput
    referrerReward?: ReferralRewardCreateNestedOneWithoutTransactionInput
  }

  export type TransactionUncheckedCreateWithoutEchoAppInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    apiKeyId?: string | null
    markUpId?: string | null
    githubLinkId?: string | null
    spendPoolId?: string | null
    userSpendPoolUsageId?: string | null
    referralCodeId?: string | null
    referrerRewardId?: string | null
  }

  export type TransactionCreateOrConnectWithoutEchoAppInput = {
    where: TransactionWhereUniqueInput
    create: XOR<TransactionCreateWithoutEchoAppInput, TransactionUncheckedCreateWithoutEchoAppInput>
  }

  export type TransactionCreateManyEchoAppInputEnvelope = {
    data: TransactionCreateManyEchoAppInput | TransactionCreateManyEchoAppInput[]
    skipDuplicates?: boolean
  }

  export type RefreshTokenCreateWithoutEchoAppInput = {
    id?: string
    token: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    scope?: string
    user: UserCreateNestedOneWithoutRefreshTokensInput
    session?: AppSessionCreateNestedOneWithoutRefreshTokensInput
  }

  export type RefreshTokenUncheckedCreateWithoutEchoAppInput = {
    id?: string
    token: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    scope?: string
    sessionId?: string | null
  }

  export type RefreshTokenCreateOrConnectWithoutEchoAppInput = {
    where: RefreshTokenWhereUniqueInput
    create: XOR<RefreshTokenCreateWithoutEchoAppInput, RefreshTokenUncheckedCreateWithoutEchoAppInput>
  }

  export type RefreshTokenCreateManyEchoAppInputEnvelope = {
    data: RefreshTokenCreateManyEchoAppInput | RefreshTokenCreateManyEchoAppInput[]
    skipDuplicates?: boolean
  }

  export type AppMembershipCreateWithoutEchoAppInput = {
    id?: string
    role: string
    status?: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalSpent: Decimal | DecimalJsLike | number | string
    amountSpent?: Decimal | DecimalJsLike | number | string
    referrer?: ReferralCodeCreateNestedOneWithoutAppMembershipsInput
    user: UserCreateNestedOneWithoutAppMembershipsInput
  }

  export type AppMembershipUncheckedCreateWithoutEchoAppInput = {
    id?: string
    userId: string
    role: string
    status?: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalSpent: Decimal | DecimalJsLike | number | string
    amountSpent?: Decimal | DecimalJsLike | number | string
    referrerId?: string | null
  }

  export type AppMembershipCreateOrConnectWithoutEchoAppInput = {
    where: AppMembershipWhereUniqueInput
    create: XOR<AppMembershipCreateWithoutEchoAppInput, AppMembershipUncheckedCreateWithoutEchoAppInput>
  }

  export type AppMembershipCreateManyEchoAppInputEnvelope = {
    data: AppMembershipCreateManyEchoAppInput | AppMembershipCreateManyEchoAppInput[]
    skipDuplicates?: boolean
  }

  export type MarkUpCreateWithoutEchoAppInput = {
    id?: string
    amount?: Decimal | DecimalJsLike | number | string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Transactions?: TransactionCreateNestedManyWithoutMarkUpInput
  }

  export type MarkUpUncheckedCreateWithoutEchoAppInput = {
    id?: string
    amount?: Decimal | DecimalJsLike | number | string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Transactions?: TransactionUncheckedCreateNestedManyWithoutMarkUpInput
  }

  export type MarkUpCreateOrConnectWithoutEchoAppInput = {
    where: MarkUpWhereUniqueInput
    create: XOR<MarkUpCreateWithoutEchoAppInput, MarkUpUncheckedCreateWithoutEchoAppInput>
  }

  export type GithubLinkCreateWithoutEchoAppInput = {
    id?: string
    githubId: number
    githubType: $Enums.GithubType
    githubUrl: string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Transactions?: TransactionCreateNestedManyWithoutGithubLinkInput
  }

  export type GithubLinkUncheckedCreateWithoutEchoAppInput = {
    id?: string
    githubId: number
    githubType: $Enums.GithubType
    githubUrl: string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Transactions?: TransactionUncheckedCreateNestedManyWithoutGithubLinkInput
  }

  export type GithubLinkCreateOrConnectWithoutEchoAppInput = {
    where: GithubLinkWhereUniqueInput
    create: XOR<GithubLinkCreateWithoutEchoAppInput, GithubLinkUncheckedCreateWithoutEchoAppInput>
  }

  export type SpendPoolCreateWithoutEchoAppInput = {
    id?: string
    name: string
    description?: string | null
    totalPaid?: Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: Decimal | DecimalJsLike | number | string | null
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    payments?: PaymentCreateNestedManyWithoutSpendPoolInput
    Transactions?: TransactionCreateNestedManyWithoutSpendPoolInput
    userUsage?: UserSpendPoolUsageCreateNestedManyWithoutSpendPoolInput
  }

  export type SpendPoolUncheckedCreateWithoutEchoAppInput = {
    id?: string
    name: string
    description?: string | null
    totalPaid?: Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: Decimal | DecimalJsLike | number | string | null
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    payments?: PaymentUncheckedCreateNestedManyWithoutSpendPoolInput
    Transactions?: TransactionUncheckedCreateNestedManyWithoutSpendPoolInput
    userUsage?: UserSpendPoolUsageUncheckedCreateNestedManyWithoutSpendPoolInput
  }

  export type SpendPoolCreateOrConnectWithoutEchoAppInput = {
    where: SpendPoolWhereUniqueInput
    create: XOR<SpendPoolCreateWithoutEchoAppInput, SpendPoolUncheckedCreateWithoutEchoAppInput>
  }

  export type SpendPoolCreateManyEchoAppInputEnvelope = {
    data: SpendPoolCreateManyEchoAppInput | SpendPoolCreateManyEchoAppInput[]
    skipDuplicates?: boolean
  }

  export type ReferralCodeCreateWithoutEchoAppInput = {
    id?: string
    code: string
    grantType: string
    grantAmount?: Decimal | DecimalJsLike | number | string | null
    reusable?: boolean
    expiresAt: Date | string
    isUsed?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    usedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appMemberships?: AppMembershipCreateNestedManyWithoutReferrerInput
    user?: UserCreateNestedOneWithoutReferralCodeInput
    Transaction?: TransactionCreateNestedManyWithoutReferralCodeInput
  }

  export type ReferralCodeUncheckedCreateWithoutEchoAppInput = {
    id?: string
    code: string
    userId?: string | null
    grantType: string
    grantAmount?: Decimal | DecimalJsLike | number | string | null
    reusable?: boolean
    expiresAt: Date | string
    isUsed?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    usedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutReferrerInput
    Transaction?: TransactionUncheckedCreateNestedManyWithoutReferralCodeInput
  }

  export type ReferralCodeCreateOrConnectWithoutEchoAppInput = {
    where: ReferralCodeWhereUniqueInput
    create: XOR<ReferralCodeCreateWithoutEchoAppInput, ReferralCodeUncheckedCreateWithoutEchoAppInput>
  }

  export type ReferralCodeCreateManyEchoAppInputEnvelope = {
    data: ReferralCodeCreateManyEchoAppInput | ReferralCodeCreateManyEchoAppInput[]
    skipDuplicates?: boolean
  }

  export type ReferralRewardCreateWithoutCurrentForAppsInput = {
    id?: string
    amount?: Decimal | DecimalJsLike | number | string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoApp: EchoAppCreateNestedOneWithoutReferralRewardsInput
    Transaction?: TransactionCreateNestedManyWithoutReferrerRewardInput
  }

  export type ReferralRewardUncheckedCreateWithoutCurrentForAppsInput = {
    id?: string
    amount?: Decimal | DecimalJsLike | number | string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoAppId: string
    Transaction?: TransactionUncheckedCreateNestedManyWithoutReferrerRewardInput
  }

  export type ReferralRewardCreateOrConnectWithoutCurrentForAppsInput = {
    where: ReferralRewardWhereUniqueInput
    create: XOR<ReferralRewardCreateWithoutCurrentForAppsInput, ReferralRewardUncheckedCreateWithoutCurrentForAppsInput>
  }

  export type ReferralRewardCreateWithoutEchoAppInput = {
    id?: string
    amount?: Decimal | DecimalJsLike | number | string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    currentForApps?: EchoAppCreateNestedManyWithoutCurrentReferralRewardInput
    Transaction?: TransactionCreateNestedManyWithoutReferrerRewardInput
  }

  export type ReferralRewardUncheckedCreateWithoutEchoAppInput = {
    id?: string
    amount?: Decimal | DecimalJsLike | number | string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    currentForApps?: EchoAppUncheckedCreateNestedManyWithoutCurrentReferralRewardInput
    Transaction?: TransactionUncheckedCreateNestedManyWithoutReferrerRewardInput
  }

  export type ReferralRewardCreateOrConnectWithoutEchoAppInput = {
    where: ReferralRewardWhereUniqueInput
    create: XOR<ReferralRewardCreateWithoutEchoAppInput, ReferralRewardUncheckedCreateWithoutEchoAppInput>
  }

  export type ReferralRewardCreateManyEchoAppInputEnvelope = {
    data: ReferralRewardCreateManyEchoAppInput | ReferralRewardCreateManyEchoAppInput[]
    skipDuplicates?: boolean
  }

  export type AppSessionCreateWithoutEchoAppInput = {
    id?: string
    deviceName?: string | null
    userAgent?: string | null
    ipAddress?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastSeenAt?: Date | string | null
    revokedAt?: Date | string | null
    isArchived?: boolean
    user: UserCreateNestedOneWithoutAppSessionsInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutSessionInput
  }

  export type AppSessionUncheckedCreateWithoutEchoAppInput = {
    id?: string
    userId: string
    deviceName?: string | null
    userAgent?: string | null
    ipAddress?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastSeenAt?: Date | string | null
    revokedAt?: Date | string | null
    isArchived?: boolean
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutSessionInput
  }

  export type AppSessionCreateOrConnectWithoutEchoAppInput = {
    where: AppSessionWhereUniqueInput
    create: XOR<AppSessionCreateWithoutEchoAppInput, AppSessionUncheckedCreateWithoutEchoAppInput>
  }

  export type AppSessionCreateManyEchoAppInputEnvelope = {
    data: AppSessionCreateManyEchoAppInput | AppSessionCreateManyEchoAppInput[]
    skipDuplicates?: boolean
  }

  export type ApiKeyUpsertWithWhereUniqueWithoutEchoAppInput = {
    where: ApiKeyWhereUniqueInput
    update: XOR<ApiKeyUpdateWithoutEchoAppInput, ApiKeyUncheckedUpdateWithoutEchoAppInput>
    create: XOR<ApiKeyCreateWithoutEchoAppInput, ApiKeyUncheckedCreateWithoutEchoAppInput>
  }

  export type ApiKeyUpdateWithWhereUniqueWithoutEchoAppInput = {
    where: ApiKeyWhereUniqueInput
    data: XOR<ApiKeyUpdateWithoutEchoAppInput, ApiKeyUncheckedUpdateWithoutEchoAppInput>
  }

  export type ApiKeyUpdateManyWithWhereWithoutEchoAppInput = {
    where: ApiKeyScalarWhereInput
    data: XOR<ApiKeyUpdateManyMutationInput, ApiKeyUncheckedUpdateManyWithoutEchoAppInput>
  }

  export type TransactionUpsertWithWhereUniqueWithoutEchoAppInput = {
    where: TransactionWhereUniqueInput
    update: XOR<TransactionUpdateWithoutEchoAppInput, TransactionUncheckedUpdateWithoutEchoAppInput>
    create: XOR<TransactionCreateWithoutEchoAppInput, TransactionUncheckedCreateWithoutEchoAppInput>
  }

  export type TransactionUpdateWithWhereUniqueWithoutEchoAppInput = {
    where: TransactionWhereUniqueInput
    data: XOR<TransactionUpdateWithoutEchoAppInput, TransactionUncheckedUpdateWithoutEchoAppInput>
  }

  export type TransactionUpdateManyWithWhereWithoutEchoAppInput = {
    where: TransactionScalarWhereInput
    data: XOR<TransactionUpdateManyMutationInput, TransactionUncheckedUpdateManyWithoutEchoAppInput>
  }

  export type RefreshTokenUpsertWithWhereUniqueWithoutEchoAppInput = {
    where: RefreshTokenWhereUniqueInput
    update: XOR<RefreshTokenUpdateWithoutEchoAppInput, RefreshTokenUncheckedUpdateWithoutEchoAppInput>
    create: XOR<RefreshTokenCreateWithoutEchoAppInput, RefreshTokenUncheckedCreateWithoutEchoAppInput>
  }

  export type RefreshTokenUpdateWithWhereUniqueWithoutEchoAppInput = {
    where: RefreshTokenWhereUniqueInput
    data: XOR<RefreshTokenUpdateWithoutEchoAppInput, RefreshTokenUncheckedUpdateWithoutEchoAppInput>
  }

  export type RefreshTokenUpdateManyWithWhereWithoutEchoAppInput = {
    where: RefreshTokenScalarWhereInput
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyWithoutEchoAppInput>
  }

  export type AppMembershipUpsertWithWhereUniqueWithoutEchoAppInput = {
    where: AppMembershipWhereUniqueInput
    update: XOR<AppMembershipUpdateWithoutEchoAppInput, AppMembershipUncheckedUpdateWithoutEchoAppInput>
    create: XOR<AppMembershipCreateWithoutEchoAppInput, AppMembershipUncheckedCreateWithoutEchoAppInput>
  }

  export type AppMembershipUpdateWithWhereUniqueWithoutEchoAppInput = {
    where: AppMembershipWhereUniqueInput
    data: XOR<AppMembershipUpdateWithoutEchoAppInput, AppMembershipUncheckedUpdateWithoutEchoAppInput>
  }

  export type AppMembershipUpdateManyWithWhereWithoutEchoAppInput = {
    where: AppMembershipScalarWhereInput
    data: XOR<AppMembershipUpdateManyMutationInput, AppMembershipUncheckedUpdateManyWithoutEchoAppInput>
  }

  export type MarkUpUpsertWithoutEchoAppInput = {
    update: XOR<MarkUpUpdateWithoutEchoAppInput, MarkUpUncheckedUpdateWithoutEchoAppInput>
    create: XOR<MarkUpCreateWithoutEchoAppInput, MarkUpUncheckedCreateWithoutEchoAppInput>
    where?: MarkUpWhereInput
  }

  export type MarkUpUpdateToOneWithWhereWithoutEchoAppInput = {
    where?: MarkUpWhereInput
    data: XOR<MarkUpUpdateWithoutEchoAppInput, MarkUpUncheckedUpdateWithoutEchoAppInput>
  }

  export type MarkUpUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Transactions?: TransactionUpdateManyWithoutMarkUpNestedInput
  }

  export type MarkUpUncheckedUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Transactions?: TransactionUncheckedUpdateManyWithoutMarkUpNestedInput
  }

  export type GithubLinkUpsertWithoutEchoAppInput = {
    update: XOR<GithubLinkUpdateWithoutEchoAppInput, GithubLinkUncheckedUpdateWithoutEchoAppInput>
    create: XOR<GithubLinkCreateWithoutEchoAppInput, GithubLinkUncheckedCreateWithoutEchoAppInput>
    where?: GithubLinkWhereInput
  }

  export type GithubLinkUpdateToOneWithWhereWithoutEchoAppInput = {
    where?: GithubLinkWhereInput
    data: XOR<GithubLinkUpdateWithoutEchoAppInput, GithubLinkUncheckedUpdateWithoutEchoAppInput>
  }

  export type GithubLinkUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    githubId?: IntFieldUpdateOperationsInput | number
    githubType?: EnumGithubTypeFieldUpdateOperationsInput | $Enums.GithubType
    githubUrl?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Transactions?: TransactionUpdateManyWithoutGithubLinkNestedInput
  }

  export type GithubLinkUncheckedUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    githubId?: IntFieldUpdateOperationsInput | number
    githubType?: EnumGithubTypeFieldUpdateOperationsInput | $Enums.GithubType
    githubUrl?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Transactions?: TransactionUncheckedUpdateManyWithoutGithubLinkNestedInput
  }

  export type SpendPoolUpsertWithWhereUniqueWithoutEchoAppInput = {
    where: SpendPoolWhereUniqueInput
    update: XOR<SpendPoolUpdateWithoutEchoAppInput, SpendPoolUncheckedUpdateWithoutEchoAppInput>
    create: XOR<SpendPoolCreateWithoutEchoAppInput, SpendPoolUncheckedCreateWithoutEchoAppInput>
  }

  export type SpendPoolUpdateWithWhereUniqueWithoutEchoAppInput = {
    where: SpendPoolWhereUniqueInput
    data: XOR<SpendPoolUpdateWithoutEchoAppInput, SpendPoolUncheckedUpdateWithoutEchoAppInput>
  }

  export type SpendPoolUpdateManyWithWhereWithoutEchoAppInput = {
    where: SpendPoolScalarWhereInput
    data: XOR<SpendPoolUpdateManyMutationInput, SpendPoolUncheckedUpdateManyWithoutEchoAppInput>
  }

  export type SpendPoolScalarWhereInput = {
    AND?: SpendPoolScalarWhereInput | SpendPoolScalarWhereInput[]
    OR?: SpendPoolScalarWhereInput[]
    NOT?: SpendPoolScalarWhereInput | SpendPoolScalarWhereInput[]
    id?: UuidFilter<"SpendPool"> | string
    name?: StringFilter<"SpendPool"> | string
    description?: StringNullableFilter<"SpendPool"> | string | null
    totalPaid?: DecimalFilter<"SpendPool"> | Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: DecimalNullableFilter<"SpendPool"> | Decimal | DecimalJsLike | number | string | null
    totalSpent?: DecimalFilter<"SpendPool"> | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFilter<"SpendPool"> | boolean
    archivedAt?: DateTimeNullableFilter<"SpendPool"> | Date | string | null
    createdAt?: DateTimeFilter<"SpendPool"> | Date | string
    updatedAt?: DateTimeFilter<"SpendPool"> | Date | string
    echoAppId?: UuidFilter<"SpendPool"> | string
  }

  export type ReferralCodeUpsertWithWhereUniqueWithoutEchoAppInput = {
    where: ReferralCodeWhereUniqueInput
    update: XOR<ReferralCodeUpdateWithoutEchoAppInput, ReferralCodeUncheckedUpdateWithoutEchoAppInput>
    create: XOR<ReferralCodeCreateWithoutEchoAppInput, ReferralCodeUncheckedCreateWithoutEchoAppInput>
  }

  export type ReferralCodeUpdateWithWhereUniqueWithoutEchoAppInput = {
    where: ReferralCodeWhereUniqueInput
    data: XOR<ReferralCodeUpdateWithoutEchoAppInput, ReferralCodeUncheckedUpdateWithoutEchoAppInput>
  }

  export type ReferralCodeUpdateManyWithWhereWithoutEchoAppInput = {
    where: ReferralCodeScalarWhereInput
    data: XOR<ReferralCodeUpdateManyMutationInput, ReferralCodeUncheckedUpdateManyWithoutEchoAppInput>
  }

  export type ReferralRewardUpsertWithoutCurrentForAppsInput = {
    update: XOR<ReferralRewardUpdateWithoutCurrentForAppsInput, ReferralRewardUncheckedUpdateWithoutCurrentForAppsInput>
    create: XOR<ReferralRewardCreateWithoutCurrentForAppsInput, ReferralRewardUncheckedCreateWithoutCurrentForAppsInput>
    where?: ReferralRewardWhereInput
  }

  export type ReferralRewardUpdateToOneWithWhereWithoutCurrentForAppsInput = {
    where?: ReferralRewardWhereInput
    data: XOR<ReferralRewardUpdateWithoutCurrentForAppsInput, ReferralRewardUncheckedUpdateWithoutCurrentForAppsInput>
  }

  export type ReferralRewardUpdateWithoutCurrentForAppsInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoApp?: EchoAppUpdateOneRequiredWithoutReferralRewardsNestedInput
    Transaction?: TransactionUpdateManyWithoutReferrerRewardNestedInput
  }

  export type ReferralRewardUncheckedUpdateWithoutCurrentForAppsInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    Transaction?: TransactionUncheckedUpdateManyWithoutReferrerRewardNestedInput
  }

  export type ReferralRewardUpsertWithWhereUniqueWithoutEchoAppInput = {
    where: ReferralRewardWhereUniqueInput
    update: XOR<ReferralRewardUpdateWithoutEchoAppInput, ReferralRewardUncheckedUpdateWithoutEchoAppInput>
    create: XOR<ReferralRewardCreateWithoutEchoAppInput, ReferralRewardUncheckedCreateWithoutEchoAppInput>
  }

  export type ReferralRewardUpdateWithWhereUniqueWithoutEchoAppInput = {
    where: ReferralRewardWhereUniqueInput
    data: XOR<ReferralRewardUpdateWithoutEchoAppInput, ReferralRewardUncheckedUpdateWithoutEchoAppInput>
  }

  export type ReferralRewardUpdateManyWithWhereWithoutEchoAppInput = {
    where: ReferralRewardScalarWhereInput
    data: XOR<ReferralRewardUpdateManyMutationInput, ReferralRewardUncheckedUpdateManyWithoutEchoAppInput>
  }

  export type ReferralRewardScalarWhereInput = {
    AND?: ReferralRewardScalarWhereInput | ReferralRewardScalarWhereInput[]
    OR?: ReferralRewardScalarWhereInput[]
    NOT?: ReferralRewardScalarWhereInput | ReferralRewardScalarWhereInput[]
    id?: UuidFilter<"ReferralReward"> | string
    amount?: DecimalFilter<"ReferralReward"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"ReferralReward"> | string | null
    isArchived?: BoolFilter<"ReferralReward"> | boolean
    archivedAt?: DateTimeNullableFilter<"ReferralReward"> | Date | string | null
    createdAt?: DateTimeFilter<"ReferralReward"> | Date | string
    updatedAt?: DateTimeFilter<"ReferralReward"> | Date | string
    echoAppId?: UuidFilter<"ReferralReward"> | string
  }

  export type AppSessionUpsertWithWhereUniqueWithoutEchoAppInput = {
    where: AppSessionWhereUniqueInput
    update: XOR<AppSessionUpdateWithoutEchoAppInput, AppSessionUncheckedUpdateWithoutEchoAppInput>
    create: XOR<AppSessionCreateWithoutEchoAppInput, AppSessionUncheckedCreateWithoutEchoAppInput>
  }

  export type AppSessionUpdateWithWhereUniqueWithoutEchoAppInput = {
    where: AppSessionWhereUniqueInput
    data: XOR<AppSessionUpdateWithoutEchoAppInput, AppSessionUncheckedUpdateWithoutEchoAppInput>
  }

  export type AppSessionUpdateManyWithWhereWithoutEchoAppInput = {
    where: AppSessionScalarWhereInput
    data: XOR<AppSessionUpdateManyMutationInput, AppSessionUncheckedUpdateManyWithoutEchoAppInput>
  }

  export type ReferralCodeCreateWithoutAppMembershipsInput = {
    id?: string
    code: string
    grantType: string
    grantAmount?: Decimal | DecimalJsLike | number | string | null
    reusable?: boolean
    expiresAt: Date | string
    isUsed?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    usedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user?: UserCreateNestedOneWithoutReferralCodeInput
    echoApp?: EchoAppCreateNestedOneWithoutReferralCodeInput
    Transaction?: TransactionCreateNestedManyWithoutReferralCodeInput
  }

  export type ReferralCodeUncheckedCreateWithoutAppMembershipsInput = {
    id?: string
    code: string
    userId?: string | null
    echoAppId?: string | null
    grantType: string
    grantAmount?: Decimal | DecimalJsLike | number | string | null
    reusable?: boolean
    expiresAt: Date | string
    isUsed?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    usedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Transaction?: TransactionUncheckedCreateNestedManyWithoutReferralCodeInput
  }

  export type ReferralCodeCreateOrConnectWithoutAppMembershipsInput = {
    where: ReferralCodeWhereUniqueInput
    create: XOR<ReferralCodeCreateWithoutAppMembershipsInput, ReferralCodeUncheckedCreateWithoutAppMembershipsInput>
  }

  export type EchoAppCreateWithoutAppMembershipsInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutEchoAppInput
    currentReferralReward?: ReferralRewardCreateNestedOneWithoutCurrentForAppsInput
    ReferralRewards?: ReferralRewardCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppUncheckedCreateWithoutAppMembershipsInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: string | null
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionUncheckedCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpUncheckedCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkUncheckedCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralRewards?: ReferralRewardUncheckedCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppCreateOrConnectWithoutAppMembershipsInput = {
    where: EchoAppWhereUniqueInput
    create: XOR<EchoAppCreateWithoutAppMembershipsInput, EchoAppUncheckedCreateWithoutAppMembershipsInput>
  }

  export type UserCreateWithoutAppMembershipsInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    transactions?: TransactionCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutUserInput
    appSessions?: AppSessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAppMembershipsInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    transactions?: TransactionUncheckedCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutUserInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAppMembershipsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAppMembershipsInput, UserUncheckedCreateWithoutAppMembershipsInput>
  }

  export type ReferralCodeUpsertWithoutAppMembershipsInput = {
    update: XOR<ReferralCodeUpdateWithoutAppMembershipsInput, ReferralCodeUncheckedUpdateWithoutAppMembershipsInput>
    create: XOR<ReferralCodeCreateWithoutAppMembershipsInput, ReferralCodeUncheckedCreateWithoutAppMembershipsInput>
    where?: ReferralCodeWhereInput
  }

  export type ReferralCodeUpdateToOneWithWhereWithoutAppMembershipsInput = {
    where?: ReferralCodeWhereInput
    data: XOR<ReferralCodeUpdateWithoutAppMembershipsInput, ReferralCodeUncheckedUpdateWithoutAppMembershipsInput>
  }

  export type ReferralCodeUpdateWithoutAppMembershipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    grantType?: StringFieldUpdateOperationsInput | string
    grantAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reusable?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutReferralCodeNestedInput
    echoApp?: EchoAppUpdateOneWithoutReferralCodeNestedInput
    Transaction?: TransactionUpdateManyWithoutReferralCodeNestedInput
  }

  export type ReferralCodeUncheckedUpdateWithoutAppMembershipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    echoAppId?: NullableStringFieldUpdateOperationsInput | string | null
    grantType?: StringFieldUpdateOperationsInput | string
    grantAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reusable?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Transaction?: TransactionUncheckedUpdateManyWithoutReferralCodeNestedInput
  }

  export type EchoAppUpsertWithoutAppMembershipsInput = {
    update: XOR<EchoAppUpdateWithoutAppMembershipsInput, EchoAppUncheckedUpdateWithoutAppMembershipsInput>
    create: XOR<EchoAppCreateWithoutAppMembershipsInput, EchoAppUncheckedCreateWithoutAppMembershipsInput>
    where?: EchoAppWhereInput
  }

  export type EchoAppUpdateToOneWithWhereWithoutAppMembershipsInput = {
    where?: EchoAppWhereInput
    data: XOR<EchoAppUpdateWithoutAppMembershipsInput, EchoAppUncheckedUpdateWithoutAppMembershipsInput>
  }

  export type EchoAppUpdateWithoutAppMembershipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutEchoAppNestedInput
    currentReferralReward?: ReferralRewardUpdateOneWithoutCurrentForAppsNestedInput
    ReferralRewards?: ReferralRewardUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUpdateManyWithoutEchoAppNestedInput
  }

  export type EchoAppUncheckedUpdateWithoutAppMembershipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: NullableStringFieldUpdateOperationsInput | string | null
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUncheckedUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUncheckedUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUncheckedUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralRewards?: ReferralRewardUncheckedUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutEchoAppNestedInput
  }

  export type UserUpsertWithoutAppMembershipsInput = {
    update: XOR<UserUpdateWithoutAppMembershipsInput, UserUncheckedUpdateWithoutAppMembershipsInput>
    create: XOR<UserCreateWithoutAppMembershipsInput, UserUncheckedCreateWithoutAppMembershipsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAppMembershipsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAppMembershipsInput, UserUncheckedUpdateWithoutAppMembershipsInput>
  }

  export type UserUpdateWithoutAppMembershipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    transactions?: TransactionUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAppMembershipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    transactions?: TransactionUncheckedUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type EchoAppCreateWithoutApiKeysInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    Transactions?: TransactionCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutEchoAppInput
    currentReferralReward?: ReferralRewardCreateNestedOneWithoutCurrentForAppsInput
    ReferralRewards?: ReferralRewardCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppUncheckedCreateWithoutApiKeysInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: string | null
    Transactions?: TransactionUncheckedCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpUncheckedCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkUncheckedCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralRewards?: ReferralRewardUncheckedCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppCreateOrConnectWithoutApiKeysInput = {
    where: EchoAppWhereUniqueInput
    create: XOR<EchoAppCreateWithoutApiKeysInput, EchoAppUncheckedCreateWithoutApiKeysInput>
  }

  export type UserCreateWithoutApiKeysInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    transactions?: TransactionCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutUserInput
    appSessions?: AppSessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutApiKeysInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    transactions?: TransactionUncheckedCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutUserInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutApiKeysInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutApiKeysInput, UserUncheckedCreateWithoutApiKeysInput>
  }

  export type TransactionCreateWithoutApiKeyInput = {
    id?: string
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    echoApp: EchoAppCreateNestedOneWithoutTransactionsInput
    githubLink?: GithubLinkCreateNestedOneWithoutTransactionsInput
    markUp?: MarkUpCreateNestedOneWithoutTransactionsInput
    spendPool?: SpendPoolCreateNestedOneWithoutTransactionsInput
    transactionMetadata?: TransactionMetadataCreateNestedOneWithoutTransactionsInput
    user: UserCreateNestedOneWithoutTransactionsInput
    userSpendPoolUsage?: UserSpendPoolUsageCreateNestedOneWithoutTransactionsInput
    referralCode?: ReferralCodeCreateNestedOneWithoutTransactionInput
    referrerReward?: ReferralRewardCreateNestedOneWithoutTransactionInput
  }

  export type TransactionUncheckedCreateWithoutApiKeyInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    echoAppId: string
    markUpId?: string | null
    githubLinkId?: string | null
    spendPoolId?: string | null
    userSpendPoolUsageId?: string | null
    referralCodeId?: string | null
    referrerRewardId?: string | null
  }

  export type TransactionCreateOrConnectWithoutApiKeyInput = {
    where: TransactionWhereUniqueInput
    create: XOR<TransactionCreateWithoutApiKeyInput, TransactionUncheckedCreateWithoutApiKeyInput>
  }

  export type TransactionCreateManyApiKeyInputEnvelope = {
    data: TransactionCreateManyApiKeyInput | TransactionCreateManyApiKeyInput[]
    skipDuplicates?: boolean
  }

  export type EchoAppUpsertWithoutApiKeysInput = {
    update: XOR<EchoAppUpdateWithoutApiKeysInput, EchoAppUncheckedUpdateWithoutApiKeysInput>
    create: XOR<EchoAppCreateWithoutApiKeysInput, EchoAppUncheckedCreateWithoutApiKeysInput>
    where?: EchoAppWhereInput
  }

  export type EchoAppUpdateToOneWithWhereWithoutApiKeysInput = {
    where?: EchoAppWhereInput
    data: XOR<EchoAppUpdateWithoutApiKeysInput, EchoAppUncheckedUpdateWithoutApiKeysInput>
  }

  export type EchoAppUpdateWithoutApiKeysInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    Transactions?: TransactionUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutEchoAppNestedInput
    currentReferralReward?: ReferralRewardUpdateOneWithoutCurrentForAppsNestedInput
    ReferralRewards?: ReferralRewardUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUpdateManyWithoutEchoAppNestedInput
  }

  export type EchoAppUncheckedUpdateWithoutApiKeysInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: NullableStringFieldUpdateOperationsInput | string | null
    Transactions?: TransactionUncheckedUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUncheckedUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUncheckedUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralRewards?: ReferralRewardUncheckedUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutEchoAppNestedInput
  }

  export type UserUpsertWithoutApiKeysInput = {
    update: XOR<UserUpdateWithoutApiKeysInput, UserUncheckedUpdateWithoutApiKeysInput>
    create: XOR<UserCreateWithoutApiKeysInput, UserUncheckedCreateWithoutApiKeysInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutApiKeysInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutApiKeysInput, UserUncheckedUpdateWithoutApiKeysInput>
  }

  export type UserUpdateWithoutApiKeysInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    transactions?: TransactionUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutApiKeysInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    transactions?: TransactionUncheckedUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type TransactionUpsertWithWhereUniqueWithoutApiKeyInput = {
    where: TransactionWhereUniqueInput
    update: XOR<TransactionUpdateWithoutApiKeyInput, TransactionUncheckedUpdateWithoutApiKeyInput>
    create: XOR<TransactionCreateWithoutApiKeyInput, TransactionUncheckedCreateWithoutApiKeyInput>
  }

  export type TransactionUpdateWithWhereUniqueWithoutApiKeyInput = {
    where: TransactionWhereUniqueInput
    data: XOR<TransactionUpdateWithoutApiKeyInput, TransactionUncheckedUpdateWithoutApiKeyInput>
  }

  export type TransactionUpdateManyWithWhereWithoutApiKeyInput = {
    where: TransactionScalarWhereInput
    data: XOR<TransactionUpdateManyMutationInput, TransactionUncheckedUpdateManyWithoutApiKeyInput>
  }

  export type EchoAppCreateWithoutRefreshTokensInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutEchoAppInput
    currentReferralReward?: ReferralRewardCreateNestedOneWithoutCurrentForAppsInput
    ReferralRewards?: ReferralRewardCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppUncheckedCreateWithoutRefreshTokensInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: string | null
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionUncheckedCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpUncheckedCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkUncheckedCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralRewards?: ReferralRewardUncheckedCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppCreateOrConnectWithoutRefreshTokensInput = {
    where: EchoAppWhereUniqueInput
    create: XOR<EchoAppCreateWithoutRefreshTokensInput, EchoAppUncheckedCreateWithoutRefreshTokensInput>
  }

  export type UserCreateWithoutRefreshTokensInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    transactions?: TransactionCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutUserInput
    appSessions?: AppSessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutRefreshTokensInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    transactions?: TransactionUncheckedCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutUserInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutRefreshTokensInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
  }

  export type AppSessionCreateWithoutRefreshTokensInput = {
    id?: string
    deviceName?: string | null
    userAgent?: string | null
    ipAddress?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastSeenAt?: Date | string | null
    revokedAt?: Date | string | null
    isArchived?: boolean
    user: UserCreateNestedOneWithoutAppSessionsInput
    echoApp: EchoAppCreateNestedOneWithoutAppSessionsInput
  }

  export type AppSessionUncheckedCreateWithoutRefreshTokensInput = {
    id?: string
    userId: string
    echoAppId: string
    deviceName?: string | null
    userAgent?: string | null
    ipAddress?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastSeenAt?: Date | string | null
    revokedAt?: Date | string | null
    isArchived?: boolean
  }

  export type AppSessionCreateOrConnectWithoutRefreshTokensInput = {
    where: AppSessionWhereUniqueInput
    create: XOR<AppSessionCreateWithoutRefreshTokensInput, AppSessionUncheckedCreateWithoutRefreshTokensInput>
  }

  export type EchoAppUpsertWithoutRefreshTokensInput = {
    update: XOR<EchoAppUpdateWithoutRefreshTokensInput, EchoAppUncheckedUpdateWithoutRefreshTokensInput>
    create: XOR<EchoAppCreateWithoutRefreshTokensInput, EchoAppUncheckedCreateWithoutRefreshTokensInput>
    where?: EchoAppWhereInput
  }

  export type EchoAppUpdateToOneWithWhereWithoutRefreshTokensInput = {
    where?: EchoAppWhereInput
    data: XOR<EchoAppUpdateWithoutRefreshTokensInput, EchoAppUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type EchoAppUpdateWithoutRefreshTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutEchoAppNestedInput
    currentReferralReward?: ReferralRewardUpdateOneWithoutCurrentForAppsNestedInput
    ReferralRewards?: ReferralRewardUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUpdateManyWithoutEchoAppNestedInput
  }

  export type EchoAppUncheckedUpdateWithoutRefreshTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: NullableStringFieldUpdateOperationsInput | string | null
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUncheckedUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUncheckedUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUncheckedUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralRewards?: ReferralRewardUncheckedUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutEchoAppNestedInput
  }

  export type UserUpsertWithoutRefreshTokensInput = {
    update: XOR<UserUpdateWithoutRefreshTokensInput, UserUncheckedUpdateWithoutRefreshTokensInput>
    create: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRefreshTokensInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRefreshTokensInput, UserUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type UserUpdateWithoutRefreshTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    transactions?: TransactionUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutRefreshTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    transactions?: TransactionUncheckedUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type AppSessionUpsertWithoutRefreshTokensInput = {
    update: XOR<AppSessionUpdateWithoutRefreshTokensInput, AppSessionUncheckedUpdateWithoutRefreshTokensInput>
    create: XOR<AppSessionCreateWithoutRefreshTokensInput, AppSessionUncheckedCreateWithoutRefreshTokensInput>
    where?: AppSessionWhereInput
  }

  export type AppSessionUpdateToOneWithWhereWithoutRefreshTokensInput = {
    where?: AppSessionWhereInput
    data: XOR<AppSessionUpdateWithoutRefreshTokensInput, AppSessionUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type AppSessionUpdateWithoutRefreshTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceName?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutAppSessionsNestedInput
    echoApp?: EchoAppUpdateOneRequiredWithoutAppSessionsNestedInput
  }

  export type AppSessionUncheckedUpdateWithoutRefreshTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    deviceName?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UserCreateWithoutAppSessionsInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    transactions?: TransactionCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAppSessionsInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    transactions?: TransactionUncheckedCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAppSessionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAppSessionsInput, UserUncheckedCreateWithoutAppSessionsInput>
  }

  export type EchoAppCreateWithoutAppSessionsInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutEchoAppInput
    currentReferralReward?: ReferralRewardCreateNestedOneWithoutCurrentForAppsInput
    ReferralRewards?: ReferralRewardCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppUncheckedCreateWithoutAppSessionsInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: string | null
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionUncheckedCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpUncheckedCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkUncheckedCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralRewards?: ReferralRewardUncheckedCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppCreateOrConnectWithoutAppSessionsInput = {
    where: EchoAppWhereUniqueInput
    create: XOR<EchoAppCreateWithoutAppSessionsInput, EchoAppUncheckedCreateWithoutAppSessionsInput>
  }

  export type RefreshTokenCreateWithoutSessionInput = {
    id?: string
    token: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    scope?: string
    echoApp: EchoAppCreateNestedOneWithoutRefreshTokensInput
    user: UserCreateNestedOneWithoutRefreshTokensInput
  }

  export type RefreshTokenUncheckedCreateWithoutSessionInput = {
    id?: string
    token: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    echoAppId: string
    scope?: string
  }

  export type RefreshTokenCreateOrConnectWithoutSessionInput = {
    where: RefreshTokenWhereUniqueInput
    create: XOR<RefreshTokenCreateWithoutSessionInput, RefreshTokenUncheckedCreateWithoutSessionInput>
  }

  export type RefreshTokenCreateManySessionInputEnvelope = {
    data: RefreshTokenCreateManySessionInput | RefreshTokenCreateManySessionInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutAppSessionsInput = {
    update: XOR<UserUpdateWithoutAppSessionsInput, UserUncheckedUpdateWithoutAppSessionsInput>
    create: XOR<UserCreateWithoutAppSessionsInput, UserUncheckedCreateWithoutAppSessionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAppSessionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAppSessionsInput, UserUncheckedUpdateWithoutAppSessionsInput>
  }

  export type UserUpdateWithoutAppSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    transactions?: TransactionUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAppSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    transactions?: TransactionUncheckedUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutUserNestedInput
  }

  export type EchoAppUpsertWithoutAppSessionsInput = {
    update: XOR<EchoAppUpdateWithoutAppSessionsInput, EchoAppUncheckedUpdateWithoutAppSessionsInput>
    create: XOR<EchoAppCreateWithoutAppSessionsInput, EchoAppUncheckedCreateWithoutAppSessionsInput>
    where?: EchoAppWhereInput
  }

  export type EchoAppUpdateToOneWithWhereWithoutAppSessionsInput = {
    where?: EchoAppWhereInput
    data: XOR<EchoAppUpdateWithoutAppSessionsInput, EchoAppUncheckedUpdateWithoutAppSessionsInput>
  }

  export type EchoAppUpdateWithoutAppSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutEchoAppNestedInput
    currentReferralReward?: ReferralRewardUpdateOneWithoutCurrentForAppsNestedInput
    ReferralRewards?: ReferralRewardUpdateManyWithoutEchoAppNestedInput
  }

  export type EchoAppUncheckedUpdateWithoutAppSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: NullableStringFieldUpdateOperationsInput | string | null
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUncheckedUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUncheckedUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUncheckedUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralRewards?: ReferralRewardUncheckedUpdateManyWithoutEchoAppNestedInput
  }

  export type RefreshTokenUpsertWithWhereUniqueWithoutSessionInput = {
    where: RefreshTokenWhereUniqueInput
    update: XOR<RefreshTokenUpdateWithoutSessionInput, RefreshTokenUncheckedUpdateWithoutSessionInput>
    create: XOR<RefreshTokenCreateWithoutSessionInput, RefreshTokenUncheckedCreateWithoutSessionInput>
  }

  export type RefreshTokenUpdateWithWhereUniqueWithoutSessionInput = {
    where: RefreshTokenWhereUniqueInput
    data: XOR<RefreshTokenUpdateWithoutSessionInput, RefreshTokenUncheckedUpdateWithoutSessionInput>
  }

  export type RefreshTokenUpdateManyWithWhereWithoutSessionInput = {
    where: RefreshTokenScalarWhereInput
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyWithoutSessionInput>
  }

  export type SpendPoolCreateWithoutPaymentsInput = {
    id?: string
    name: string
    description?: string | null
    totalPaid?: Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: Decimal | DecimalJsLike | number | string | null
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoApp: EchoAppCreateNestedOneWithoutSpendPoolsInput
    Transactions?: TransactionCreateNestedManyWithoutSpendPoolInput
    userUsage?: UserSpendPoolUsageCreateNestedManyWithoutSpendPoolInput
  }

  export type SpendPoolUncheckedCreateWithoutPaymentsInput = {
    id?: string
    name: string
    description?: string | null
    totalPaid?: Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: Decimal | DecimalJsLike | number | string | null
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoAppId: string
    Transactions?: TransactionUncheckedCreateNestedManyWithoutSpendPoolInput
    userUsage?: UserSpendPoolUsageUncheckedCreateNestedManyWithoutSpendPoolInput
  }

  export type SpendPoolCreateOrConnectWithoutPaymentsInput = {
    where: SpendPoolWhereUniqueInput
    create: XOR<SpendPoolCreateWithoutPaymentsInput, SpendPoolUncheckedCreateWithoutPaymentsInput>
  }

  export type UserCreateWithoutPaymentsInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    transactions?: TransactionCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutUserInput
    appSessions?: AppSessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutPaymentsInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    transactions?: TransactionUncheckedCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutUserInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutPaymentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
  }

  export type SpendPoolUpsertWithoutPaymentsInput = {
    update: XOR<SpendPoolUpdateWithoutPaymentsInput, SpendPoolUncheckedUpdateWithoutPaymentsInput>
    create: XOR<SpendPoolCreateWithoutPaymentsInput, SpendPoolUncheckedCreateWithoutPaymentsInput>
    where?: SpendPoolWhereInput
  }

  export type SpendPoolUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: SpendPoolWhereInput
    data: XOR<SpendPoolUpdateWithoutPaymentsInput, SpendPoolUncheckedUpdateWithoutPaymentsInput>
  }

  export type SpendPoolUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoApp?: EchoAppUpdateOneRequiredWithoutSpendPoolsNestedInput
    Transactions?: TransactionUpdateManyWithoutSpendPoolNestedInput
    userUsage?: UserSpendPoolUsageUpdateManyWithoutSpendPoolNestedInput
  }

  export type SpendPoolUncheckedUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    Transactions?: TransactionUncheckedUpdateManyWithoutSpendPoolNestedInput
    userUsage?: UserSpendPoolUsageUncheckedUpdateManyWithoutSpendPoolNestedInput
  }

  export type UserUpsertWithoutPaymentsInput = {
    update: XOR<UserUpdateWithoutPaymentsInput, UserUncheckedUpdateWithoutPaymentsInput>
    create: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPaymentsInput, UserUncheckedUpdateWithoutPaymentsInput>
  }

  export type UserUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    transactions?: TransactionUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    transactions?: TransactionUncheckedUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type EchoAppCreateWithoutMarkUpInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipCreateNestedManyWithoutEchoAppInput
    githubLink?: GithubLinkCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutEchoAppInput
    currentReferralReward?: ReferralRewardCreateNestedOneWithoutCurrentForAppsInput
    ReferralRewards?: ReferralRewardCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppUncheckedCreateWithoutMarkUpInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: string | null
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionUncheckedCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutEchoAppInput
    githubLink?: GithubLinkUncheckedCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralRewards?: ReferralRewardUncheckedCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppCreateOrConnectWithoutMarkUpInput = {
    where: EchoAppWhereUniqueInput
    create: XOR<EchoAppCreateWithoutMarkUpInput, EchoAppUncheckedCreateWithoutMarkUpInput>
  }

  export type TransactionCreateWithoutMarkUpInput = {
    id?: string
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    apiKey?: ApiKeyCreateNestedOneWithoutTransactionsInput
    echoApp: EchoAppCreateNestedOneWithoutTransactionsInput
    githubLink?: GithubLinkCreateNestedOneWithoutTransactionsInput
    spendPool?: SpendPoolCreateNestedOneWithoutTransactionsInput
    transactionMetadata?: TransactionMetadataCreateNestedOneWithoutTransactionsInput
    user: UserCreateNestedOneWithoutTransactionsInput
    userSpendPoolUsage?: UserSpendPoolUsageCreateNestedOneWithoutTransactionsInput
    referralCode?: ReferralCodeCreateNestedOneWithoutTransactionInput
    referrerReward?: ReferralRewardCreateNestedOneWithoutTransactionInput
  }

  export type TransactionUncheckedCreateWithoutMarkUpInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    echoAppId: string
    apiKeyId?: string | null
    githubLinkId?: string | null
    spendPoolId?: string | null
    userSpendPoolUsageId?: string | null
    referralCodeId?: string | null
    referrerRewardId?: string | null
  }

  export type TransactionCreateOrConnectWithoutMarkUpInput = {
    where: TransactionWhereUniqueInput
    create: XOR<TransactionCreateWithoutMarkUpInput, TransactionUncheckedCreateWithoutMarkUpInput>
  }

  export type TransactionCreateManyMarkUpInputEnvelope = {
    data: TransactionCreateManyMarkUpInput | TransactionCreateManyMarkUpInput[]
    skipDuplicates?: boolean
  }

  export type EchoAppUpsertWithoutMarkUpInput = {
    update: XOR<EchoAppUpdateWithoutMarkUpInput, EchoAppUncheckedUpdateWithoutMarkUpInput>
    create: XOR<EchoAppCreateWithoutMarkUpInput, EchoAppUncheckedCreateWithoutMarkUpInput>
    where?: EchoAppWhereInput
  }

  export type EchoAppUpdateToOneWithWhereWithoutMarkUpInput = {
    where?: EchoAppWhereInput
    data: XOR<EchoAppUpdateWithoutMarkUpInput, EchoAppUncheckedUpdateWithoutMarkUpInput>
  }

  export type EchoAppUpdateWithoutMarkUpInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutEchoAppNestedInput
    githubLink?: GithubLinkUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutEchoAppNestedInput
    currentReferralReward?: ReferralRewardUpdateOneWithoutCurrentForAppsNestedInput
    ReferralRewards?: ReferralRewardUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUpdateManyWithoutEchoAppNestedInput
  }

  export type EchoAppUncheckedUpdateWithoutMarkUpInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: NullableStringFieldUpdateOperationsInput | string | null
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUncheckedUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutEchoAppNestedInput
    githubLink?: GithubLinkUncheckedUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralRewards?: ReferralRewardUncheckedUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutEchoAppNestedInput
  }

  export type TransactionUpsertWithWhereUniqueWithoutMarkUpInput = {
    where: TransactionWhereUniqueInput
    update: XOR<TransactionUpdateWithoutMarkUpInput, TransactionUncheckedUpdateWithoutMarkUpInput>
    create: XOR<TransactionCreateWithoutMarkUpInput, TransactionUncheckedCreateWithoutMarkUpInput>
  }

  export type TransactionUpdateWithWhereUniqueWithoutMarkUpInput = {
    where: TransactionWhereUniqueInput
    data: XOR<TransactionUpdateWithoutMarkUpInput, TransactionUncheckedUpdateWithoutMarkUpInput>
  }

  export type TransactionUpdateManyWithWhereWithoutMarkUpInput = {
    where: TransactionScalarWhereInput
    data: XOR<TransactionUpdateManyMutationInput, TransactionUncheckedUpdateManyWithoutMarkUpInput>
  }

  export type EchoAppCreateWithoutGithubLinkInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutEchoAppInput
    currentReferralReward?: ReferralRewardCreateNestedOneWithoutCurrentForAppsInput
    ReferralRewards?: ReferralRewardCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppUncheckedCreateWithoutGithubLinkInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: string | null
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionUncheckedCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpUncheckedCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralRewards?: ReferralRewardUncheckedCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppCreateOrConnectWithoutGithubLinkInput = {
    where: EchoAppWhereUniqueInput
    create: XOR<EchoAppCreateWithoutGithubLinkInput, EchoAppUncheckedCreateWithoutGithubLinkInput>
  }

  export type TransactionCreateWithoutGithubLinkInput = {
    id?: string
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    apiKey?: ApiKeyCreateNestedOneWithoutTransactionsInput
    echoApp: EchoAppCreateNestedOneWithoutTransactionsInput
    markUp?: MarkUpCreateNestedOneWithoutTransactionsInput
    spendPool?: SpendPoolCreateNestedOneWithoutTransactionsInput
    transactionMetadata?: TransactionMetadataCreateNestedOneWithoutTransactionsInput
    user: UserCreateNestedOneWithoutTransactionsInput
    userSpendPoolUsage?: UserSpendPoolUsageCreateNestedOneWithoutTransactionsInput
    referralCode?: ReferralCodeCreateNestedOneWithoutTransactionInput
    referrerReward?: ReferralRewardCreateNestedOneWithoutTransactionInput
  }

  export type TransactionUncheckedCreateWithoutGithubLinkInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    echoAppId: string
    apiKeyId?: string | null
    markUpId?: string | null
    spendPoolId?: string | null
    userSpendPoolUsageId?: string | null
    referralCodeId?: string | null
    referrerRewardId?: string | null
  }

  export type TransactionCreateOrConnectWithoutGithubLinkInput = {
    where: TransactionWhereUniqueInput
    create: XOR<TransactionCreateWithoutGithubLinkInput, TransactionUncheckedCreateWithoutGithubLinkInput>
  }

  export type TransactionCreateManyGithubLinkInputEnvelope = {
    data: TransactionCreateManyGithubLinkInput | TransactionCreateManyGithubLinkInput[]
    skipDuplicates?: boolean
  }

  export type EchoAppUpsertWithoutGithubLinkInput = {
    update: XOR<EchoAppUpdateWithoutGithubLinkInput, EchoAppUncheckedUpdateWithoutGithubLinkInput>
    create: XOR<EchoAppCreateWithoutGithubLinkInput, EchoAppUncheckedCreateWithoutGithubLinkInput>
    where?: EchoAppWhereInput
  }

  export type EchoAppUpdateToOneWithWhereWithoutGithubLinkInput = {
    where?: EchoAppWhereInput
    data: XOR<EchoAppUpdateWithoutGithubLinkInput, EchoAppUncheckedUpdateWithoutGithubLinkInput>
  }

  export type EchoAppUpdateWithoutGithubLinkInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutEchoAppNestedInput
    currentReferralReward?: ReferralRewardUpdateOneWithoutCurrentForAppsNestedInput
    ReferralRewards?: ReferralRewardUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUpdateManyWithoutEchoAppNestedInput
  }

  export type EchoAppUncheckedUpdateWithoutGithubLinkInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: NullableStringFieldUpdateOperationsInput | string | null
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUncheckedUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUncheckedUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralRewards?: ReferralRewardUncheckedUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutEchoAppNestedInput
  }

  export type TransactionUpsertWithWhereUniqueWithoutGithubLinkInput = {
    where: TransactionWhereUniqueInput
    update: XOR<TransactionUpdateWithoutGithubLinkInput, TransactionUncheckedUpdateWithoutGithubLinkInput>
    create: XOR<TransactionCreateWithoutGithubLinkInput, TransactionUncheckedCreateWithoutGithubLinkInput>
  }

  export type TransactionUpdateWithWhereUniqueWithoutGithubLinkInput = {
    where: TransactionWhereUniqueInput
    data: XOR<TransactionUpdateWithoutGithubLinkInput, TransactionUncheckedUpdateWithoutGithubLinkInput>
  }

  export type TransactionUpdateManyWithWhereWithoutGithubLinkInput = {
    where: TransactionScalarWhereInput
    data: XOR<TransactionUpdateManyMutationInput, TransactionUncheckedUpdateManyWithoutGithubLinkInput>
  }

  export type ApiKeyCreateWithoutTransactionsInput = {
    id?: string
    keyHash: string
    name?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    lastUsed?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    scope?: string
    echoApp: EchoAppCreateNestedOneWithoutApiKeysInput
    user: UserCreateNestedOneWithoutApiKeysInput
  }

  export type ApiKeyUncheckedCreateWithoutTransactionsInput = {
    id?: string
    keyHash: string
    name?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    lastUsed?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    echoAppId: string
    scope?: string
  }

  export type ApiKeyCreateOrConnectWithoutTransactionsInput = {
    where: ApiKeyWhereUniqueInput
    create: XOR<ApiKeyCreateWithoutTransactionsInput, ApiKeyUncheckedCreateWithoutTransactionsInput>
  }

  export type EchoAppCreateWithoutTransactionsInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutEchoAppInput
    currentReferralReward?: ReferralRewardCreateNestedOneWithoutCurrentForAppsInput
    ReferralRewards?: ReferralRewardCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppUncheckedCreateWithoutTransactionsInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: string | null
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpUncheckedCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkUncheckedCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralRewards?: ReferralRewardUncheckedCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppCreateOrConnectWithoutTransactionsInput = {
    where: EchoAppWhereUniqueInput
    create: XOR<EchoAppCreateWithoutTransactionsInput, EchoAppUncheckedCreateWithoutTransactionsInput>
  }

  export type GithubLinkCreateWithoutTransactionsInput = {
    id?: string
    githubId: number
    githubType: $Enums.GithubType
    githubUrl: string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoApp: EchoAppCreateNestedOneWithoutGithubLinkInput
  }

  export type GithubLinkUncheckedCreateWithoutTransactionsInput = {
    id?: string
    githubId: number
    githubType: $Enums.GithubType
    githubUrl: string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoAppId: string
  }

  export type GithubLinkCreateOrConnectWithoutTransactionsInput = {
    where: GithubLinkWhereUniqueInput
    create: XOR<GithubLinkCreateWithoutTransactionsInput, GithubLinkUncheckedCreateWithoutTransactionsInput>
  }

  export type MarkUpCreateWithoutTransactionsInput = {
    id?: string
    amount?: Decimal | DecimalJsLike | number | string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoApp: EchoAppCreateNestedOneWithoutMarkUpInput
  }

  export type MarkUpUncheckedCreateWithoutTransactionsInput = {
    id?: string
    amount?: Decimal | DecimalJsLike | number | string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoAppId: string
  }

  export type MarkUpCreateOrConnectWithoutTransactionsInput = {
    where: MarkUpWhereUniqueInput
    create: XOR<MarkUpCreateWithoutTransactionsInput, MarkUpUncheckedCreateWithoutTransactionsInput>
  }

  export type SpendPoolCreateWithoutTransactionsInput = {
    id?: string
    name: string
    description?: string | null
    totalPaid?: Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: Decimal | DecimalJsLike | number | string | null
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    payments?: PaymentCreateNestedManyWithoutSpendPoolInput
    echoApp: EchoAppCreateNestedOneWithoutSpendPoolsInput
    userUsage?: UserSpendPoolUsageCreateNestedManyWithoutSpendPoolInput
  }

  export type SpendPoolUncheckedCreateWithoutTransactionsInput = {
    id?: string
    name: string
    description?: string | null
    totalPaid?: Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: Decimal | DecimalJsLike | number | string | null
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoAppId: string
    payments?: PaymentUncheckedCreateNestedManyWithoutSpendPoolInput
    userUsage?: UserSpendPoolUsageUncheckedCreateNestedManyWithoutSpendPoolInput
  }

  export type SpendPoolCreateOrConnectWithoutTransactionsInput = {
    where: SpendPoolWhereUniqueInput
    create: XOR<SpendPoolCreateWithoutTransactionsInput, SpendPoolUncheckedCreateWithoutTransactionsInput>
  }

  export type TransactionMetadataCreateWithoutTransactionsInput = {
    id?: string
    providerId: string
    provider: string
    model: string
    inputTokens: number
    outputTokens: number
    totalTokens: number
    toolCost?: Decimal | DecimalJsLike | number | string
    prompt?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransactionMetadataUncheckedCreateWithoutTransactionsInput = {
    id?: string
    providerId: string
    provider: string
    model: string
    inputTokens: number
    outputTokens: number
    totalTokens: number
    toolCost?: Decimal | DecimalJsLike | number | string
    prompt?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransactionMetadataCreateOrConnectWithoutTransactionsInput = {
    where: TransactionMetadataWhereUniqueInput
    create: XOR<TransactionMetadataCreateWithoutTransactionsInput, TransactionMetadataUncheckedCreateWithoutTransactionsInput>
  }

  export type UserCreateWithoutTransactionsInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutUserInput
    appSessions?: AppSessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutTransactionsInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutUserInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutTransactionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTransactionsInput, UserUncheckedCreateWithoutTransactionsInput>
  }

  export type UserSpendPoolUsageCreateWithoutTransactionsInput = {
    id?: string
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    spendPool: SpendPoolCreateNestedOneWithoutUserUsageInput
    user: UserCreateNestedOneWithoutSpendPoolUsageInput
  }

  export type UserSpendPoolUsageUncheckedCreateWithoutTransactionsInput = {
    id?: string
    userId: string
    spendPoolId: string
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSpendPoolUsageCreateOrConnectWithoutTransactionsInput = {
    where: UserSpendPoolUsageWhereUniqueInput
    create: XOR<UserSpendPoolUsageCreateWithoutTransactionsInput, UserSpendPoolUsageUncheckedCreateWithoutTransactionsInput>
  }

  export type ReferralCodeCreateWithoutTransactionInput = {
    id?: string
    code: string
    grantType: string
    grantAmount?: Decimal | DecimalJsLike | number | string | null
    reusable?: boolean
    expiresAt: Date | string
    isUsed?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    usedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appMemberships?: AppMembershipCreateNestedManyWithoutReferrerInput
    user?: UserCreateNestedOneWithoutReferralCodeInput
    echoApp?: EchoAppCreateNestedOneWithoutReferralCodeInput
  }

  export type ReferralCodeUncheckedCreateWithoutTransactionInput = {
    id?: string
    code: string
    userId?: string | null
    echoAppId?: string | null
    grantType: string
    grantAmount?: Decimal | DecimalJsLike | number | string | null
    reusable?: boolean
    expiresAt: Date | string
    isUsed?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    usedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutReferrerInput
  }

  export type ReferralCodeCreateOrConnectWithoutTransactionInput = {
    where: ReferralCodeWhereUniqueInput
    create: XOR<ReferralCodeCreateWithoutTransactionInput, ReferralCodeUncheckedCreateWithoutTransactionInput>
  }

  export type ReferralRewardCreateWithoutTransactionInput = {
    id?: string
    amount?: Decimal | DecimalJsLike | number | string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoApp: EchoAppCreateNestedOneWithoutReferralRewardsInput
    currentForApps?: EchoAppCreateNestedManyWithoutCurrentReferralRewardInput
  }

  export type ReferralRewardUncheckedCreateWithoutTransactionInput = {
    id?: string
    amount?: Decimal | DecimalJsLike | number | string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoAppId: string
    currentForApps?: EchoAppUncheckedCreateNestedManyWithoutCurrentReferralRewardInput
  }

  export type ReferralRewardCreateOrConnectWithoutTransactionInput = {
    where: ReferralRewardWhereUniqueInput
    create: XOR<ReferralRewardCreateWithoutTransactionInput, ReferralRewardUncheckedCreateWithoutTransactionInput>
  }

  export type ApiKeyUpsertWithoutTransactionsInput = {
    update: XOR<ApiKeyUpdateWithoutTransactionsInput, ApiKeyUncheckedUpdateWithoutTransactionsInput>
    create: XOR<ApiKeyCreateWithoutTransactionsInput, ApiKeyUncheckedCreateWithoutTransactionsInput>
    where?: ApiKeyWhereInput
  }

  export type ApiKeyUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: ApiKeyWhereInput
    data: XOR<ApiKeyUpdateWithoutTransactionsInput, ApiKeyUncheckedUpdateWithoutTransactionsInput>
  }

  export type ApiKeyUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    keyHash?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    scope?: StringFieldUpdateOperationsInput | string
    echoApp?: EchoAppUpdateOneRequiredWithoutApiKeysNestedInput
    user?: UserUpdateOneRequiredWithoutApiKeysNestedInput
  }

  export type ApiKeyUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    keyHash?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    scope?: StringFieldUpdateOperationsInput | string
  }

  export type EchoAppUpsertWithoutTransactionsInput = {
    update: XOR<EchoAppUpdateWithoutTransactionsInput, EchoAppUncheckedUpdateWithoutTransactionsInput>
    create: XOR<EchoAppCreateWithoutTransactionsInput, EchoAppUncheckedCreateWithoutTransactionsInput>
    where?: EchoAppWhereInput
  }

  export type EchoAppUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: EchoAppWhereInput
    data: XOR<EchoAppUpdateWithoutTransactionsInput, EchoAppUncheckedUpdateWithoutTransactionsInput>
  }

  export type EchoAppUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutEchoAppNestedInput
    currentReferralReward?: ReferralRewardUpdateOneWithoutCurrentForAppsNestedInput
    ReferralRewards?: ReferralRewardUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUpdateManyWithoutEchoAppNestedInput
  }

  export type EchoAppUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: NullableStringFieldUpdateOperationsInput | string | null
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUncheckedUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUncheckedUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralRewards?: ReferralRewardUncheckedUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutEchoAppNestedInput
  }

  export type GithubLinkUpsertWithoutTransactionsInput = {
    update: XOR<GithubLinkUpdateWithoutTransactionsInput, GithubLinkUncheckedUpdateWithoutTransactionsInput>
    create: XOR<GithubLinkCreateWithoutTransactionsInput, GithubLinkUncheckedCreateWithoutTransactionsInput>
    where?: GithubLinkWhereInput
  }

  export type GithubLinkUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: GithubLinkWhereInput
    data: XOR<GithubLinkUpdateWithoutTransactionsInput, GithubLinkUncheckedUpdateWithoutTransactionsInput>
  }

  export type GithubLinkUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    githubId?: IntFieldUpdateOperationsInput | number
    githubType?: EnumGithubTypeFieldUpdateOperationsInput | $Enums.GithubType
    githubUrl?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoApp?: EchoAppUpdateOneRequiredWithoutGithubLinkNestedInput
  }

  export type GithubLinkUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    githubId?: IntFieldUpdateOperationsInput | number
    githubType?: EnumGithubTypeFieldUpdateOperationsInput | $Enums.GithubType
    githubUrl?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
  }

  export type MarkUpUpsertWithoutTransactionsInput = {
    update: XOR<MarkUpUpdateWithoutTransactionsInput, MarkUpUncheckedUpdateWithoutTransactionsInput>
    create: XOR<MarkUpCreateWithoutTransactionsInput, MarkUpUncheckedCreateWithoutTransactionsInput>
    where?: MarkUpWhereInput
  }

  export type MarkUpUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: MarkUpWhereInput
    data: XOR<MarkUpUpdateWithoutTransactionsInput, MarkUpUncheckedUpdateWithoutTransactionsInput>
  }

  export type MarkUpUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoApp?: EchoAppUpdateOneRequiredWithoutMarkUpNestedInput
  }

  export type MarkUpUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
  }

  export type SpendPoolUpsertWithoutTransactionsInput = {
    update: XOR<SpendPoolUpdateWithoutTransactionsInput, SpendPoolUncheckedUpdateWithoutTransactionsInput>
    create: XOR<SpendPoolCreateWithoutTransactionsInput, SpendPoolUncheckedCreateWithoutTransactionsInput>
    where?: SpendPoolWhereInput
  }

  export type SpendPoolUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: SpendPoolWhereInput
    data: XOR<SpendPoolUpdateWithoutTransactionsInput, SpendPoolUncheckedUpdateWithoutTransactionsInput>
  }

  export type SpendPoolUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    payments?: PaymentUpdateManyWithoutSpendPoolNestedInput
    echoApp?: EchoAppUpdateOneRequiredWithoutSpendPoolsNestedInput
    userUsage?: UserSpendPoolUsageUpdateManyWithoutSpendPoolNestedInput
  }

  export type SpendPoolUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    payments?: PaymentUncheckedUpdateManyWithoutSpendPoolNestedInput
    userUsage?: UserSpendPoolUsageUncheckedUpdateManyWithoutSpendPoolNestedInput
  }

  export type TransactionMetadataUpsertWithoutTransactionsInput = {
    update: XOR<TransactionMetadataUpdateWithoutTransactionsInput, TransactionMetadataUncheckedUpdateWithoutTransactionsInput>
    create: XOR<TransactionMetadataCreateWithoutTransactionsInput, TransactionMetadataUncheckedCreateWithoutTransactionsInput>
    where?: TransactionMetadataWhereInput
  }

  export type TransactionMetadataUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: TransactionMetadataWhereInput
    data: XOR<TransactionMetadataUpdateWithoutTransactionsInput, TransactionMetadataUncheckedUpdateWithoutTransactionsInput>
  }

  export type TransactionMetadataUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    inputTokens?: IntFieldUpdateOperationsInput | number
    outputTokens?: IntFieldUpdateOperationsInput | number
    totalTokens?: IntFieldUpdateOperationsInput | number
    toolCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    prompt?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransactionMetadataUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    inputTokens?: IntFieldUpdateOperationsInput | number
    outputTokens?: IntFieldUpdateOperationsInput | number
    totalTokens?: IntFieldUpdateOperationsInput | number
    toolCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    prompt?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpsertWithoutTransactionsInput = {
    update: XOR<UserUpdateWithoutTransactionsInput, UserUncheckedUpdateWithoutTransactionsInput>
    create: XOR<UserCreateWithoutTransactionsInput, UserUncheckedCreateWithoutTransactionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTransactionsInput, UserUncheckedUpdateWithoutTransactionsInput>
  }

  export type UserUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserSpendPoolUsageUpsertWithoutTransactionsInput = {
    update: XOR<UserSpendPoolUsageUpdateWithoutTransactionsInput, UserSpendPoolUsageUncheckedUpdateWithoutTransactionsInput>
    create: XOR<UserSpendPoolUsageCreateWithoutTransactionsInput, UserSpendPoolUsageUncheckedCreateWithoutTransactionsInput>
    where?: UserSpendPoolUsageWhereInput
  }

  export type UserSpendPoolUsageUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: UserSpendPoolUsageWhereInput
    data: XOR<UserSpendPoolUsageUpdateWithoutTransactionsInput, UserSpendPoolUsageUncheckedUpdateWithoutTransactionsInput>
  }

  export type UserSpendPoolUsageUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    spendPool?: SpendPoolUpdateOneRequiredWithoutUserUsageNestedInput
    user?: UserUpdateOneRequiredWithoutSpendPoolUsageNestedInput
  }

  export type UserSpendPoolUsageUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    spendPoolId?: StringFieldUpdateOperationsInput | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReferralCodeUpsertWithoutTransactionInput = {
    update: XOR<ReferralCodeUpdateWithoutTransactionInput, ReferralCodeUncheckedUpdateWithoutTransactionInput>
    create: XOR<ReferralCodeCreateWithoutTransactionInput, ReferralCodeUncheckedCreateWithoutTransactionInput>
    where?: ReferralCodeWhereInput
  }

  export type ReferralCodeUpdateToOneWithWhereWithoutTransactionInput = {
    where?: ReferralCodeWhereInput
    data: XOR<ReferralCodeUpdateWithoutTransactionInput, ReferralCodeUncheckedUpdateWithoutTransactionInput>
  }

  export type ReferralCodeUpdateWithoutTransactionInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    grantType?: StringFieldUpdateOperationsInput | string
    grantAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reusable?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appMemberships?: AppMembershipUpdateManyWithoutReferrerNestedInput
    user?: UserUpdateOneWithoutReferralCodeNestedInput
    echoApp?: EchoAppUpdateOneWithoutReferralCodeNestedInput
  }

  export type ReferralCodeUncheckedUpdateWithoutTransactionInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    echoAppId?: NullableStringFieldUpdateOperationsInput | string | null
    grantType?: StringFieldUpdateOperationsInput | string
    grantAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reusable?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutReferrerNestedInput
  }

  export type ReferralRewardUpsertWithoutTransactionInput = {
    update: XOR<ReferralRewardUpdateWithoutTransactionInput, ReferralRewardUncheckedUpdateWithoutTransactionInput>
    create: XOR<ReferralRewardCreateWithoutTransactionInput, ReferralRewardUncheckedCreateWithoutTransactionInput>
    where?: ReferralRewardWhereInput
  }

  export type ReferralRewardUpdateToOneWithWhereWithoutTransactionInput = {
    where?: ReferralRewardWhereInput
    data: XOR<ReferralRewardUpdateWithoutTransactionInput, ReferralRewardUncheckedUpdateWithoutTransactionInput>
  }

  export type ReferralRewardUpdateWithoutTransactionInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoApp?: EchoAppUpdateOneRequiredWithoutReferralRewardsNestedInput
    currentForApps?: EchoAppUpdateManyWithoutCurrentReferralRewardNestedInput
  }

  export type ReferralRewardUncheckedUpdateWithoutTransactionInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    currentForApps?: EchoAppUncheckedUpdateManyWithoutCurrentReferralRewardNestedInput
  }

  export type PaymentCreateWithoutSpendPoolInput = {
    id?: string
    paymentId: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    status: string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutPaymentsInput
  }

  export type PaymentUncheckedCreateWithoutSpendPoolInput = {
    id?: string
    paymentId: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    status: string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
  }

  export type PaymentCreateOrConnectWithoutSpendPoolInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutSpendPoolInput, PaymentUncheckedCreateWithoutSpendPoolInput>
  }

  export type PaymentCreateManySpendPoolInputEnvelope = {
    data: PaymentCreateManySpendPoolInput | PaymentCreateManySpendPoolInput[]
    skipDuplicates?: boolean
  }

  export type EchoAppCreateWithoutSpendPoolsInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkCreateNestedOneWithoutEchoAppInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutEchoAppInput
    currentReferralReward?: ReferralRewardCreateNestedOneWithoutCurrentForAppsInput
    ReferralRewards?: ReferralRewardCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppUncheckedCreateWithoutSpendPoolsInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: string | null
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionUncheckedCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpUncheckedCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkUncheckedCreateNestedOneWithoutEchoAppInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralRewards?: ReferralRewardUncheckedCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppCreateOrConnectWithoutSpendPoolsInput = {
    where: EchoAppWhereUniqueInput
    create: XOR<EchoAppCreateWithoutSpendPoolsInput, EchoAppUncheckedCreateWithoutSpendPoolsInput>
  }

  export type TransactionCreateWithoutSpendPoolInput = {
    id?: string
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    apiKey?: ApiKeyCreateNestedOneWithoutTransactionsInput
    echoApp: EchoAppCreateNestedOneWithoutTransactionsInput
    githubLink?: GithubLinkCreateNestedOneWithoutTransactionsInput
    markUp?: MarkUpCreateNestedOneWithoutTransactionsInput
    transactionMetadata?: TransactionMetadataCreateNestedOneWithoutTransactionsInput
    user: UserCreateNestedOneWithoutTransactionsInput
    userSpendPoolUsage?: UserSpendPoolUsageCreateNestedOneWithoutTransactionsInput
    referralCode?: ReferralCodeCreateNestedOneWithoutTransactionInput
    referrerReward?: ReferralRewardCreateNestedOneWithoutTransactionInput
  }

  export type TransactionUncheckedCreateWithoutSpendPoolInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    echoAppId: string
    apiKeyId?: string | null
    markUpId?: string | null
    githubLinkId?: string | null
    userSpendPoolUsageId?: string | null
    referralCodeId?: string | null
    referrerRewardId?: string | null
  }

  export type TransactionCreateOrConnectWithoutSpendPoolInput = {
    where: TransactionWhereUniqueInput
    create: XOR<TransactionCreateWithoutSpendPoolInput, TransactionUncheckedCreateWithoutSpendPoolInput>
  }

  export type TransactionCreateManySpendPoolInputEnvelope = {
    data: TransactionCreateManySpendPoolInput | TransactionCreateManySpendPoolInput[]
    skipDuplicates?: boolean
  }

  export type UserSpendPoolUsageCreateWithoutSpendPoolInput = {
    id?: string
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Transactions?: TransactionCreateNestedManyWithoutUserSpendPoolUsageInput
    user: UserCreateNestedOneWithoutSpendPoolUsageInput
  }

  export type UserSpendPoolUsageUncheckedCreateWithoutSpendPoolInput = {
    id?: string
    userId: string
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Transactions?: TransactionUncheckedCreateNestedManyWithoutUserSpendPoolUsageInput
  }

  export type UserSpendPoolUsageCreateOrConnectWithoutSpendPoolInput = {
    where: UserSpendPoolUsageWhereUniqueInput
    create: XOR<UserSpendPoolUsageCreateWithoutSpendPoolInput, UserSpendPoolUsageUncheckedCreateWithoutSpendPoolInput>
  }

  export type UserSpendPoolUsageCreateManySpendPoolInputEnvelope = {
    data: UserSpendPoolUsageCreateManySpendPoolInput | UserSpendPoolUsageCreateManySpendPoolInput[]
    skipDuplicates?: boolean
  }

  export type PaymentUpsertWithWhereUniqueWithoutSpendPoolInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutSpendPoolInput, PaymentUncheckedUpdateWithoutSpendPoolInput>
    create: XOR<PaymentCreateWithoutSpendPoolInput, PaymentUncheckedCreateWithoutSpendPoolInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutSpendPoolInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutSpendPoolInput, PaymentUncheckedUpdateWithoutSpendPoolInput>
  }

  export type PaymentUpdateManyWithWhereWithoutSpendPoolInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutSpendPoolInput>
  }

  export type EchoAppUpsertWithoutSpendPoolsInput = {
    update: XOR<EchoAppUpdateWithoutSpendPoolsInput, EchoAppUncheckedUpdateWithoutSpendPoolsInput>
    create: XOR<EchoAppCreateWithoutSpendPoolsInput, EchoAppUncheckedCreateWithoutSpendPoolsInput>
    where?: EchoAppWhereInput
  }

  export type EchoAppUpdateToOneWithWhereWithoutSpendPoolsInput = {
    where?: EchoAppWhereInput
    data: XOR<EchoAppUpdateWithoutSpendPoolsInput, EchoAppUncheckedUpdateWithoutSpendPoolsInput>
  }

  export type EchoAppUpdateWithoutSpendPoolsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUpdateOneWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutEchoAppNestedInput
    currentReferralReward?: ReferralRewardUpdateOneWithoutCurrentForAppsNestedInput
    ReferralRewards?: ReferralRewardUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUpdateManyWithoutEchoAppNestedInput
  }

  export type EchoAppUncheckedUpdateWithoutSpendPoolsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: NullableStringFieldUpdateOperationsInput | string | null
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUncheckedUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUncheckedUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUncheckedUpdateOneWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralRewards?: ReferralRewardUncheckedUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutEchoAppNestedInput
  }

  export type TransactionUpsertWithWhereUniqueWithoutSpendPoolInput = {
    where: TransactionWhereUniqueInput
    update: XOR<TransactionUpdateWithoutSpendPoolInput, TransactionUncheckedUpdateWithoutSpendPoolInput>
    create: XOR<TransactionCreateWithoutSpendPoolInput, TransactionUncheckedCreateWithoutSpendPoolInput>
  }

  export type TransactionUpdateWithWhereUniqueWithoutSpendPoolInput = {
    where: TransactionWhereUniqueInput
    data: XOR<TransactionUpdateWithoutSpendPoolInput, TransactionUncheckedUpdateWithoutSpendPoolInput>
  }

  export type TransactionUpdateManyWithWhereWithoutSpendPoolInput = {
    where: TransactionScalarWhereInput
    data: XOR<TransactionUpdateManyMutationInput, TransactionUncheckedUpdateManyWithoutSpendPoolInput>
  }

  export type UserSpendPoolUsageUpsertWithWhereUniqueWithoutSpendPoolInput = {
    where: UserSpendPoolUsageWhereUniqueInput
    update: XOR<UserSpendPoolUsageUpdateWithoutSpendPoolInput, UserSpendPoolUsageUncheckedUpdateWithoutSpendPoolInput>
    create: XOR<UserSpendPoolUsageCreateWithoutSpendPoolInput, UserSpendPoolUsageUncheckedCreateWithoutSpendPoolInput>
  }

  export type UserSpendPoolUsageUpdateWithWhereUniqueWithoutSpendPoolInput = {
    where: UserSpendPoolUsageWhereUniqueInput
    data: XOR<UserSpendPoolUsageUpdateWithoutSpendPoolInput, UserSpendPoolUsageUncheckedUpdateWithoutSpendPoolInput>
  }

  export type UserSpendPoolUsageUpdateManyWithWhereWithoutSpendPoolInput = {
    where: UserSpendPoolUsageScalarWhereInput
    data: XOR<UserSpendPoolUsageUpdateManyMutationInput, UserSpendPoolUsageUncheckedUpdateManyWithoutSpendPoolInput>
  }

  export type TransactionCreateWithoutUserSpendPoolUsageInput = {
    id?: string
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    apiKey?: ApiKeyCreateNestedOneWithoutTransactionsInput
    echoApp: EchoAppCreateNestedOneWithoutTransactionsInput
    githubLink?: GithubLinkCreateNestedOneWithoutTransactionsInput
    markUp?: MarkUpCreateNestedOneWithoutTransactionsInput
    spendPool?: SpendPoolCreateNestedOneWithoutTransactionsInput
    transactionMetadata?: TransactionMetadataCreateNestedOneWithoutTransactionsInput
    user: UserCreateNestedOneWithoutTransactionsInput
    referralCode?: ReferralCodeCreateNestedOneWithoutTransactionInput
    referrerReward?: ReferralRewardCreateNestedOneWithoutTransactionInput
  }

  export type TransactionUncheckedCreateWithoutUserSpendPoolUsageInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    echoAppId: string
    apiKeyId?: string | null
    markUpId?: string | null
    githubLinkId?: string | null
    spendPoolId?: string | null
    referralCodeId?: string | null
    referrerRewardId?: string | null
  }

  export type TransactionCreateOrConnectWithoutUserSpendPoolUsageInput = {
    where: TransactionWhereUniqueInput
    create: XOR<TransactionCreateWithoutUserSpendPoolUsageInput, TransactionUncheckedCreateWithoutUserSpendPoolUsageInput>
  }

  export type TransactionCreateManyUserSpendPoolUsageInputEnvelope = {
    data: TransactionCreateManyUserSpendPoolUsageInput | TransactionCreateManyUserSpendPoolUsageInput[]
    skipDuplicates?: boolean
  }

  export type SpendPoolCreateWithoutUserUsageInput = {
    id?: string
    name: string
    description?: string | null
    totalPaid?: Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: Decimal | DecimalJsLike | number | string | null
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    payments?: PaymentCreateNestedManyWithoutSpendPoolInput
    echoApp: EchoAppCreateNestedOneWithoutSpendPoolsInput
    Transactions?: TransactionCreateNestedManyWithoutSpendPoolInput
  }

  export type SpendPoolUncheckedCreateWithoutUserUsageInput = {
    id?: string
    name: string
    description?: string | null
    totalPaid?: Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: Decimal | DecimalJsLike | number | string | null
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    echoAppId: string
    payments?: PaymentUncheckedCreateNestedManyWithoutSpendPoolInput
    Transactions?: TransactionUncheckedCreateNestedManyWithoutSpendPoolInput
  }

  export type SpendPoolCreateOrConnectWithoutUserUsageInput = {
    where: SpendPoolWhereUniqueInput
    create: XOR<SpendPoolCreateWithoutUserUsageInput, SpendPoolUncheckedCreateWithoutUserUsageInput>
  }

  export type UserCreateWithoutSpendPoolUsageInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    transactions?: TransactionCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutUserInput
    appSessions?: AppSessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSpendPoolUsageInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    transactions?: TransactionUncheckedCreateNestedManyWithoutUserInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutUserInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSpendPoolUsageInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSpendPoolUsageInput, UserUncheckedCreateWithoutSpendPoolUsageInput>
  }

  export type TransactionUpsertWithWhereUniqueWithoutUserSpendPoolUsageInput = {
    where: TransactionWhereUniqueInput
    update: XOR<TransactionUpdateWithoutUserSpendPoolUsageInput, TransactionUncheckedUpdateWithoutUserSpendPoolUsageInput>
    create: XOR<TransactionCreateWithoutUserSpendPoolUsageInput, TransactionUncheckedCreateWithoutUserSpendPoolUsageInput>
  }

  export type TransactionUpdateWithWhereUniqueWithoutUserSpendPoolUsageInput = {
    where: TransactionWhereUniqueInput
    data: XOR<TransactionUpdateWithoutUserSpendPoolUsageInput, TransactionUncheckedUpdateWithoutUserSpendPoolUsageInput>
  }

  export type TransactionUpdateManyWithWhereWithoutUserSpendPoolUsageInput = {
    where: TransactionScalarWhereInput
    data: XOR<TransactionUpdateManyMutationInput, TransactionUncheckedUpdateManyWithoutUserSpendPoolUsageInput>
  }

  export type SpendPoolUpsertWithoutUserUsageInput = {
    update: XOR<SpendPoolUpdateWithoutUserUsageInput, SpendPoolUncheckedUpdateWithoutUserUsageInput>
    create: XOR<SpendPoolCreateWithoutUserUsageInput, SpendPoolUncheckedCreateWithoutUserUsageInput>
    where?: SpendPoolWhereInput
  }

  export type SpendPoolUpdateToOneWithWhereWithoutUserUsageInput = {
    where?: SpendPoolWhereInput
    data: XOR<SpendPoolUpdateWithoutUserUsageInput, SpendPoolUncheckedUpdateWithoutUserUsageInput>
  }

  export type SpendPoolUpdateWithoutUserUsageInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    payments?: PaymentUpdateManyWithoutSpendPoolNestedInput
    echoApp?: EchoAppUpdateOneRequiredWithoutSpendPoolsNestedInput
    Transactions?: TransactionUpdateManyWithoutSpendPoolNestedInput
  }

  export type SpendPoolUncheckedUpdateWithoutUserUsageInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    payments?: PaymentUncheckedUpdateManyWithoutSpendPoolNestedInput
    Transactions?: TransactionUncheckedUpdateManyWithoutSpendPoolNestedInput
  }

  export type UserUpsertWithoutSpendPoolUsageInput = {
    update: XOR<UserUpdateWithoutSpendPoolUsageInput, UserUncheckedUpdateWithoutSpendPoolUsageInput>
    create: XOR<UserCreateWithoutSpendPoolUsageInput, UserUncheckedCreateWithoutSpendPoolUsageInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSpendPoolUsageInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSpendPoolUsageInput, UserUncheckedUpdateWithoutSpendPoolUsageInput>
  }

  export type UserUpdateWithoutSpendPoolUsageInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    transactions?: TransactionUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSpendPoolUsageInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    transactions?: TransactionUncheckedUpdateManyWithoutUserNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type TransactionCreateWithoutTransactionMetadataInput = {
    id?: string
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    apiKey?: ApiKeyCreateNestedOneWithoutTransactionsInput
    echoApp: EchoAppCreateNestedOneWithoutTransactionsInput
    githubLink?: GithubLinkCreateNestedOneWithoutTransactionsInput
    markUp?: MarkUpCreateNestedOneWithoutTransactionsInput
    spendPool?: SpendPoolCreateNestedOneWithoutTransactionsInput
    user: UserCreateNestedOneWithoutTransactionsInput
    userSpendPoolUsage?: UserSpendPoolUsageCreateNestedOneWithoutTransactionsInput
    referralCode?: ReferralCodeCreateNestedOneWithoutTransactionInput
    referrerReward?: ReferralRewardCreateNestedOneWithoutTransactionInput
  }

  export type TransactionUncheckedCreateWithoutTransactionMetadataInput = {
    id?: string
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    echoAppId: string
    apiKeyId?: string | null
    markUpId?: string | null
    githubLinkId?: string | null
    spendPoolId?: string | null
    userSpendPoolUsageId?: string | null
    referralCodeId?: string | null
    referrerRewardId?: string | null
  }

  export type TransactionCreateOrConnectWithoutTransactionMetadataInput = {
    where: TransactionWhereUniqueInput
    create: XOR<TransactionCreateWithoutTransactionMetadataInput, TransactionUncheckedCreateWithoutTransactionMetadataInput>
  }

  export type TransactionCreateManyTransactionMetadataInputEnvelope = {
    data: TransactionCreateManyTransactionMetadataInput | TransactionCreateManyTransactionMetadataInput[]
    skipDuplicates?: boolean
  }

  export type TransactionUpsertWithWhereUniqueWithoutTransactionMetadataInput = {
    where: TransactionWhereUniqueInput
    update: XOR<TransactionUpdateWithoutTransactionMetadataInput, TransactionUncheckedUpdateWithoutTransactionMetadataInput>
    create: XOR<TransactionCreateWithoutTransactionMetadataInput, TransactionUncheckedCreateWithoutTransactionMetadataInput>
  }

  export type TransactionUpdateWithWhereUniqueWithoutTransactionMetadataInput = {
    where: TransactionWhereUniqueInput
    data: XOR<TransactionUpdateWithoutTransactionMetadataInput, TransactionUncheckedUpdateWithoutTransactionMetadataInput>
  }

  export type TransactionUpdateManyWithWhereWithoutTransactionMetadataInput = {
    where: TransactionScalarWhereInput
    data: XOR<TransactionUpdateManyMutationInput, TransactionUncheckedUpdateManyWithoutTransactionMetadataInput>
  }

  export type AppMembershipCreateWithoutReferrerInput = {
    id?: string
    role: string
    status?: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalSpent: Decimal | DecimalJsLike | number | string
    amountSpent?: Decimal | DecimalJsLike | number | string
    echoApp: EchoAppCreateNestedOneWithoutAppMembershipsInput
    user: UserCreateNestedOneWithoutAppMembershipsInput
  }

  export type AppMembershipUncheckedCreateWithoutReferrerInput = {
    id?: string
    userId: string
    echoAppId: string
    role: string
    status?: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalSpent: Decimal | DecimalJsLike | number | string
    amountSpent?: Decimal | DecimalJsLike | number | string
  }

  export type AppMembershipCreateOrConnectWithoutReferrerInput = {
    where: AppMembershipWhereUniqueInput
    create: XOR<AppMembershipCreateWithoutReferrerInput, AppMembershipUncheckedCreateWithoutReferrerInput>
  }

  export type AppMembershipCreateManyReferrerInputEnvelope = {
    data: AppMembershipCreateManyReferrerInput | AppMembershipCreateManyReferrerInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutReferralCodeInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    transactions?: TransactionCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageCreateNestedManyWithoutUserInput
    appSessions?: AppSessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutReferralCodeInput = {
    id?: string
    email: string
    name?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalPaid?: Decimal | DecimalJsLike | number | string
    totalSpent?: Decimal | DecimalJsLike | number | string
    admin?: boolean
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    transactions?: TransactionUncheckedCreateNestedManyWithoutUserInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedCreateNestedManyWithoutUserInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutReferralCodeInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReferralCodeInput, UserUncheckedCreateWithoutReferralCodeInput>
  }

  export type EchoAppCreateWithoutReferralCodeInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolCreateNestedManyWithoutEchoAppInput
    currentReferralReward?: ReferralRewardCreateNestedOneWithoutCurrentForAppsInput
    ReferralRewards?: ReferralRewardCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppUncheckedCreateWithoutReferralCodeInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: string | null
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionUncheckedCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpUncheckedCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkUncheckedCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralRewards?: ReferralRewardUncheckedCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppCreateOrConnectWithoutReferralCodeInput = {
    where: EchoAppWhereUniqueInput
    create: XOR<EchoAppCreateWithoutReferralCodeInput, EchoAppUncheckedCreateWithoutReferralCodeInput>
  }

  export type TransactionCreateWithoutReferralCodeInput = {
    id?: string
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    apiKey?: ApiKeyCreateNestedOneWithoutTransactionsInput
    echoApp: EchoAppCreateNestedOneWithoutTransactionsInput
    githubLink?: GithubLinkCreateNestedOneWithoutTransactionsInput
    markUp?: MarkUpCreateNestedOneWithoutTransactionsInput
    spendPool?: SpendPoolCreateNestedOneWithoutTransactionsInput
    transactionMetadata?: TransactionMetadataCreateNestedOneWithoutTransactionsInput
    user: UserCreateNestedOneWithoutTransactionsInput
    userSpendPoolUsage?: UserSpendPoolUsageCreateNestedOneWithoutTransactionsInput
    referrerReward?: ReferralRewardCreateNestedOneWithoutTransactionInput
  }

  export type TransactionUncheckedCreateWithoutReferralCodeInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    echoAppId: string
    apiKeyId?: string | null
    markUpId?: string | null
    githubLinkId?: string | null
    spendPoolId?: string | null
    userSpendPoolUsageId?: string | null
    referrerRewardId?: string | null
  }

  export type TransactionCreateOrConnectWithoutReferralCodeInput = {
    where: TransactionWhereUniqueInput
    create: XOR<TransactionCreateWithoutReferralCodeInput, TransactionUncheckedCreateWithoutReferralCodeInput>
  }

  export type TransactionCreateManyReferralCodeInputEnvelope = {
    data: TransactionCreateManyReferralCodeInput | TransactionCreateManyReferralCodeInput[]
    skipDuplicates?: boolean
  }

  export type AppMembershipUpsertWithWhereUniqueWithoutReferrerInput = {
    where: AppMembershipWhereUniqueInput
    update: XOR<AppMembershipUpdateWithoutReferrerInput, AppMembershipUncheckedUpdateWithoutReferrerInput>
    create: XOR<AppMembershipCreateWithoutReferrerInput, AppMembershipUncheckedCreateWithoutReferrerInput>
  }

  export type AppMembershipUpdateWithWhereUniqueWithoutReferrerInput = {
    where: AppMembershipWhereUniqueInput
    data: XOR<AppMembershipUpdateWithoutReferrerInput, AppMembershipUncheckedUpdateWithoutReferrerInput>
  }

  export type AppMembershipUpdateManyWithWhereWithoutReferrerInput = {
    where: AppMembershipScalarWhereInput
    data: XOR<AppMembershipUpdateManyMutationInput, AppMembershipUncheckedUpdateManyWithoutReferrerInput>
  }

  export type UserUpsertWithoutReferralCodeInput = {
    update: XOR<UserUpdateWithoutReferralCodeInput, UserUncheckedUpdateWithoutReferralCodeInput>
    create: XOR<UserCreateWithoutReferralCodeInput, UserUncheckedCreateWithoutReferralCodeInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReferralCodeInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReferralCodeInput, UserUncheckedUpdateWithoutReferralCodeInput>
  }

  export type UserUpdateWithoutReferralCodeInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    transactions?: TransactionUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutReferralCodeInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    transactions?: TransactionUncheckedUpdateManyWithoutUserNestedInput
    spendPoolUsage?: UserSpendPoolUsageUncheckedUpdateManyWithoutUserNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type EchoAppUpsertWithoutReferralCodeInput = {
    update: XOR<EchoAppUpdateWithoutReferralCodeInput, EchoAppUncheckedUpdateWithoutReferralCodeInput>
    create: XOR<EchoAppCreateWithoutReferralCodeInput, EchoAppUncheckedCreateWithoutReferralCodeInput>
    where?: EchoAppWhereInput
  }

  export type EchoAppUpdateToOneWithWhereWithoutReferralCodeInput = {
    where?: EchoAppWhereInput
    data: XOR<EchoAppUpdateWithoutReferralCodeInput, EchoAppUncheckedUpdateWithoutReferralCodeInput>
  }

  export type EchoAppUpdateWithoutReferralCodeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUpdateManyWithoutEchoAppNestedInput
    currentReferralReward?: ReferralRewardUpdateOneWithoutCurrentForAppsNestedInput
    ReferralRewards?: ReferralRewardUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUpdateManyWithoutEchoAppNestedInput
  }

  export type EchoAppUncheckedUpdateWithoutReferralCodeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: NullableStringFieldUpdateOperationsInput | string | null
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUncheckedUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUncheckedUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUncheckedUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralRewards?: ReferralRewardUncheckedUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutEchoAppNestedInput
  }

  export type TransactionUpsertWithWhereUniqueWithoutReferralCodeInput = {
    where: TransactionWhereUniqueInput
    update: XOR<TransactionUpdateWithoutReferralCodeInput, TransactionUncheckedUpdateWithoutReferralCodeInput>
    create: XOR<TransactionCreateWithoutReferralCodeInput, TransactionUncheckedCreateWithoutReferralCodeInput>
  }

  export type TransactionUpdateWithWhereUniqueWithoutReferralCodeInput = {
    where: TransactionWhereUniqueInput
    data: XOR<TransactionUpdateWithoutReferralCodeInput, TransactionUncheckedUpdateWithoutReferralCodeInput>
  }

  export type TransactionUpdateManyWithWhereWithoutReferralCodeInput = {
    where: TransactionScalarWhereInput
    data: XOR<TransactionUpdateManyMutationInput, TransactionUncheckedUpdateManyWithoutReferralCodeInput>
  }

  export type EchoAppCreateWithoutReferralRewardsInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutEchoAppInput
    currentReferralReward?: ReferralRewardCreateNestedOneWithoutCurrentForAppsInput
    appSessions?: AppSessionCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppUncheckedCreateWithoutReferralRewardsInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: string | null
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionUncheckedCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpUncheckedCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkUncheckedCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppCreateOrConnectWithoutReferralRewardsInput = {
    where: EchoAppWhereUniqueInput
    create: XOR<EchoAppCreateWithoutReferralRewardsInput, EchoAppUncheckedCreateWithoutReferralRewardsInput>
  }

  export type EchoAppCreateWithoutCurrentReferralRewardInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeCreateNestedManyWithoutEchoAppInput
    ReferralRewards?: ReferralRewardCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppUncheckedCreateWithoutCurrentReferralRewardInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutEchoAppInput
    Transactions?: TransactionUncheckedCreateNestedManyWithoutEchoAppInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutEchoAppInput
    appMemberships?: AppMembershipUncheckedCreateNestedManyWithoutEchoAppInput
    markUp?: MarkUpUncheckedCreateNestedOneWithoutEchoAppInput
    githubLink?: GithubLinkUncheckedCreateNestedOneWithoutEchoAppInput
    spendPools?: SpendPoolUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralCode?: ReferralCodeUncheckedCreateNestedManyWithoutEchoAppInput
    ReferralRewards?: ReferralRewardUncheckedCreateNestedManyWithoutEchoAppInput
    appSessions?: AppSessionUncheckedCreateNestedManyWithoutEchoAppInput
  }

  export type EchoAppCreateOrConnectWithoutCurrentReferralRewardInput = {
    where: EchoAppWhereUniqueInput
    create: XOR<EchoAppCreateWithoutCurrentReferralRewardInput, EchoAppUncheckedCreateWithoutCurrentReferralRewardInput>
  }

  export type EchoAppCreateManyCurrentReferralRewardInputEnvelope = {
    data: EchoAppCreateManyCurrentReferralRewardInput | EchoAppCreateManyCurrentReferralRewardInput[]
    skipDuplicates?: boolean
  }

  export type TransactionCreateWithoutReferrerRewardInput = {
    id?: string
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    apiKey?: ApiKeyCreateNestedOneWithoutTransactionsInput
    echoApp: EchoAppCreateNestedOneWithoutTransactionsInput
    githubLink?: GithubLinkCreateNestedOneWithoutTransactionsInput
    markUp?: MarkUpCreateNestedOneWithoutTransactionsInput
    spendPool?: SpendPoolCreateNestedOneWithoutTransactionsInput
    transactionMetadata?: TransactionMetadataCreateNestedOneWithoutTransactionsInput
    user: UserCreateNestedOneWithoutTransactionsInput
    userSpendPoolUsage?: UserSpendPoolUsageCreateNestedOneWithoutTransactionsInput
    referralCode?: ReferralCodeCreateNestedOneWithoutTransactionInput
  }

  export type TransactionUncheckedCreateWithoutReferrerRewardInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    echoAppId: string
    apiKeyId?: string | null
    markUpId?: string | null
    githubLinkId?: string | null
    spendPoolId?: string | null
    userSpendPoolUsageId?: string | null
    referralCodeId?: string | null
  }

  export type TransactionCreateOrConnectWithoutReferrerRewardInput = {
    where: TransactionWhereUniqueInput
    create: XOR<TransactionCreateWithoutReferrerRewardInput, TransactionUncheckedCreateWithoutReferrerRewardInput>
  }

  export type TransactionCreateManyReferrerRewardInputEnvelope = {
    data: TransactionCreateManyReferrerRewardInput | TransactionCreateManyReferrerRewardInput[]
    skipDuplicates?: boolean
  }

  export type EchoAppUpsertWithoutReferralRewardsInput = {
    update: XOR<EchoAppUpdateWithoutReferralRewardsInput, EchoAppUncheckedUpdateWithoutReferralRewardsInput>
    create: XOR<EchoAppCreateWithoutReferralRewardsInput, EchoAppUncheckedCreateWithoutReferralRewardsInput>
    where?: EchoAppWhereInput
  }

  export type EchoAppUpdateToOneWithWhereWithoutReferralRewardsInput = {
    where?: EchoAppWhereInput
    data: XOR<EchoAppUpdateWithoutReferralRewardsInput, EchoAppUncheckedUpdateWithoutReferralRewardsInput>
  }

  export type EchoAppUpdateWithoutReferralRewardsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutEchoAppNestedInput
    currentReferralReward?: ReferralRewardUpdateOneWithoutCurrentForAppsNestedInput
    appSessions?: AppSessionUpdateManyWithoutEchoAppNestedInput
  }

  export type EchoAppUncheckedUpdateWithoutReferralRewardsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    currentReferralRewardId?: NullableStringFieldUpdateOperationsInput | string | null
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUncheckedUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUncheckedUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUncheckedUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutEchoAppNestedInput
  }

  export type EchoAppUpsertWithWhereUniqueWithoutCurrentReferralRewardInput = {
    where: EchoAppWhereUniqueInput
    update: XOR<EchoAppUpdateWithoutCurrentReferralRewardInput, EchoAppUncheckedUpdateWithoutCurrentReferralRewardInput>
    create: XOR<EchoAppCreateWithoutCurrentReferralRewardInput, EchoAppUncheckedCreateWithoutCurrentReferralRewardInput>
  }

  export type EchoAppUpdateWithWhereUniqueWithoutCurrentReferralRewardInput = {
    where: EchoAppWhereUniqueInput
    data: XOR<EchoAppUpdateWithoutCurrentReferralRewardInput, EchoAppUncheckedUpdateWithoutCurrentReferralRewardInput>
  }

  export type EchoAppUpdateManyWithWhereWithoutCurrentReferralRewardInput = {
    where: EchoAppScalarWhereInput
    data: XOR<EchoAppUpdateManyMutationInput, EchoAppUncheckedUpdateManyWithoutCurrentReferralRewardInput>
  }

  export type EchoAppScalarWhereInput = {
    AND?: EchoAppScalarWhereInput | EchoAppScalarWhereInput[]
    OR?: EchoAppScalarWhereInput[]
    NOT?: EchoAppScalarWhereInput | EchoAppScalarWhereInput[]
    id?: UuidFilter<"EchoApp"> | string
    name?: StringFilter<"EchoApp"> | string
    description?: StringNullableFilter<"EchoApp"> | string | null
    profilePictureUrl?: StringNullableFilter<"EchoApp"> | string | null
    bannerImageUrl?: StringNullableFilter<"EchoApp"> | string | null
    homepageUrl?: StringNullableFilter<"EchoApp"> | string | null
    isPublic?: BoolFilter<"EchoApp"> | boolean
    isArchived?: BoolFilter<"EchoApp"> | boolean
    archivedAt?: DateTimeNullableFilter<"EchoApp"> | Date | string | null
    createdAt?: DateTimeFilter<"EchoApp"> | Date | string
    updatedAt?: DateTimeFilter<"EchoApp"> | Date | string
    authorizedCallbackUrls?: StringNullableListFilter<"EchoApp">
    currentReferralRewardId?: UuidNullableFilter<"EchoApp"> | string | null
  }

  export type TransactionUpsertWithWhereUniqueWithoutReferrerRewardInput = {
    where: TransactionWhereUniqueInput
    update: XOR<TransactionUpdateWithoutReferrerRewardInput, TransactionUncheckedUpdateWithoutReferrerRewardInput>
    create: XOR<TransactionCreateWithoutReferrerRewardInput, TransactionUncheckedCreateWithoutReferrerRewardInput>
  }

  export type TransactionUpdateWithWhereUniqueWithoutReferrerRewardInput = {
    where: TransactionWhereUniqueInput
    data: XOR<TransactionUpdateWithoutReferrerRewardInput, TransactionUncheckedUpdateWithoutReferrerRewardInput>
  }

  export type TransactionUpdateManyWithWhereWithoutReferrerRewardInput = {
    where: TransactionScalarWhereInput
    data: XOR<TransactionUpdateManyMutationInput, TransactionUncheckedUpdateManyWithoutReferrerRewardInput>
  }

  export type AccountCreateManyUserInput = {
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionCreateManyUserInput = {
    sessionToken: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApiKeyCreateManyUserInput = {
    id?: string
    keyHash: string
    name?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    lastUsed?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    echoAppId: string
    scope?: string
  }

  export type AppMembershipCreateManyUserInput = {
    id?: string
    echoAppId: string
    role: string
    status?: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalSpent: Decimal | DecimalJsLike | number | string
    amountSpent?: Decimal | DecimalJsLike | number | string
    referrerId?: string | null
  }

  export type PaymentCreateManyUserInput = {
    id?: string
    paymentId: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    status: string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    spendPoolId?: string | null
  }

  export type RefreshTokenCreateManyUserInput = {
    id?: string
    token: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    echoAppId: string
    scope?: string
    sessionId?: string | null
  }

  export type TransactionCreateManyUserInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    echoAppId: string
    apiKeyId?: string | null
    markUpId?: string | null
    githubLinkId?: string | null
    spendPoolId?: string | null
    userSpendPoolUsageId?: string | null
    referralCodeId?: string | null
    referrerRewardId?: string | null
  }

  export type UserSpendPoolUsageCreateManyUserInput = {
    id?: string
    spendPoolId: string
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReferralCodeCreateManyUserInput = {
    id?: string
    code: string
    echoAppId?: string | null
    grantType: string
    grantAmount?: Decimal | DecimalJsLike | number | string | null
    reusable?: boolean
    expiresAt: Date | string
    isUsed?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    usedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AppSessionCreateManyUserInput = {
    id?: string
    echoAppId: string
    deviceName?: string | null
    userAgent?: string | null
    ipAddress?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastSeenAt?: Date | string | null
    revokedAt?: Date | string | null
    isArchived?: boolean
  }

  export type AccountUpdateWithoutUserInput = {
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountUncheckedUpdateWithoutUserInput = {
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountUncheckedUpdateManyWithoutUserInput = {
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUpdateWithoutUserInput = {
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateWithoutUserInput = {
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyWithoutUserInput = {
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApiKeyUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    keyHash?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    scope?: StringFieldUpdateOperationsInput | string
    echoApp?: EchoAppUpdateOneRequiredWithoutApiKeysNestedInput
    Transactions?: TransactionUpdateManyWithoutApiKeyNestedInput
  }

  export type ApiKeyUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    keyHash?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    scope?: StringFieldUpdateOperationsInput | string
    Transactions?: TransactionUncheckedUpdateManyWithoutApiKeyNestedInput
  }

  export type ApiKeyUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    keyHash?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    scope?: StringFieldUpdateOperationsInput | string
  }

  export type AppMembershipUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amountSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referrer?: ReferralCodeUpdateOneWithoutAppMembershipsNestedInput
    echoApp?: EchoAppUpdateOneRequiredWithoutAppMembershipsNestedInput
  }

  export type AppMembershipUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amountSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AppMembershipUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amountSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    spendPool?: SpendPoolUpdateOneWithoutPaymentsNestedInput
  }

  export type PaymentUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RefreshTokenUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    scope?: StringFieldUpdateOperationsInput | string
    echoApp?: EchoAppUpdateOneRequiredWithoutRefreshTokensNestedInput
    session?: AppSessionUpdateOneWithoutRefreshTokensNestedInput
  }

  export type RefreshTokenUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    scope?: StringFieldUpdateOperationsInput | string
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RefreshTokenUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    scope?: StringFieldUpdateOperationsInput | string
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    apiKey?: ApiKeyUpdateOneWithoutTransactionsNestedInput
    echoApp?: EchoAppUpdateOneRequiredWithoutTransactionsNestedInput
    githubLink?: GithubLinkUpdateOneWithoutTransactionsNestedInput
    markUp?: MarkUpUpdateOneWithoutTransactionsNestedInput
    spendPool?: SpendPoolUpdateOneWithoutTransactionsNestedInput
    transactionMetadata?: TransactionMetadataUpdateOneWithoutTransactionsNestedInput
    userSpendPoolUsage?: UserSpendPoolUsageUpdateOneWithoutTransactionsNestedInput
    referralCode?: ReferralCodeUpdateOneWithoutTransactionNestedInput
    referrerReward?: ReferralRewardUpdateOneWithoutTransactionNestedInput
  }

  export type TransactionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserSpendPoolUsageUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Transactions?: TransactionUpdateManyWithoutUserSpendPoolUsageNestedInput
    spendPool?: SpendPoolUpdateOneRequiredWithoutUserUsageNestedInput
  }

  export type UserSpendPoolUsageUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    spendPoolId?: StringFieldUpdateOperationsInput | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Transactions?: TransactionUncheckedUpdateManyWithoutUserSpendPoolUsageNestedInput
  }

  export type UserSpendPoolUsageUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    spendPoolId?: StringFieldUpdateOperationsInput | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReferralCodeUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    grantType?: StringFieldUpdateOperationsInput | string
    grantAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reusable?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appMemberships?: AppMembershipUpdateManyWithoutReferrerNestedInput
    echoApp?: EchoAppUpdateOneWithoutReferralCodeNestedInput
    Transaction?: TransactionUpdateManyWithoutReferralCodeNestedInput
  }

  export type ReferralCodeUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    echoAppId?: NullableStringFieldUpdateOperationsInput | string | null
    grantType?: StringFieldUpdateOperationsInput | string
    grantAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reusable?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutReferrerNestedInput
    Transaction?: TransactionUncheckedUpdateManyWithoutReferralCodeNestedInput
  }

  export type ReferralCodeUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    echoAppId?: NullableStringFieldUpdateOperationsInput | string | null
    grantType?: StringFieldUpdateOperationsInput | string
    grantAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reusable?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AppSessionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceName?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    echoApp?: EchoAppUpdateOneRequiredWithoutAppSessionsNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutSessionNestedInput
  }

  export type AppSessionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    deviceName?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutSessionNestedInput
  }

  export type AppSessionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    deviceName?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ApiKeyCreateManyEchoAppInput = {
    id?: string
    keyHash: string
    name?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    lastUsed?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    scope?: string
  }

  export type TransactionCreateManyEchoAppInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    apiKeyId?: string | null
    markUpId?: string | null
    githubLinkId?: string | null
    spendPoolId?: string | null
    userSpendPoolUsageId?: string | null
    referralCodeId?: string | null
    referrerRewardId?: string | null
  }

  export type RefreshTokenCreateManyEchoAppInput = {
    id?: string
    token: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    scope?: string
    sessionId?: string | null
  }

  export type AppMembershipCreateManyEchoAppInput = {
    id?: string
    userId: string
    role: string
    status?: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalSpent: Decimal | DecimalJsLike | number | string
    amountSpent?: Decimal | DecimalJsLike | number | string
    referrerId?: string | null
  }

  export type SpendPoolCreateManyEchoAppInput = {
    id?: string
    name: string
    description?: string | null
    totalPaid?: Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: Decimal | DecimalJsLike | number | string | null
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReferralCodeCreateManyEchoAppInput = {
    id?: string
    code: string
    userId?: string | null
    grantType: string
    grantAmount?: Decimal | DecimalJsLike | number | string | null
    reusable?: boolean
    expiresAt: Date | string
    isUsed?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    usedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReferralRewardCreateManyEchoAppInput = {
    id?: string
    amount?: Decimal | DecimalJsLike | number | string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AppSessionCreateManyEchoAppInput = {
    id?: string
    userId: string
    deviceName?: string | null
    userAgent?: string | null
    ipAddress?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastSeenAt?: Date | string | null
    revokedAt?: Date | string | null
    isArchived?: boolean
  }

  export type ApiKeyUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    keyHash?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    scope?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneRequiredWithoutApiKeysNestedInput
    Transactions?: TransactionUpdateManyWithoutApiKeyNestedInput
  }

  export type ApiKeyUncheckedUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    keyHash?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    scope?: StringFieldUpdateOperationsInput | string
    Transactions?: TransactionUncheckedUpdateManyWithoutApiKeyNestedInput
  }

  export type ApiKeyUncheckedUpdateManyWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    keyHash?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    scope?: StringFieldUpdateOperationsInput | string
  }

  export type TransactionUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    apiKey?: ApiKeyUpdateOneWithoutTransactionsNestedInput
    githubLink?: GithubLinkUpdateOneWithoutTransactionsNestedInput
    markUp?: MarkUpUpdateOneWithoutTransactionsNestedInput
    spendPool?: SpendPoolUpdateOneWithoutTransactionsNestedInput
    transactionMetadata?: TransactionMetadataUpdateOneWithoutTransactionsNestedInput
    user?: UserUpdateOneRequiredWithoutTransactionsNestedInput
    userSpendPoolUsage?: UserSpendPoolUsageUpdateOneWithoutTransactionsNestedInput
    referralCode?: ReferralCodeUpdateOneWithoutTransactionNestedInput
    referrerReward?: ReferralRewardUpdateOneWithoutTransactionNestedInput
  }

  export type TransactionUncheckedUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionUncheckedUpdateManyWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RefreshTokenUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    scope?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneRequiredWithoutRefreshTokensNestedInput
    session?: AppSessionUpdateOneWithoutRefreshTokensNestedInput
  }

  export type RefreshTokenUncheckedUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    scope?: StringFieldUpdateOperationsInput | string
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RefreshTokenUncheckedUpdateManyWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    scope?: StringFieldUpdateOperationsInput | string
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AppMembershipUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amountSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referrer?: ReferralCodeUpdateOneWithoutAppMembershipsNestedInput
    user?: UserUpdateOneRequiredWithoutAppMembershipsNestedInput
  }

  export type AppMembershipUncheckedUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amountSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AppMembershipUncheckedUpdateManyWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amountSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SpendPoolUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    payments?: PaymentUpdateManyWithoutSpendPoolNestedInput
    Transactions?: TransactionUpdateManyWithoutSpendPoolNestedInput
    userUsage?: UserSpendPoolUsageUpdateManyWithoutSpendPoolNestedInput
  }

  export type SpendPoolUncheckedUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    payments?: PaymentUncheckedUpdateManyWithoutSpendPoolNestedInput
    Transactions?: TransactionUncheckedUpdateManyWithoutSpendPoolNestedInput
    userUsage?: UserSpendPoolUsageUncheckedUpdateManyWithoutSpendPoolNestedInput
  }

  export type SpendPoolUncheckedUpdateManyWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    totalPaid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    perUserSpendLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReferralCodeUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    grantType?: StringFieldUpdateOperationsInput | string
    grantAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reusable?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appMemberships?: AppMembershipUpdateManyWithoutReferrerNestedInput
    user?: UserUpdateOneWithoutReferralCodeNestedInput
    Transaction?: TransactionUpdateManyWithoutReferralCodeNestedInput
  }

  export type ReferralCodeUncheckedUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    grantType?: StringFieldUpdateOperationsInput | string
    grantAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reusable?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutReferrerNestedInput
    Transaction?: TransactionUncheckedUpdateManyWithoutReferralCodeNestedInput
  }

  export type ReferralCodeUncheckedUpdateManyWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    grantType?: StringFieldUpdateOperationsInput | string
    grantAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reusable?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsed?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReferralRewardUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    currentForApps?: EchoAppUpdateManyWithoutCurrentReferralRewardNestedInput
    Transaction?: TransactionUpdateManyWithoutReferrerRewardNestedInput
  }

  export type ReferralRewardUncheckedUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    currentForApps?: EchoAppUncheckedUpdateManyWithoutCurrentReferralRewardNestedInput
    Transaction?: TransactionUncheckedUpdateManyWithoutReferrerRewardNestedInput
  }

  export type ReferralRewardUncheckedUpdateManyWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AppSessionUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceName?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutAppSessionsNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutSessionNestedInput
  }

  export type AppSessionUncheckedUpdateWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    deviceName?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutSessionNestedInput
  }

  export type AppSessionUncheckedUpdateManyWithoutEchoAppInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    deviceName?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
  }

  export type TransactionCreateManyApiKeyInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    echoAppId: string
    markUpId?: string | null
    githubLinkId?: string | null
    spendPoolId?: string | null
    userSpendPoolUsageId?: string | null
    referralCodeId?: string | null
    referrerRewardId?: string | null
  }

  export type TransactionUpdateWithoutApiKeyInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    echoApp?: EchoAppUpdateOneRequiredWithoutTransactionsNestedInput
    githubLink?: GithubLinkUpdateOneWithoutTransactionsNestedInput
    markUp?: MarkUpUpdateOneWithoutTransactionsNestedInput
    spendPool?: SpendPoolUpdateOneWithoutTransactionsNestedInput
    transactionMetadata?: TransactionMetadataUpdateOneWithoutTransactionsNestedInput
    user?: UserUpdateOneRequiredWithoutTransactionsNestedInput
    userSpendPoolUsage?: UserSpendPoolUsageUpdateOneWithoutTransactionsNestedInput
    referralCode?: ReferralCodeUpdateOneWithoutTransactionNestedInput
    referrerReward?: ReferralRewardUpdateOneWithoutTransactionNestedInput
  }

  export type TransactionUncheckedUpdateWithoutApiKeyInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionUncheckedUpdateManyWithoutApiKeyInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RefreshTokenCreateManySessionInput = {
    id?: string
    token: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    echoAppId: string
    scope?: string
  }

  export type RefreshTokenUpdateWithoutSessionInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    scope?: StringFieldUpdateOperationsInput | string
    echoApp?: EchoAppUpdateOneRequiredWithoutRefreshTokensNestedInput
    user?: UserUpdateOneRequiredWithoutRefreshTokensNestedInput
  }

  export type RefreshTokenUncheckedUpdateWithoutSessionInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    scope?: StringFieldUpdateOperationsInput | string
  }

  export type RefreshTokenUncheckedUpdateManyWithoutSessionInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    scope?: StringFieldUpdateOperationsInput | string
  }

  export type TransactionCreateManyMarkUpInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    echoAppId: string
    apiKeyId?: string | null
    githubLinkId?: string | null
    spendPoolId?: string | null
    userSpendPoolUsageId?: string | null
    referralCodeId?: string | null
    referrerRewardId?: string | null
  }

  export type TransactionUpdateWithoutMarkUpInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    apiKey?: ApiKeyUpdateOneWithoutTransactionsNestedInput
    echoApp?: EchoAppUpdateOneRequiredWithoutTransactionsNestedInput
    githubLink?: GithubLinkUpdateOneWithoutTransactionsNestedInput
    spendPool?: SpendPoolUpdateOneWithoutTransactionsNestedInput
    transactionMetadata?: TransactionMetadataUpdateOneWithoutTransactionsNestedInput
    user?: UserUpdateOneRequiredWithoutTransactionsNestedInput
    userSpendPoolUsage?: UserSpendPoolUsageUpdateOneWithoutTransactionsNestedInput
    referralCode?: ReferralCodeUpdateOneWithoutTransactionNestedInput
    referrerReward?: ReferralRewardUpdateOneWithoutTransactionNestedInput
  }

  export type TransactionUncheckedUpdateWithoutMarkUpInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionUncheckedUpdateManyWithoutMarkUpInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionCreateManyGithubLinkInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    echoAppId: string
    apiKeyId?: string | null
    markUpId?: string | null
    spendPoolId?: string | null
    userSpendPoolUsageId?: string | null
    referralCodeId?: string | null
    referrerRewardId?: string | null
  }

  export type TransactionUpdateWithoutGithubLinkInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    apiKey?: ApiKeyUpdateOneWithoutTransactionsNestedInput
    echoApp?: EchoAppUpdateOneRequiredWithoutTransactionsNestedInput
    markUp?: MarkUpUpdateOneWithoutTransactionsNestedInput
    spendPool?: SpendPoolUpdateOneWithoutTransactionsNestedInput
    transactionMetadata?: TransactionMetadataUpdateOneWithoutTransactionsNestedInput
    user?: UserUpdateOneRequiredWithoutTransactionsNestedInput
    userSpendPoolUsage?: UserSpendPoolUsageUpdateOneWithoutTransactionsNestedInput
    referralCode?: ReferralCodeUpdateOneWithoutTransactionNestedInput
    referrerReward?: ReferralRewardUpdateOneWithoutTransactionNestedInput
  }

  export type TransactionUncheckedUpdateWithoutGithubLinkInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionUncheckedUpdateManyWithoutGithubLinkInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentCreateManySpendPoolInput = {
    id?: string
    paymentId: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    status: string
    description?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
  }

  export type TransactionCreateManySpendPoolInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    echoAppId: string
    apiKeyId?: string | null
    markUpId?: string | null
    githubLinkId?: string | null
    userSpendPoolUsageId?: string | null
    referralCodeId?: string | null
    referrerRewardId?: string | null
  }

  export type UserSpendPoolUsageCreateManySpendPoolInput = {
    id?: string
    userId: string
    totalSpent?: Decimal | DecimalJsLike | number | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentUpdateWithoutSpendPoolInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutPaymentsNestedInput
  }

  export type PaymentUncheckedUpdateWithoutSpendPoolInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentUncheckedUpdateManyWithoutSpendPoolInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type TransactionUpdateWithoutSpendPoolInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    apiKey?: ApiKeyUpdateOneWithoutTransactionsNestedInput
    echoApp?: EchoAppUpdateOneRequiredWithoutTransactionsNestedInput
    githubLink?: GithubLinkUpdateOneWithoutTransactionsNestedInput
    markUp?: MarkUpUpdateOneWithoutTransactionsNestedInput
    transactionMetadata?: TransactionMetadataUpdateOneWithoutTransactionsNestedInput
    user?: UserUpdateOneRequiredWithoutTransactionsNestedInput
    userSpendPoolUsage?: UserSpendPoolUsageUpdateOneWithoutTransactionsNestedInput
    referralCode?: ReferralCodeUpdateOneWithoutTransactionNestedInput
    referrerReward?: ReferralRewardUpdateOneWithoutTransactionNestedInput
  }

  export type TransactionUncheckedUpdateWithoutSpendPoolInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionUncheckedUpdateManyWithoutSpendPoolInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserSpendPoolUsageUpdateWithoutSpendPoolInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Transactions?: TransactionUpdateManyWithoutUserSpendPoolUsageNestedInput
    user?: UserUpdateOneRequiredWithoutSpendPoolUsageNestedInput
  }

  export type UserSpendPoolUsageUncheckedUpdateWithoutSpendPoolInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Transactions?: TransactionUncheckedUpdateManyWithoutUserSpendPoolUsageNestedInput
  }

  export type UserSpendPoolUsageUncheckedUpdateManyWithoutSpendPoolInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransactionCreateManyUserSpendPoolUsageInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    echoAppId: string
    apiKeyId?: string | null
    markUpId?: string | null
    githubLinkId?: string | null
    spendPoolId?: string | null
    referralCodeId?: string | null
    referrerRewardId?: string | null
  }

  export type TransactionUpdateWithoutUserSpendPoolUsageInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    apiKey?: ApiKeyUpdateOneWithoutTransactionsNestedInput
    echoApp?: EchoAppUpdateOneRequiredWithoutTransactionsNestedInput
    githubLink?: GithubLinkUpdateOneWithoutTransactionsNestedInput
    markUp?: MarkUpUpdateOneWithoutTransactionsNestedInput
    spendPool?: SpendPoolUpdateOneWithoutTransactionsNestedInput
    transactionMetadata?: TransactionMetadataUpdateOneWithoutTransactionsNestedInput
    user?: UserUpdateOneRequiredWithoutTransactionsNestedInput
    referralCode?: ReferralCodeUpdateOneWithoutTransactionNestedInput
    referrerReward?: ReferralRewardUpdateOneWithoutTransactionNestedInput
  }

  export type TransactionUncheckedUpdateWithoutUserSpendPoolUsageInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionUncheckedUpdateManyWithoutUserSpendPoolUsageInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionCreateManyTransactionMetadataInput = {
    id?: string
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    echoAppId: string
    apiKeyId?: string | null
    markUpId?: string | null
    githubLinkId?: string | null
    spendPoolId?: string | null
    userSpendPoolUsageId?: string | null
    referralCodeId?: string | null
    referrerRewardId?: string | null
  }

  export type TransactionUpdateWithoutTransactionMetadataInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    apiKey?: ApiKeyUpdateOneWithoutTransactionsNestedInput
    echoApp?: EchoAppUpdateOneRequiredWithoutTransactionsNestedInput
    githubLink?: GithubLinkUpdateOneWithoutTransactionsNestedInput
    markUp?: MarkUpUpdateOneWithoutTransactionsNestedInput
    spendPool?: SpendPoolUpdateOneWithoutTransactionsNestedInput
    user?: UserUpdateOneRequiredWithoutTransactionsNestedInput
    userSpendPoolUsage?: UserSpendPoolUsageUpdateOneWithoutTransactionsNestedInput
    referralCode?: ReferralCodeUpdateOneWithoutTransactionNestedInput
    referrerReward?: ReferralRewardUpdateOneWithoutTransactionNestedInput
  }

  export type TransactionUncheckedUpdateWithoutTransactionMetadataInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionUncheckedUpdateManyWithoutTransactionMetadataInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AppMembershipCreateManyReferrerInput = {
    id?: string
    userId: string
    echoAppId: string
    role: string
    status?: string
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    totalSpent: Decimal | DecimalJsLike | number | string
    amountSpent?: Decimal | DecimalJsLike | number | string
  }

  export type TransactionCreateManyReferralCodeInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    echoAppId: string
    apiKeyId?: string | null
    markUpId?: string | null
    githubLinkId?: string | null
    spendPoolId?: string | null
    userSpendPoolUsageId?: string | null
    referrerRewardId?: string | null
  }

  export type AppMembershipUpdateWithoutReferrerInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amountSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    echoApp?: EchoAppUpdateOneRequiredWithoutAppMembershipsNestedInput
    user?: UserUpdateOneRequiredWithoutAppMembershipsNestedInput
  }

  export type AppMembershipUncheckedUpdateWithoutReferrerInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amountSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type AppMembershipUncheckedUpdateManyWithoutReferrerInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amountSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type TransactionUpdateWithoutReferralCodeInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    apiKey?: ApiKeyUpdateOneWithoutTransactionsNestedInput
    echoApp?: EchoAppUpdateOneRequiredWithoutTransactionsNestedInput
    githubLink?: GithubLinkUpdateOneWithoutTransactionsNestedInput
    markUp?: MarkUpUpdateOneWithoutTransactionsNestedInput
    spendPool?: SpendPoolUpdateOneWithoutTransactionsNestedInput
    transactionMetadata?: TransactionMetadataUpdateOneWithoutTransactionsNestedInput
    user?: UserUpdateOneRequiredWithoutTransactionsNestedInput
    userSpendPoolUsage?: UserSpendPoolUsageUpdateOneWithoutTransactionsNestedInput
    referrerReward?: ReferralRewardUpdateOneWithoutTransactionNestedInput
  }

  export type TransactionUncheckedUpdateWithoutReferralCodeInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionUncheckedUpdateManyWithoutReferralCodeInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referrerRewardId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EchoAppCreateManyCurrentReferralRewardInput = {
    id?: string
    name: string
    description?: string | null
    profilePictureUrl?: string | null
    bannerImageUrl?: string | null
    homepageUrl?: string | null
    isPublic?: boolean
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    authorizedCallbackUrls?: EchoAppCreateauthorizedCallbackUrlsInput | string[]
  }

  export type TransactionCreateManyReferrerRewardInput = {
    id?: string
    transactionMetadataId?: string | null
    totalCost?: Decimal | DecimalJsLike | number | string
    appProfit?: Decimal | DecimalJsLike | number | string
    markUpProfit?: Decimal | DecimalJsLike | number | string
    referralProfit?: Decimal | DecimalJsLike | number | string
    rawTransactionCost?: Decimal | DecimalJsLike | number | string
    status?: string | null
    isArchived?: boolean
    archivedAt?: Date | string | null
    createdAt?: Date | string
    userId: string
    echoAppId: string
    apiKeyId?: string | null
    markUpId?: string | null
    githubLinkId?: string | null
    spendPoolId?: string | null
    userSpendPoolUsageId?: string | null
    referralCodeId?: string | null
  }

  export type EchoAppUpdateWithoutCurrentReferralRewardInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUpdateManyWithoutEchoAppNestedInput
    ReferralRewards?: ReferralRewardUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUpdateManyWithoutEchoAppNestedInput
  }

  export type EchoAppUncheckedUpdateWithoutCurrentReferralRewardInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutEchoAppNestedInput
    Transactions?: TransactionUncheckedUpdateManyWithoutEchoAppNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutEchoAppNestedInput
    appMemberships?: AppMembershipUncheckedUpdateManyWithoutEchoAppNestedInput
    markUp?: MarkUpUncheckedUpdateOneWithoutEchoAppNestedInput
    githubLink?: GithubLinkUncheckedUpdateOneWithoutEchoAppNestedInput
    spendPools?: SpendPoolUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralCode?: ReferralCodeUncheckedUpdateManyWithoutEchoAppNestedInput
    ReferralRewards?: ReferralRewardUncheckedUpdateManyWithoutEchoAppNestedInput
    appSessions?: AppSessionUncheckedUpdateManyWithoutEchoAppNestedInput
  }

  export type EchoAppUncheckedUpdateManyWithoutCurrentReferralRewardInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    profilePictureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    bannerImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    homepageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorizedCallbackUrls?: EchoAppUpdateauthorizedCallbackUrlsInput | string[]
  }

  export type TransactionUpdateWithoutReferrerRewardInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    apiKey?: ApiKeyUpdateOneWithoutTransactionsNestedInput
    echoApp?: EchoAppUpdateOneRequiredWithoutTransactionsNestedInput
    githubLink?: GithubLinkUpdateOneWithoutTransactionsNestedInput
    markUp?: MarkUpUpdateOneWithoutTransactionsNestedInput
    spendPool?: SpendPoolUpdateOneWithoutTransactionsNestedInput
    transactionMetadata?: TransactionMetadataUpdateOneWithoutTransactionsNestedInput
    user?: UserUpdateOneRequiredWithoutTransactionsNestedInput
    userSpendPoolUsage?: UserSpendPoolUsageUpdateOneWithoutTransactionsNestedInput
    referralCode?: ReferralCodeUpdateOneWithoutTransactionNestedInput
  }

  export type TransactionUncheckedUpdateWithoutReferrerRewardInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionUncheckedUpdateManyWithoutReferrerRewardInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionMetadataId?: NullableStringFieldUpdateOperationsInput | string | null
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    appProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markUpProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    referralProfit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rawTransactionCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    echoAppId?: StringFieldUpdateOperationsInput | string
    apiKeyId?: NullableStringFieldUpdateOperationsInput | string | null
    markUpId?: NullableStringFieldUpdateOperationsInput | string | null
    githubLinkId?: NullableStringFieldUpdateOperationsInput | string | null
    spendPoolId?: NullableStringFieldUpdateOperationsInput | string | null
    userSpendPoolUsageId?: NullableStringFieldUpdateOperationsInput | string | null
    referralCodeId?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}